<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Web练习题</title>
      <link href="/post/2/"/>
      <url>/post/2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>菜鸡小白，日常<strong>练练web</strong></p><h2 id="信息收集（1-20）"><a href="#信息收集（1-20）" class="headerlink" title="信息收集（1-20）"></a>信息收集（1-20）</h2><h3 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h3><p>查看网站源码即可拿到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web1.png">    </p><h3 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h3><p>无法使用右键查看源代码，可以在 URL 前添加 <code>view-source:</code>查看源代码<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web2.png"></p><h3 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h3><p>查看源码无果，尝试查看请求头与响应头，在响应头中看到了 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web3.png">    </p><p>使用BP抓包也是一样的效果    <img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web3%EF%BC%881%EF%BC%89.png"></p><h3 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h3><p>题目提示robots:</p><blockquote><p>robots协议（也称爬虫协议，机器人协议等）的全称是“网络爬虫排除协议”，网站通过robots协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。规定只能小写且为 txt 文件</p></blockquote><p>访问网站的 robots.txt 看到放置 flag 的文件<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web4.png"></p><p>​    </p><p>访问放置 flag 的文件，看到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web4(1).png"></p><p>​    </p><h3 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h3><p>题目提示 phps 源码泄露，index.php 是当前页面，所以我们修改一下访问 index.phps </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://1b24977f-7280-490e-a21f-377af3512a46.challenge.ctf.show/index.phps</span><br></pre></td></tr></table></figure><p>提示下载。我们下载后打开，即可看到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web5.png"></p><p>​    </p><h3 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h3><p>题目提示 “源码解压到当前目录，收工”  说明 <a href="http://www.zip/">www.zip</a> 压缩包还放在站点下，我们构造 URL 访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://574a895f-82cb-4bad-b6a4-df14e4f73843.challenge.ctf.show/www.zip</span><br></pre></td></tr></table></figure><p>下载，打开可以看到 fl000g.txt<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web6.png">        </p><p>但是这不是 flag，提交时显示错误，于是我们访问 fl000g.txt 得到真正的 flag </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://574a895f-82cb-4bad-b6a4-df14e4f73843.challenge.ctf.show/fl000g.txt</span><br></pre></td></tr></table></figure><h3 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h3><p>题目提示 “ 版本控制很重要，但不要部署到生产环境更重要 ”</p><p>由于我水平有限，版本控制系统 首先联想到的是 git，这题可能是有关 git 泄露问题</p><blockquote><p>在运行 git init 初始化代码库的时候，会在当前目录下面产生一个.git 的隐藏目录，用来记录代码的变更记录等等。<br>在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。</p></blockquote><p>于是访问 <code>.git/index.php</code> 构造 URL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://5fc191d6-fc10-4e6b-8dd7-8257ad22c140.challenge.ctf.show/.git/index.php</span><br></pre></td></tr></table></figure><p>很巧就出了 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web7.png">    </p><h3 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h3><p>提示和 web7 一样，但使用同样的方式是行不通了。查阅资料有关 版本控制系统 的发现还有 SVN 源码泄露的漏洞，</p><blockquote><p>资料显示：<br>  在使用SVN(subversion)管理本地代码过程中，会自动生成一个隐藏文件夹，其中包含重要的源代码信息。但一些网站管理员在发布代码时，不愿意使用‘导出’功能，而是直接复制代码文件夹到WEB服务器上，这就使隐藏文件夹被暴露于外网环境，这使得渗透工程师可以借助其中包含版本信息追踪的网站文件，逐步摸清站点结构。在服务器上布署代码时。如果是使用 svn checkout 功能来更新代码，而没有配置好目录访问权限，则会存在此漏洞。黑客利用此漏洞，可以下载整套网站的源代码。</p></blockquote><p>与 git 相似，我们访问 .svn 构造 URL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://f135f114-0527-457c-871d-0aec223a5913.challenge.ctf.show/.svn/</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web8.png"></p><h3 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h3><p>题目提示 “ 使用vim 编辑时意外退出” ，所以是 vim 造成的泄露。</p><blockquote><p>资料显示：<br>vim是一款编辑工具，当你非正常关闭vim编辑器时（比如直接关闭终端或者电脑断电），会生成一个.swp文件，这个文件是一个临时交换文件，用来备份缓冲区中的内容。意思就是使用vim 编辑 意外退出会产生临时文件</p><p>需要注意的是如果你并没有对文件进行修改，而只是读取文件，是不会产生<code>.swp</code>文件的。</p></blockquote><p>我们访问文件 <code>index.php.swp</code> 构造 URL </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://872954f8-ed97-4e44-96b3-b6333548bd28.challenge.ctf.show/index.php.swp</span><br></pre></td></tr></table></figure><p>下载文件，打开即可看到 flag</p><h3 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h3><p>题目提示 ”cookie“  所以我们查看本地存储的 cookie<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web10.png">    </p><p>进行一下 URL 解码，拿到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web10(1).png">    </p><h3 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h3><p>题目提示 “域名其实也可以隐藏信息，比如 ctfshow.com 就隐藏了一条信息”  和域名有关的信息收集</p><p>我们对该域名进行DNS检测 ，可用阿里云查询链接：<a href="https://zijian.aliyun.com/">https://zijian.aliyun.com/</a><br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web11.png">    </p><h3 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h3><p>题目提示“有时候网站上的公开信息，就是管理员常用密码”  可能与管理员有关</p><p>查看是否有路径可拿，访问 robots.txt ,发现存在管理员的登录目录admin，访问，但需要账号密码。<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web12.png">    </p><p>根据提示，密码应该就在此网站公开，找到页脚，有一串数字，试试。<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web12(1).png">    </p><p>登录得到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web12(2).png">    </p><h3 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h3><p>题目提示 “技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码”</p><p>查找页面的可疑的文档，又是在页脚发现一个文件超链接<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web13.png">    </p><p>打开后发现是一个使用文档，有后台登录地址及身份<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web13(1).png">    </p><p>直接访问显示错误，我们将 your-domain 改为我们题目的链接，构造 URL ，访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://855583d1-b17f-4687-9201-361a2c8dfedb.challenge.ctf.show/system1103/login.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web13(2).png">    </p><p>登陆成功后即可看到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web13(3).png">    </p><h3 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h3><p>题目提示 “有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人”</p><p>所以我们直接访问 editor ，发现进入到了一个编辑界面 ，在编辑界面的这 3 个按钮中可以发现一个 文件空间<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web14.png"></p><p>点击文件空间可以发现可以进行 目录遍历<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web14(1).png"></p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web14(2).png">    </p><p>寻找一番，发现 flag 在 var/www/html/nothinghere/fl000g.txt 下，于是构造 URL 访问 ,得到 flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://1bef8e6b-a152-4327-a454-c78e8bb52230.challenge.ctf.show/nothinghere/fl000g.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web14(3).png">    </p><h3 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h3><p>题目提示 “公开的信息比如邮箱，可能造成信息泄露，产生严重后果”  在页脚发现一个邮箱，暂时还不知道思路</p><p>在 URL 尝试访问 admin，发现可以<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15.png">    </p><p>不知道账号密码，尝试 用户为 1 显示用户名错误，尝试 用户为 admin 显示密码错误，所以 admin账户存在</p><p>我们点击忘记密码，发现有密保 “我的所在地是哪个城市？”<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15(1).png">    </p><p>这可把我整蒙了。这和邮箱有什么关系？？ 随后发觉这是个QQ邮箱，于是搜索该QQ号，发现城市名是 西安<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15(2).png"></p><p>重置密码成功<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15(3).png"></p><p>然后我们就可以开开心心登陆后台了，拿到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web15(4).png"></p><h3 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h3><p>题目提示 “对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露” 所以跟探针有关</p><blockquote><p>资料显示：<br>php探针是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡流量、系统负载、服务器时间等信息。是一个查看服务器信息的工具。<br>比如查看服务器支持什么，不支持什么，空间速度等等状况！</p></blockquote><p>本题与探针有关，尝试访问 <code>tz.php</code>  构造 URL </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://9ef070e8-9da7-4f0e-b4f6-9f49f0cf58f0.challenge.ctf.show/tz.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web16.png"></p><p>点击 PHPINFO<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web16(1).png"></p><p>在页面内寻找 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web16(2).png"></p><h3 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h3><p>题目提示 查找 ctfer.com 的真实 IP</p><p>使用 fofa 查找即可<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web17.png">    </p><h3 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h3><p>打开本关卡是一个小游戏，查看它的 JS 代码，当分数高大于100时会输出一串东西<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web18.png">    </p><p>将编码拿去Unicode解码一下<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web18(1).png">    </p><p>根据 “你赢了，去幺幺零点皮爱吃皮看看”提示，访问 <code>110.php</code>  构造 URL </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://c942730e-776b-45cd-bcd4-573d4368b08e.challenge.ctf.show/110.php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web18(2).png">    </p><h3 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h3><p>题目提示 “密钥什么的，就不要放在前端了”</p><p>查看源码发现一些信息，显示如果  post 请求满足</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&amp;pazzword=a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04</span><br></pre></td></tr></table></figure><p> 就能打印出 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web19.png">    </p><p>于是构造 post 请求，拿到 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web19(1).png">    </p><h3 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h3><p>题目提示“mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了”  跟mdb文件泄露有关</p><p>搜索资料过后发现： 直接查看 URL 路径添加 /db/db.mdb </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ad92e72a-2c61-4ae7-a0d1-e3b4761affbc.challenge.ctf.show/db/db.mdb</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web20.png">    </p><p>下载文件通过 txt 打开，搜索 flag<br><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/web20(1).png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对某公司渗透实测</title>
      <link href="/post/1/"/>
      <url>/post/1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这阵子练习太多的CTF有点乏了，打算回头看看老本行，但是碍于本人太菜了😭，只能找找相对简单，大师傅们不屑一顾的站点，于是乎在我不经意间发现了某公司网站</p><h2 id="漏掉的点"><a href="#漏掉的点" class="headerlink" title="漏掉的点"></a>漏掉的点</h2><p>起初我是奔着弱口令去的，但对该公司的后台管理系统疯狂尝试了半天后无果，你以为我就这样放弃了吗？<del>那你真的是猜的很准</del>。</p><p>于是我又回到公司主页，随手在url 里添加了id 参数，不试不知道，一试吓一跳。当将数值取1 时页面有反馈    </p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo@master/file/3575.png">    </p><h2 id="尝试注入"><a href="#尝试注入" class="headerlink" title="尝试注入"></a>尝试注入</h2><p>在发现参数可改且有不同反馈之后进行下一步测试</p><p>先试试不考虑过滤的查显示位 sql 语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span><span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/3576.png">    </p><p>意不意外，惊不惊喜？该公司网站并没有对敏感字符做过滤，于是乎我们就查到了一些数据库里的信息。</p><p>发现数据库中存在 admin表，表中有 id,username,password,quanxian 参数</p><p>废话不多说，赶紧看一下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> group_concat(concat(id,<span class="number">0x7e</span>,username,<span class="number">0x3A</span>,password,<span class="number">0x3A</span>,quanxian,<span class="number">0x7e</span>)) <span class="keyword">from</span> admin),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/3577.png"></p><p>可以看到用户名为 nie 的具有admin权限，心里美滋滋，解密后就可以登录后台啦嘿嘿。密码是加密过的</p><p>于是反手就是丢解密工具里去了。。。。。。</p><p><img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/71609.png">    </p><p>真服了。。。。。。</p><p>​                                                            <img src="https://cdn.jsdelivr.net/gh/MTRleed/PicGo/file/0g9nf.jpg"></p><p>既然解密未果，那此次的渗透就到此为止啦 ~</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>对目标漏洞的寻找要全方位，不放过任何一个细节</strong></p><div align="center"> 好啦，又水一个洞 </font>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注入 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
